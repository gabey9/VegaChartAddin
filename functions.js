!function(){function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e){return function(e){if(Array.isArray(e))return a(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return a(e,t);var r={}.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?a(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,r=Array(t);a<t;a++)r[a]=e[a];return r}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),a.push.apply(a,r)}return a}function n(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach(function(t){o(e,t,a[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))})}return e}function o(t,a,r){return(a=function(t){var a=function(t){if("object"!=e(t)||!t)return t;var a=t[Symbol.toPrimitive];if(void 0!==a){var r=a.call(t,"string");if("object"!=e(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(a)?a:a+""}(a))in t?Object.defineProperty(t,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[a]=r,t}function i(e){return new Promise(function(t){try{if(!e||e.length<2)return void t("Error: Need at least header row + one data row");var a=e[0],r=e.slice(1),n=r.map(function(e){var t={};return a.forEach(function(a,r){t[a]=e[r]}),t}),i=[],l=a.slice(1);n.forEach(function(e){l.forEach(function(t){null!==e[t]&&void 0!==e[t]&&""!==e[t]&&i.push(o(o(o({},a[0],e[a[0]]),"series",t),"value",parseFloat(e[t])||0))})});var s=o({$schema:"https://vega.github.io/schema/vega-lite/v6.json",description:"Multi-series line chart from Excel selection",background:"white",config:{view:{stroke:"transparent"}},data:{values:i},mark:{type:"line",point:!1,tooltip:!0,strokeWidth:2},encoding:{x:{field:a[0],type:"ordinal",axis:{title:a[0],labelFontSize:12,titleFontSize:14,labelAngle:0}},y:{field:"value",type:"quantitative",axis:{title:"Value",labelFontSize:12,titleFontSize:14}},color:{field:"series",type:"nominal",scale:{scheme:"category10"},legend:{title:"Series",titleFontSize:12,labelFontSize:11}}}},"config",{font:"Segoe UI",axis:{labelColor:"#605e5c",titleColor:"#323130",gridColor:"#f3f2f1"},legend:{titleColor:"#323130",labelColor:"#605e5c"},point:{size:60,filled:!0}});createChart(s,"line",a,r).then(function(){return t("")}).catch(function(e){return t("Error: ".concat(e.message))})}catch(e){t("Error: ".concat(e.message))}})}function l(e){return new Promise(function(t){try{if(!e||e.length<2)return void t("Error: Need at least header row + one data row");var a=e[0],r=e.slice(1),i=o({$schema:"https://vega.github.io/schema/vega-lite/v6.json",description:"Bar chart from Excel selection",background:"white",config:{view:{stroke:"transparent"}},data:{values:r.map(function(e){var t={};return a.forEach(function(a,r){t[a]=e[r]}),t})},mark:{type:"bar",tooltip:!0},encoding:n({x:{field:a[0],type:"nominal",axis:{title:a[0],labelFontSize:12,titleFontSize:14}},y:{field:a[1],type:"quantitative",axis:{title:a[1],labelFontSize:12,titleFontSize:14}}},a.length>=3&&{color:{field:a[2],type:"nominal",legend:{title:a[2],titleFontSize:12,labelFontSize:11}}})},"config",{font:"Segoe UI",axis:{labelColor:"#605e5c",titleColor:"#323130",gridColor:"#f3f2f1"},legend:{titleColor:"#323130",labelColor:"#605e5c"}});createChart(i,"bar",a,r).then(function(){return t("")}).catch(function(e){return t("Error: ".concat(e.message))})}catch(e){t("Error: ".concat(e.message))}})}function s(e){return new Promise(function(t){try{if(!e||e.length<2)return void t("Error: Need at least header row + one data row");var a=e[0],r=e.slice(1);if(a.length<2)return void t("Error: Pie chart requires 2 columns (Category, Value)");if(r.some(function(e){return isNaN(e[1])||e[1]<=0}))return void t("Error: Pie chart values must be positive numbers");var n={$schema:"https://vega.github.io/schema/vega-lite/v6.json",background:"white",config:{view:{stroke:"transparent"}},description:"Pie chart from Excel selection",data:{values:r.map(function(e){var t={};return a.forEach(function(a,r){t[a]=e[r]}),t})},mark:{type:"arc",outerRadius:120},encoding:{theta:{field:a[1],type:"quantitative"},color:{field:a[0],type:"nominal"}}};createChart(n,"pie",a,r).then(function(){return t("")}).catch(function(e){return t("Error: ".concat(e.message))})}catch(e){t("Error: ".concat(e.message))}})}function c(e){return new Promise(function(t){try{if(!e||e.length<2)return void t("Error: Need at least header row + one data row");var a=e[0],r=e.slice(1),i=o({$schema:"https://vega.github.io/schema/vega-lite/v6.json",description:"Area chart from Excel selection",background:"white",config:{view:{stroke:"transparent"}},data:{values:r.map(function(e){var t={};return a.forEach(function(a,r){t[a]=e[r]}),t})},mark:{type:"area",tooltip:!0,opacity:.7},encoding:n({x:{field:a[0],type:"ordinal",axis:{title:a[0],labelFontSize:12,titleFontSize:14}},y:{field:a[1],type:"quantitative",axis:{title:a[1],labelFontSize:12,titleFontSize:14}}},a.length>=3&&{color:{field:a[2],type:"nominal",legend:{title:a[2],titleFontSize:12,labelFontSize:11}}})},"config",{font:"Segoe UI",axis:{labelColor:"#605e5c",titleColor:"#323130",gridColor:"#f3f2f1"},legend:{titleColor:"#323130",labelColor:"#605e5c"}});createChart(i,"area",a,r).then(function(){return t("")}).catch(function(e){return t("Error: ".concat(e.message))})}catch(e){t("Error: ".concat(e.message))}})}function u(e){return new Promise(function(t){try{if(!e||e.length<2)return void t("Error: Need at least header row + one data row");var a=e[0],r=e.slice(1);if(a.length<2)return void t("Error: Scatter plot requires at least 2 columns (X, Y values)");var i=o({$schema:"https://vega.github.io/schema/vega-lite/v6.json",description:"Colored scatter plot from Excel selection",background:"white",config:{view:{stroke:"transparent"}},data:{values:r.map(function(e){var t={};return a.forEach(function(a,r){t[a]=e[r]}),t})},mark:{type:"point",size:100,tooltip:!0},encoding:n(n({x:{field:a[0],type:"quantitative",scale:{zero:!1},axis:{title:a[0],labelFontSize:12,titleFontSize:14}},y:{field:a[1],type:"quantitative",scale:{zero:!1},axis:{title:a[1],labelFontSize:12,titleFontSize:14}}},a.length>=3&&{color:{field:a[2],type:"nominal",legend:{title:a[2],titleFontSize:12,labelFontSize:11}}}),a.length>=4&&{shape:{field:a[3],type:"nominal",legend:{title:a[3],titleFontSize:12,labelFontSize:11}}})},"config",{font:"Segoe UI",axis:{labelColor:"#605e5c",titleColor:"#323130",gridColor:"#f3f2f1"},legend:{titleColor:"#323130",labelColor:"#605e5c"}});createChart(i,"scatter",a,r).then(function(){return t("")}).catch(function(e){return t("Error: ".concat(e.message))})}catch(e){t("Error: ".concat(e.message))}})}function d(e){return new Promise(function(t){try{if(!e||e.length<2)return void t("Error: Need at least header row + one data row");var a=e[0],r=e.slice(1);if(a.length<2)return void t("Error: Radial chart requires 2 columns (Category, Value)");var n={$schema:"https://vega.github.io/schema/vega-lite/v6.json",description:"Radial chart from Excel selection",background:"white",config:{view:{stroke:"transparent"}},data:{values:r.map(function(e){var t={};return a.forEach(function(a,r){t[a]=e[r]}),t})},layer:[{mark:{type:"arc",innerRadius:20,stroke:"#fff"}},{mark:{type:"text",radiusOffset:10},encoding:{text:{field:a[1],type:"quantitative"}}}],encoding:{theta:{field:a[1],type:"quantitative",stack:!0},radius:{field:a[1],scale:{type:"sqrt",zero:!0,rangeMin:20}},color:{field:a[0],type:"nominal",legend:null}}};createChart(n,"radial",a,r).then(function(){return t("")}).catch(function(e){return t("Error: ".concat(e.message))})}catch(e){t("Error: ".concat(e.message))}})}function m(e){return new Promise(function(t){try{if(!e||e.length<2)return void t("Error: Need at least header row + one data row");var a=e[0],r=e.slice(1);if(a.length<2)return void t("Error: Box plot requires 2 columns (Category, Values)");var n=r.filter(function(e){return e[0]&&!isNaN(+e[1])}).map(function(e){return{category:e[0],value:+e[1]}});if(0===n.length)return void t("Error: No valid numeric data found for box plot");createChart({$schema:"https://vega.github.io/schema/vega-lite/v6.json",description:"Box plot from Excel selection",data:{values:n},mark:{type:"boxplot",extent:"min-max"},encoding:{x:{field:"category",type:"nominal"},y:{field:"value",type:"quantitative",scale:{zero:!1}},color:{field:"category",type:"nominal",legend:null}}},"box",a,r).then(function(){return t("")}).catch(function(e){return t("Error: ".concat(e.message))})}catch(e){t("Error: ".concat(e.message))}})}function f(e){return new Promise(function(a){try{if(!e||e.length<2)return void a("Error: Need at least header row + one data row");var r=e[0],n=e.slice(1);if(r.length<3)return void a("Error: Radar chart requires at least 3 columns (Series, Dimension1, Dimension2, ...)");var o=[],i=r.slice(1);n.forEach(function(e,t){var a=e[r[0]]||"Series ".concat(t+1);i.forEach(function(n){var i=parseFloat(e[r.indexOf(n)])||0;o.push({series:a,dimension:n,value:i,category:t})})});var l=t(new Set(o.map(function(e){return e.dimension}))),s={$schema:"https://vega.github.io/schema/vega/v6.json",description:"Radar chart from Excel selection",width:400,height:400,padding:60,autosize:{type:"none",contains:"padding"},background:"white",config:{view:{stroke:"transparent"}},signals:[{name:"radius",update:"width / 2"}],data:[{name:"table",values:o},{name:"dimensions",values:l.map(function(e){return{dimension:e}})}],scales:[{name:"angular",type:"point",range:{signal:"[-PI, PI]"},padding:.5,domain:l},{name:"radial",type:"linear",range:{signal:"[0, radius]"},zero:!0,nice:!0,domain:{data:"table",field:"value"},domainMin:0},{name:"color",type:"ordinal",domain:{data:"table",field:"category"},range:["#0078d4","#00bcf2","#40e0d0","#00cc6a","#10893e","#107c10","#bad80a","#ffb900","#ff8c00","#d13438"]}],encode:{enter:{x:{signal:"radius"},y:{signal:"radius"}}},marks:[{type:"group",name:"categories",zindex:1,from:{facet:{data:"table",name:"facet",groupby:["category","series"]}},marks:[{type:"line",name:"category-line",from:{data:"facet"},encode:{enter:{interpolate:{value:"linear-closed"},x:{signal:"scale('radial', datum.value) * cos(scale('angular', datum.dimension))"},y:{signal:"scale('radial', datum.value) * sin(scale('angular', datum.dimension))"},stroke:{scale:"color",field:"category"},strokeWidth:{value:2},fill:{scale:"color",field:"category"},fillOpacity:{value:.1},strokeOpacity:{value:.8}}}},{type:"symbol",name:"category-points",from:{data:"facet"},encode:{enter:{x:{signal:"scale('radial', datum.value) * cos(scale('angular', datum.dimension))"},y:{signal:"scale('radial', datum.value) * sin(scale('angular', datum.dimension))"},size:{value:50},fill:{scale:"color",field:"category"},stroke:{value:"white"},strokeWidth:{value:1}}}}]},{type:"rule",name:"radial-grid",from:{data:"dimensions"},zindex:0,encode:{enter:{x:{value:0},y:{value:0},x2:{signal:"radius * cos(scale('angular', datum.dimension))"},y2:{signal:"radius * sin(scale('angular', datum.dimension))"},stroke:{value:"#e1e4e8"},strokeWidth:{value:1}}}},{type:"text",name:"dimension-label",from:{data:"dimensions"},zindex:1,encode:{enter:{x:{signal:"(radius + 20) * cos(scale('angular', datum.dimension))"},y:{signal:"(radius + 20) * sin(scale('angular', datum.dimension))"},text:{field:"dimension"},align:[{test:"abs(scale('angular', datum.dimension)) > PI / 2",value:"right"},{value:"left"}],baseline:[{test:"scale('angular', datum.dimension) > 0",value:"top"},{test:"scale('angular', datum.dimension) == 0",value:"middle"},{value:"bottom"}],fill:{value:"#323130"},fontWeight:{value:"bold"},font:{value:"Segoe UI"},fontSize:{value:12}}}},{type:"line",name:"outer-line",from:{data:"radial-grid"},encode:{enter:{interpolate:{value:"linear-closed"},x:{field:"x2"},y:{field:"y2"},stroke:{value:"#8a8886"},strokeWidth:{value:2},strokeOpacity:{value:.6}}}}]};createChart(s,"radar",r,n).then(function(){return a("")}).catch(function(e){return a("Error: ".concat(e.message))})}catch(e){a("Error: ".concat(e.message))}})}function g(e){return new Promise(function(a){try{if(!e||e.length<2)return void a("Error: Need at least header row + one data row");var r=e[0],i=e.slice(1);if(r.length<3)return void a("Error: Waterfall chart requires 3 columns (Category, Amount, Type)");var l=i.map(function(e){var t={};return r.forEach(function(a,r){t[a]=e[r]}),t}),s=t(l);s.length>0&&(s[s.length-1]=n(n({},s[s.length-1]),{},o({},r[1],0)));var c=l.length,u=Math.max(400,Math.min(1600,50*c)),d=Math.max.apply(Math,t(l.map(function(e){return Math.abs(e[r[1]])}))),m=o({$schema:"https://vega.github.io/schema/vega-lite/v6.json",description:"Waterfall chart with multiple subtotals",background:"white",data:{values:s},config:{view:{stroke:"transparent"}},width:u,height:Math.max(300,Math.min(600,d/100+200)),transform:[{window:[{op:"sum",field:r[1],as:"sum"}]},{window:[{op:"lead",field:r[0],as:"lead"}]},{calculate:"datum.lead === null ? datum.".concat(r[0]," : datum.lead"),as:"lead"},{calculate:"datum.".concat(r[2]," == 'total' ? 0 : datum.sum - datum.").concat(r[1]),as:"previous_sum"},{calculate:"datum.".concat(r[2]," == 'total' ? datum.sum : datum.").concat(r[1]),as:"amount"},{calculate:"datum.".concat(r[2]," == 'total' ? datum.").concat(r[1]," / 2 : (datum.sum + datum.previous_sum) / 2"),as:"center"},{calculate:"datum.".concat(r[2]," == 'total' ? datum.sum : (datum.").concat(r[1]," > 0 ? '+' : '') + datum.").concat(r[1]),as:"text_amount"},{calculate:"(datum.sum + datum.previous_sum) / 2",as:"center"},{window:[{op:"rank",as:"group_index"}],frame:[null,null],groupby:[r[0]]},{calculate:"\n            datum.".concat(r[2]," == 'total'\n                ? '#00B0F0'\n                : datum.amount >= 0\n                ? (datum.group_index == 1 ? '#70AD47'\n                    : (datum.group_index == 2 ? '#8BC97A'\n                    : (datum.group_index == 3 ? '#A7DA9D'\n                    : '#C3EBC0')))\n                : (datum.group_index == 1 ? '#E15759'\n                    : (datum.group_index == 2 ? '#EC7A7C'\n                    : (datum.group_index == 3 ? '#F29C9D'\n                    : '#F8BEBF')))\n            "),as:"bar_color"}],encoding:{x:{field:r[0],type:"ordinal",sort:null,axis:{labelAngle:-45,title:null},scale:{paddingInner:.05,paddingOuter:.025}}},layer:[{mark:{type:"bar",size:60},encoding:{y:{field:"previous_sum",type:"quantitative",title:null},y2:{field:"sum"},color:{field:"bar_color",type:"nominal",scale:null}}},{mark:{type:"text",fontWeight:"bold",baseline:"middle"},encoding:{y:{field:"center",type:"quantitative"},text:{field:"text_amount",type:"nominal"},color:{condition:[{test:"datum.".concat(r[2]," == 'total'"),value:"#725a30"}],value:"white"}}}]},"config",{text:{fontWeight:"bold",color:"#D9D9D9"}});createChart(m,"waterfall",r,i).then(function(){return a("")}).catch(function(e){return a("Error: ".concat(e.message))})}catch(e){a("Error: ".concat(e.message))}})}function p(e){return new Promise(function(t){try{if(!e||e.length<2)return void t("Error: Need at least header row + one data row");var a=e[0],r=e.slice(1);if(a.length<2)return void t("Error: Sunburst chart requires at least 2 columns (Parent, Child, Value optional)");var n=new Map;r.forEach(function(e,t){var r=e[a[0]]||"",o=e[a[1]]||"node_".concat(t),i=a.length>=3&&parseFloat(e[a[2]])||1;if(r&&!n.has(r)&&n.set(r,{id:r,parent:"",name:r,size:0}),n.has(o)){var l=n.get(o);l.parent=r,l.size=i}else n.set(o,{id:o,parent:r,name:o,size:i})});var o=Array.from(n.values()),i=new Set(o.map(function(e){return e.id}));o.forEach(function(e){e.parent&&!i.has(e.parent)&&(e.parent="")});var l=o.length,s=Math.max(400,Math.min(600,15*l+300));createChart({$schema:"https://vega.github.io/schema/vega/v6.json",description:"Sunburst chart from Excel selection",width:s,height:s,padding:10,autosize:"none",background:"white",config:{view:{stroke:"transparent"}},signals:[{name:"centerX",update:"width / 2"},{name:"centerY",update:"height / 2"},{name:"outerRadius",update:"min(width, height) / 2 - 10"}],data:[{name:"tree",values:o,transform:[{type:"stratify",key:"id",parentKey:"parent"},{type:"partition",field:"size",sort:{field:"size",order:"descending"},size:[{signal:"2 * PI"},{signal:"outerRadius"}],as:["a0","r0","a1","r1","depth","children"]}]}],scales:[{name:"color",type:"ordinal",domain:{data:"tree",field:"depth"},range:["#0078d4","#00bcf2","#40e0d0","#00cc6a","#10893e","#107c10","#bad80a","#ffb900","#ff8c00","#d13438","#8764b8","#e3008c","#00b7c3","#038387","#486991"]},{name:"opacity",type:"linear",domain:{data:"tree",field:"depth"},range:[.8,.4]}],marks:[{type:"arc",from:{data:"tree"},encode:{enter:{x:{signal:"centerX"},y:{signal:"centerY"},stroke:{value:"white"},strokeWidth:{value:1}},update:{startAngle:{field:"a0"},endAngle:{field:"a1"},innerRadius:{field:"r0"},outerRadius:{field:"r1"},fill:{scale:"color",field:"depth"},fillOpacity:{scale:"opacity",field:"depth"}}}},{type:"text",from:{data:"tree"},encode:{enter:{x:{signal:"centerX"},y:{signal:"centerY"},radius:{signal:"(datum.r0 + datum.r1) / 2"},theta:{signal:"(datum.a0 + datum.a1) / 2"},fill:{value:"#323130"},font:{value:"Segoe UI"},fontSize:{value:10},fontWeight:{value:"bold"},align:{value:"center"},baseline:{value:"middle"}},update:{text:{signal:"(datum.r1 - datum.r0) > 20 && (datum.a1 - datum.a0) > 0.3 ? datum.name : ''"},opacity:{signal:"(datum.r1 - datum.r0) > 20 && (datum.a1 - datum.a0) > 0.3 ? 1 : 0"}}}}]},"sunburst",a,r).then(function(){return t("")}).catch(function(e){return t("Error: ".concat(e.message))})}catch(e){t("Error: ".concat(e.message))}})}function h(e){return new Promise(function(a){try{if(!e||e.length<2)return void a("Error: Need at least header row + one data row");var r,n=e[0],o=e.slice(1);if(n.length<3)return void a("Error: Treemap chart requires 3 columns (Parent, Category, Value)");n.length>=3?(r=o.map(function(e,t){return{id:"".concat(e[n[1]],"_").concat(t),name:e[n[1]],parent:e[n[0]]||"root",size:parseFloat(e[n[2]])||0}}),t(new Set(r.map(function(e){return e.parent}))).forEach(function(e){"root"===e||r.find(function(t){return t.id===e})||r.push({id:e,name:e,parent:"root",size:0})}),r.push({id:"root",name:"Root",parent:"",size:0})):r=[{id:"root",name:"Root",parent:"",size:0}].concat(t(o.map(function(e,t){return{id:"item_".concat(t),name:e[n[1]],parent:"root",size:parseFloat(e[n[2]])||0}}))),createChart({$schema:"https://vega.github.io/schema/vega/v5.json",description:"Treemap visualization from Excel data",background:"white",width:600,height:400,padding:5,autosize:"fit",data:[{name:"tree",values:r,transform:[{type:"stratify",key:"id",parentKey:"parent"},{type:"treemap",field:"size",sort:{field:"value"},round:!0,method:"squarify",ratio:1.6,size:[{signal:"width"},{signal:"height"}]}]},{name:"nodes",source:"tree",transform:[{type:"filter",expr:"datum.children"}]},{name:"leaves",source:"tree",transform:[{type:"filter",expr:"!datum.children"}]}],scales:[{name:"color",type:"ordinal",domain:{data:"nodes",field:"name"},range:["#0078d4","#00bcf2","#40e0d0","#00cc6a","#10893e","#107c10","#bad80a","#ffb900","#ff8c00","#d13438"]},{name:"fontSize",type:"ordinal",domain:[0,1,2,3],range:[20,16,12,10]},{name:"opacity",type:"ordinal",domain:[0,1,2,3],range:[.3,.6,.8,1]}],marks:[{type:"rect",from:{data:"nodes"},interactive:!1,encode:{enter:{fill:{scale:"color",field:"name"},fillOpacity:{scale:"opacity",field:"depth"}},update:{x:{field:"x0"},y:{field:"y0"},x2:{field:"x1"},y2:{field:"y1"},stroke:{value:"#ffffff"},strokeWidth:{value:1}}}},{type:"rect",from:{data:"leaves"},encode:{enter:{stroke:{value:"#ffffff"},strokeWidth:{value:2}},update:{x:{field:"x0"},y:{field:"y0"},x2:{field:"x1"},y2:{field:"y1"},fill:{value:"transparent"},tooltip:{signal:"{'Category': datum.name, 'Value': datum.size, 'Parent': datum.parent}"}},hover:{fill:{value:"#323130"},fillOpacity:{value:.1}}}},{type:"text",from:{data:"leaves"},interactive:!1,encode:{enter:{font:{value:"Segoe UI, Arial, sans-serif"},align:{value:"center"},baseline:{value:"middle"},fill:{value:"#323130"},fontWeight:{value:"bold"},text:{field:"name"},fontSize:{scale:"fontSize",field:"depth"}},update:{x:{signal:"0.5 * (datum.x0 + datum.x1)"},y:{signal:"0.5 * (datum.y0 + datum.y1)"},opacity:{signal:"(datum.x1 - datum.x0) > 50 && (datum.y1 - datum.y0) > 20 ? 1 : 0"}}}}]},"treemap",n,o).then(function(){return a("")}).catch(function(e){return a("Error: ".concat(e.message))})}catch(e){a("Error: ".concat(e.message))}})}function v(e){return new Promise(function(t){try{if(!e||e.length<2)return void t("Error: Need at least header row + one data row");var a=e[0],r=e.slice(1);if(a.length<1)return void t("Error: Histogram requires at least 1 column of numeric values");var n=r.filter(function(e){return!isNaN(+e[0])}).map(function(e){return{value:+e[0]}});if(0===n.length)return void t("Error: No valid numeric data found for histogram");createChart({$schema:"https://vega.github.io/schema/vega-lite/v6.json",description:"Histogram from Excel selection",data:{values:n},mark:"bar",encoding:{x:{field:"value",bin:{maxbins:20},type:"quantitative",axis:{title:"Value"}},y:{aggregate:"count",type:"quantitative",axis:{title:"Count"}}}},"histogram",a,r).then(function(){return t("")}).catch(function(e){return t("Error: ".concat(e.message))})}catch(e){t("Error: ".concat(e.message))}})}function y(e){return new Promise(function(t){try{if(!e||e.length<2)return void t("Error: Need at least header row + one data row");var a=e[0],r=e.slice(1);if(a.length<2)return void t("Error: Arc chart requires at least 2 columns (Source, Target, Weight optional)");var n=r.map(function(e){var t={};return a.forEach(function(a,r){t[a]=e[r]}),t}).map(function(e,t){return{source:e[a[0]],target:e[a[1]],value:a.length>=3&&e[a[2]]?e[a[2]]:1,group:a.length>=4&&e[a[3]]?e[a[3]]:"default"}}),i=new Map;n.forEach(function(e){i.has(e.source)||i.set(e.source,{name:e.source,group:e.group,index:i.size}),i.has(e.target)||i.set(e.target,{name:e.target,group:e.group,index:i.size})});var l=Array.from(i.values()),s=n.map(function(e){return{source:i.get(e.source).index,target:i.get(e.target).index,value:e.value}}),c=o({$schema:"https://vega.github.io/schema/vega/v5.json",description:"Arc diagram from Excel selection",width:Math.max(600,40*l.length),height:300,padding:{top:20,bottom:80,left:20,right:20},background:"white",config:{view:{stroke:"transparent"}},data:[{name:"edges",values:s},{name:"sourceDegree",source:"edges",transform:[{type:"aggregate",groupby:["source"],as:["count"]}]},{name:"targetDegree",source:"edges",transform:[{type:"aggregate",groupby:["target"],as:["count"]}]},{name:"nodes",values:l,transform:[{type:"window",ops:["rank"],as:["order"]},{type:"lookup",from:"sourceDegree",key:"source",fields:["index"],as:["sourceDegree"],default:{count:0}},{type:"lookup",from:"targetDegree",key:"target",fields:["index"],as:["targetDegree"],default:{count:0}},{type:"formula",as:"degree",expr:"(datum.sourceDegree.count || 0) + (datum.targetDegree.count || 0)"}]}],scales:[{name:"position",type:"band",domain:{data:"nodes",field:"order",sort:!0},range:"width"},{name:"color",type:"ordinal",range:{scheme:"category20"},domain:{data:"nodes",field:"group"}}],marks:[{type:"symbol",name:"layout",interactive:!1,from:{data:"nodes"},encode:{enter:{opacity:{value:0}},update:{x:{scale:"position",field:"order"},y:{value:0},size:{field:"degree",mult:8,offset:50},fill:{scale:"color",field:"group"}}}},{type:"path",from:{data:"edges"},encode:{update:{stroke:{value:"#0078d4"},strokeOpacity:{value:.4},strokeWidth:{field:"value",mult:2,offset:1}}},transform:[{type:"lookup",from:"layout",key:"datum.index",fields:["datum.source","datum.target"],as:["sourceNode","targetNode"]},{type:"linkpath",sourceX:{expr:"min(datum.sourceNode.x, datum.targetNode.x)"},targetX:{expr:"max(datum.sourceNode.x, datum.targetNode.x)"},sourceY:{expr:"0"},targetY:{expr:"0"},shape:"arc"}]},{type:"symbol",from:{data:"layout"},encode:{update:{x:{field:"x"},y:{field:"y"},fill:{field:"fill"},size:{field:"size"},stroke:{value:"white"},strokeWidth:{value:1},tooltip:{signal:"{'Node': datum.datum.name, 'Group': datum.datum.group, 'Connections': datum.datum.degree}"}}}},{type:"text",from:{data:"nodes"},encode:{update:{x:{scale:"position",field:"order"},y:{value:25},fontSize:{value:10},align:{value:"center"},baseline:{value:"top"},angle:{value:-45},text:{field:"name"},fill:{value:"#323130"},font:{value:"Segoe UI"}}}}]},"config",{view:{stroke:"transparent"},font:"Segoe UI",text:{font:"Segoe UI",fontSize:10,fill:"#605e5c"}});createChart(c,"arc",a,r).then(function(){return t("")}).catch(function(e){return t("Error: ".concat(e.message))})}catch(e){t("Error: ".concat(e.message))}})}"undefined"!=typeof CustomFunctions&&(CustomFunctions.associate("LINE",i),CustomFunctions.associate("BAR",l),CustomFunctions.associate("PIE",s),CustomFunctions.associate("AREA",c),CustomFunctions.associate("SCATTER",u),CustomFunctions.associate("RADIAL",d),CustomFunctions.associate("BOX",m),CustomFunctions.associate("RADAR",f),CustomFunctions.associate("WATERFALL",g),CustomFunctions.associate("SUNBURST",p),CustomFunctions.associate("TREEMAP",h),CustomFunctions.associate("HISTOGRAM",v),CustomFunctions.associate("ARC",y)),CustomFunctions.associate("LINE",i),CustomFunctions.associate("BAR",l),CustomFunctions.associate("PIE",s),CustomFunctions.associate("AREA",c),CustomFunctions.associate("SCATTER",u),CustomFunctions.associate("RADIAL",d),CustomFunctions.associate("BOX",m),CustomFunctions.associate("RADAR",f),CustomFunctions.associate("WATERFALL",g),CustomFunctions.associate("SUNBURST",p),CustomFunctions.associate("TREEMAP",h),CustomFunctions.associate("HISTOGRAM",v),CustomFunctions.associate("ARC",y)}();
//# sourceMappingURL=functions.js.map