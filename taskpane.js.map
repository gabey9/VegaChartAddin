{"version":3,"file":"taskpane.js","mappings":";gGACIA,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CAGAJ,EAAoBO,EAAID,ECxBxBN,EAAoBQ,EAAI,SAASJ,EAASK,GACzC,IAAI,IAAIC,KAAOD,EACXT,EAAoBW,EAAEF,EAAYC,KAASV,EAAoBW,EAAEP,EAASM,IAC5EE,OAAOC,eAAeT,EAASM,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAG3E,ECPAV,EAAoBgB,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBrB,EAAoBW,EAAI,SAASW,EAAKC,GAAQ,OAAOX,OAAOY,UAAUC,eAAeC,KAAKJ,EAAKC,EAAO,E,WCAtG,IAAII,EACA3B,EAAoBgB,EAAEY,gBAAeD,EAAY3B,EAAoBgB,EAAEa,SAAW,IACtF,IAAIC,EAAW9B,EAAoBgB,EAAEc,SACrC,IAAKH,GAAaG,IACbA,EAASC,eAAkE,WAAjDD,EAASC,cAAcC,QAAQC,gBAC5DN,EAAYG,EAASC,cAAcG,MAC/BP,GAAW,CACf,IAAIQ,EAAUL,EAASM,qBAAqB,UAC5C,GAAGD,EAAQE,OAEV,IADA,IAAIC,EAAIH,EAAQE,OAAS,EAClBC,GAAK,KAAOX,IAAc,aAAaY,KAAKZ,KAAaA,EAAYQ,EAAQG,KAAKJ,GAE3F,CAID,IAAKP,EAAW,MAAM,IAAIa,MAAM,yDAChCb,EAAYA,EAAUc,QAAQ,SAAU,IAAIA,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KAC1GzC,EAAoB0C,EAAIf,C,IClBxB3B,EAAoB2C,EAAIb,SAASc,SAAWC,KAAKhB,SAASiB,K,8PCC1D,IAAA1B,EAAA2B,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAxC,EAAAqC,EAAAI,aAAA,yBAAAd,EAAAU,EAAAE,EAAAvC,EAAA2B,GAAA,IAAAe,EAAAH,GAAAA,EAAA1B,qBAAA8B,EAAAJ,EAAAI,EAAAC,EAAA3C,OAAA4C,OAAAH,EAAA7B,WAAA,OAAAiC,EAAAF,EAAA,mBAAAP,EAAAE,EAAAvC,GAAA,IAAA2B,EAAAe,EAAAE,EAAAG,EAAA,EAAAhB,EAAA/B,GAAA,GAAAgD,GAAA,EAAAC,EAAA,CAAAlB,EAAA,EAAAQ,EAAA,EAAAW,EAAAzC,EAAA0C,EAAAtD,EAAAkD,EAAAlD,EAAAuD,KAAA3C,EAAA,GAAAZ,EAAA,SAAAuC,EAAAC,GAAA,OAAAV,EAAAS,EAAAM,EAAA,EAAAE,EAAAnC,EAAAwC,EAAAV,EAAAF,EAAAc,CAAA,YAAAtD,EAAAwC,EAAAE,GAAA,IAAAG,EAAAL,EAAAO,EAAAL,EAAAH,EAAA,GAAAY,GAAAD,IAAA/C,GAAAoC,EAAAL,EAAAL,OAAAU,IAAA,KAAApC,EAAA2B,EAAAI,EAAAK,GAAAvC,EAAAoD,EAAAlB,EAAAsB,EAAA1B,EAAA,GAAAU,EAAA,GAAArC,EAAAqD,IAAAd,KAAAK,EAAAjB,GAAAe,EAAAf,EAAA,OAAAe,EAAA,MAAAf,EAAA,GAAAA,EAAA,GAAAlB,GAAAkB,EAAA,IAAA9B,KAAAG,EAAAqC,EAAA,GAAAxC,EAAA8B,EAAA,KAAAe,EAAA,EAAAO,EAAAC,EAAAX,EAAAU,EAAAV,EAAAZ,EAAA,IAAA9B,EAAAwD,IAAArD,EAAAqC,EAAA,GAAAV,EAAA,GAAAY,GAAAA,EAAAc,KAAA1B,EAAA,GAAAU,EAAAV,EAAA,GAAAY,EAAAU,EAAAV,EAAAc,EAAAX,EAAA,OAAA1C,GAAAqC,EAAA,SAAAc,EAAA,MAAAH,GAAA,EAAAT,CAAA,iBAAAvC,EAAA+B,EAAAsB,GAAA,GAAAN,EAAA,QAAAO,UAAA,oCAAAN,GAAA,IAAAjB,GAAAlC,EAAAkC,EAAAsB,GAAAX,EAAAX,EAAAa,EAAAS,GAAAjB,EAAAM,EAAA,EAAAjC,EAAAmC,KAAAI,GAAA,CAAArB,IAAAe,EAAAA,EAAA,GAAAA,EAAA,IAAAO,EAAAV,GAAA,GAAA1C,EAAA6C,EAAAE,IAAAK,EAAAV,EAAAK,EAAAK,EAAAC,EAAAN,GAAA,OAAAG,EAAA,EAAApB,EAAA,IAAAe,IAAA1C,EAAA,QAAAoC,EAAAT,EAAA3B,GAAA,MAAAoC,EAAAA,EAAArB,KAAAY,EAAAiB,IAAA,MAAAU,UAAA,wCAAAlB,EAAAmB,KAAA,OAAAnB,EAAAQ,EAAAR,EAAAoB,MAAAd,EAAA,IAAAA,EAAA,YAAAA,IAAAN,EAAAT,EAAA8B,SAAArB,EAAArB,KAAAY,GAAAe,EAAA,IAAAE,EAAAU,UAAA,oCAAAtD,EAAA,YAAA0C,EAAA,GAAAf,EAAAlB,CAAA,UAAA2B,GAAAY,EAAAC,EAAAV,EAAA,GAAAK,EAAAP,EAAAtB,KAAAwB,EAAAU,MAAAE,EAAA,YAAAf,GAAAT,EAAAlB,EAAAiC,EAAA,EAAAE,EAAAR,CAAA,SAAAW,EAAA,UAAAS,MAAApB,EAAAmB,KAAAP,EAAA,GAAAX,EAAArC,EAAA2B,IAAA,GAAAiB,CAAA,KAAAO,EAAA,YAAAR,IAAA,UAAAe,IAAA,UAAAC,IAAA,CAAAvB,EAAAnC,OAAA2D,eAAA,IAAAlB,EAAA,GAAAH,GAAAH,EAAAA,EAAA,GAAAG,QAAAO,EAAAV,EAAA,GAAAG,EAAA,yBAAAH,GAAAQ,EAAAe,EAAA9C,UAAA8B,EAAA9B,UAAAZ,OAAA4C,OAAAH,GAAA,SAAAK,EAAAtC,GAAA,OAAAR,OAAA4D,eAAA5D,OAAA4D,eAAApD,EAAAkD,IAAAlD,EAAAqD,UAAAH,EAAAb,EAAArC,EAAAT,EAAA,sBAAAS,EAAAI,UAAAZ,OAAA4C,OAAAD,GAAAnC,CAAA,QAAAiD,EAAA7C,UAAA8C,EAAAb,EAAAF,EAAA,cAAAe,GAAAb,EAAAa,EAAA,cAAAD,GAAAA,EAAAK,YAAA,oBAAAjB,EAAAa,EAAA3D,EAAA,qBAAA8C,EAAAF,GAAAE,EAAAF,EAAA5C,EAAA,aAAA8C,EAAAF,EAAAL,EAAA,yBAAAO,EAAAF,EAAA,oDAAAoB,EAAA,kBAAAC,EAAAtC,EAAA/B,EAAAmD,EAAA,cAAAD,EAAArC,EAAA4B,EAAAE,EAAAH,GAAA,IAAAT,EAAA1B,OAAAC,eAAA,IAAAyB,EAAA,gBAAAlB,GAAAkB,EAAA,EAAAmB,EAAA,SAAArC,EAAA4B,EAAAE,EAAAH,GAAA,SAAApC,EAAAqC,EAAAE,GAAAO,EAAArC,EAAA4B,EAAA,SAAA5B,GAAA,YAAAyD,QAAA7B,EAAAE,EAAA9B,EAAA,GAAA4B,EAAAV,EAAAA,EAAAlB,EAAA4B,EAAA,CAAAmB,MAAAjB,EAAApC,YAAAiC,EAAA+B,cAAA/B,EAAAgC,UAAAhC,IAAA3B,EAAA4B,GAAAE,GAAAvC,EAAA,UAAAA,EAAA,WAAAA,EAAA,cAAA8C,EAAArC,EAAA4B,EAAAE,EAAAH,EAAA,UAAAiC,EAAAhC,GAAA,gBAAAA,GAAA,GAAAiC,MAAAC,QAAAlC,GAAA,OAAAmC,EAAAnC,EAAA,CAAAoC,CAAApC,IAAA,SAAAA,GAAA,uBAAAC,QAAA,MAAAD,EAAAC,OAAAE,WAAA,MAAAH,EAAA,qBAAAiC,MAAAI,KAAArC,EAAA,CAAAsC,CAAAtC,IAAA,SAAAA,EAAAc,GAAA,GAAAd,EAAA,qBAAAA,EAAA,OAAAmC,EAAAnC,EAAAc,GAAA,IAAAf,EAAA,GAAAwC,SAAA7D,KAAAsB,GAAAwC,MAAA,uBAAAzC,GAAAC,EAAAyC,cAAA1C,EAAAC,EAAAyC,YAAAC,MAAA,QAAA3C,GAAA,QAAAA,EAAAkC,MAAAI,KAAArC,GAAA,cAAAD,GAAA,2CAAAR,KAAAQ,GAAAoC,EAAAnC,EAAAc,QAAA,GAAA6B,CAAA3C,IAAA,qBAAAiB,UAAA,wIAAA2B,EAAA,UAAAT,EAAAnC,EAAAc,IAAA,MAAAA,GAAAA,EAAAd,EAAAX,UAAAyB,EAAAd,EAAAX,QAAA,QAAAjB,EAAA,EAAA8B,EAAA+B,MAAAnB,GAAA1C,EAAA0C,EAAA1C,IAAA8B,EAAA9B,GAAA4B,EAAA5B,GAAA,OAAA8B,CAAA,UAAA2C,EAAAzE,EAAA4B,GAAA,IAAAD,EAAAnC,OAAAkF,KAAA1E,GAAA,GAAAR,OAAAmF,sBAAA,KAAApF,EAAAC,OAAAmF,sBAAA3E,GAAA4B,IAAArC,EAAAA,EAAAqF,OAAA,SAAAhD,GAAA,OAAApC,OAAAqF,yBAAA7E,EAAA4B,GAAAlC,UAAA,IAAAiC,EAAAmD,KAAAC,MAAApD,EAAApC,EAAA,QAAAoC,CAAA,UAAAqD,EAAAhF,GAAA,QAAA4B,EAAA,EAAAA,EAAAqD,UAAAhE,OAAAW,IAAA,KAAAD,EAAA,MAAAsD,UAAArD,GAAAqD,UAAArD,GAAA,GAAAA,EAAA,EAAA6C,EAAAjF,OAAAmC,IAAA,GAAAuD,QAAA,SAAAtD,GAAAuD,EAAAnF,EAAA4B,EAAAD,EAAAC,GAAA,GAAApC,OAAA4F,0BAAA5F,OAAA6F,iBAAArF,EAAAR,OAAA4F,0BAAAzD,IAAA8C,EAAAjF,OAAAmC,IAAAuD,QAAA,SAAAtD,GAAApC,OAAAC,eAAAO,EAAA4B,EAAApC,OAAAqF,yBAAAlD,EAAAC,GAAA,UAAA5B,CAAA,UAAAmF,EAAAnF,EAAA4B,EAAAD,GAAA,OAAAC,EAAA,SAAAD,GAAA,IAAAT,EAAA,SAAAS,GAAA,aAAA2D,EAAA3D,KAAAA,EAAA,OAAAA,EAAA,IAAA3B,EAAA2B,EAAAE,OAAA0D,aAAA,YAAAvF,EAAA,KAAAkB,EAAAlB,EAAAM,KAAAqB,EAAAC,UAAA,aAAA0D,EAAApE,GAAA,OAAAA,EAAA,UAAA2B,UAAA,uDAAA2C,OAAA7D,EAAA,CAAA8D,CAAA9D,GAAA,gBAAA2D,EAAApE,GAAAA,EAAAA,EAAA,GAAAwE,CAAA9D,MAAA5B,EAAAR,OAAAC,eAAAO,EAAA4B,EAAA,CAAAmB,MAAApB,EAAAjC,YAAA,EAAAgE,cAAA,EAAAC,UAAA,IAAA3D,EAAA4B,GAAAD,EAAA3B,CAAA,UAAA2F,EAAA7D,EAAAH,EAAA3B,EAAA4B,EAAArC,EAAAmD,EAAAT,GAAA,QAAAf,EAAAY,EAAAY,GAAAT,GAAAE,EAAAjB,EAAA6B,KAAA,OAAAjB,GAAA,YAAA9B,EAAA8B,EAAA,CAAAZ,EAAA4B,KAAAnB,EAAAQ,GAAAyD,QAAAC,QAAA1D,GAAA2D,KAAAlE,EAAArC,EAAA,UAAAwG,EAAAjE,GAAA,sBAAAH,EAAA,KAAA3B,EAAAiF,UAAA,WAAAW,QAAA,SAAAhE,EAAArC,GAAA,IAAAmD,EAAAZ,EAAAiD,MAAApD,EAAA3B,GAAA,SAAAgG,EAAAlE,GAAA6D,EAAAjD,EAAAd,EAAArC,EAAAyG,EAAAC,EAAA,OAAAnE,EAAA,UAAAmE,EAAAnE,GAAA6D,EAAAjD,EAAAd,EAAArC,EAAAyG,EAAAC,EAAA,QAAAnE,EAAA,CAAAkE,OAAA,MAKO,SAAeE,IAAG,OAAAC,EAAApB,MAAC,KAADE,UAAA,CAsgFxB,SAAAkB,IAAA,OAAAA,EAAAJ,EAAAxC,IAAApE,EAtgFM,SAAAiH,IAAA,IAAAC,EAAA,OAAA9C,IAAAC,EAAA,SAAA8C,GAAA,cAAAA,EAAAhF,EAAAgF,EAAAxE,GAAA,cAAAwE,EAAAhF,EAAA,EAAAgF,EAAAxE,EAAA,EAEGyE,MAAML,IAAG,eAAAM,EAAAT,EAAAxC,IAAApE,EAAC,SAAAsH,EAAOC,GAAO,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAlF,IAAAC,EAAA,SAAAkF,GAAA,cAAAA,EAAA5G,GAAA,OAKI,OAJ1B6E,EAAQD,EAAQiC,SAASC,WAAWC,sBAGpCjC,EAAQF,EAAQiC,SAASG,oBACzBC,KAAK,qBAAqBL,EAAA5G,EAAA,EAC1B4E,EAAQsC,OAAM,OAEO,MAArBnC,EAASD,EAAMC,QACV5F,OAAS,GAAC,CAAAyH,EAAA5G,EAAA,QACqC,OAAxDmH,QAAQC,KAAK,2CAA2CR,EAAAhG,EAAA,UAsnBzD,GAjnBKoE,EAAUD,EAAO,GACjBE,EAAOF,EAAOzC,MAAM,GAGpB4C,EAAOD,EAAKoC,IAAI,SAAAC,GACpB,IAAIlJ,EAAM,CAAC,EAIX,OAHA4G,EAAQ5B,QAAQ,SAACmE,EAAGnI,GAClBhB,EAAImJ,GAAKD,EAAIlI,EACf,GACOhB,CACT,GAOkB,WAJZ+G,EAAYvG,SAAS4I,eAAe,aAAavG,OAKrDmE,EAAI/B,EAAA,CACFoE,QAAS,kDACTC,YAAa,4CACbC,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B3C,KAAM,CAAEH,OAAQG,GAChB4C,KAAM,CAAEC,KAAM,QAASC,KAAM,IAAKC,SAAS,GAC3CC,SAAQhF,EAAAA,EAAA,CACNiF,EAAG,CACDC,MAAOpD,EAAQ,GACf+C,KAAM,eACNM,MAAO,CAAEC,MAAM,GACfC,KAAM,CACJC,MAAOxD,EAAQ,GACfyD,cAAe,GACfC,cAAe,KAGnBjI,EAAG,CACD2H,MAAOpD,EAAQ,GACf+C,KAAM,eACNM,MAAO,CAAEC,MAAM,GACfC,KAAM,CACJC,MAAOxD,EAAQ,GACfyD,cAAe,GACfC,cAAe,MAIf1D,EAAQ7F,QAAU,GAAK,CACzBwJ,MAAO,CACLP,MAAOpD,EAAQ,GACf+C,KAAM,UACNa,OAAQ,CACNJ,MAAOxD,EAAQ,GACf0D,cAAe,GACfD,cAAe,OAKjBzD,EAAQ7F,QAAU,GAAK,CACzB0J,MAAO,CACLT,MAAOpD,EAAQ,GACf+C,KAAM,UACNa,OAAQ,CACNJ,MAAOxD,EAAQ,GACf0D,cAAe,GACfD,cAAe,QAItB,SACO,CACNK,KAAM,WACNP,KAAM,CACJQ,WAAY,UACZC,WAAY,UACZC,UAAW,WAEbL,OAAQ,CACNI,WAAY,UACZD,WAAY,aAMG,SAAd5D,EAEPC,EAAI/B,EAAA,CACFoE,QAAS,kDACTC,YAAa,wCACbC,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B3C,KAAM,CAAEH,OAAQG,GAChB4C,KAAM,CACJC,KAAM,OACNmB,OAAO,EACPjB,SAAS,EACTkB,YAAa,GAEfjB,SAAQhF,EAAA,CACNiF,EAAG,CACDC,MAAOpD,EAAQ,GACf+C,KAAM,UACNQ,KAAM,CACJC,MAAOxD,EAAQ,GACfyD,cAAe,GACfC,cAAe,GACfU,WAAY,IAGhB3I,EAAG,CACD2H,MAAOpD,EAAQ,GACf+C,KAAM,eACNQ,KAAM,CACJC,MAAOxD,EAAQ,GACfyD,cAAe,GACfC,cAAe,MAIf1D,EAAQ7F,QAAU,GAAK,CACzBwJ,MAAO,CACLP,MAAOpD,EAAQ,GACf+C,KAAM,UACNa,OAAQ,CACNJ,MAAOxD,EAAQ,GACf0D,cAAe,GACfD,cAAe,QAItB,SACO,CACNK,KAAM,WACNP,KAAM,CACJQ,WAAY,UACZC,WAAY,UACZC,UAAW,WAEbL,OAAQ,CACNI,WAAY,UACZD,WAAY,WAEdG,MAAO,CACLlB,KAAM,GACNqB,QAAQ,KAMO,cAAdlE,IAEDE,EAAavD,EAAOoD,IACR/F,OAAS,IACzBkG,EAAcA,EAAclG,OAAS,GAAE+D,EAAAA,EAAA,GAClCmC,EAAcA,EAAclG,OAAS,IAAE,GAAAkE,EAAA,GACzC2B,EAAQ,GAAK,KAKZM,EAAgBJ,EAAK/F,OACrBoG,EAAe+D,KAAKC,IAAI,IAAKD,KAAKE,IAAI,KAAsB,GAAhBlE,IAC5CE,EAAY8D,KAAKC,IAAGtG,MAARqG,KAAIxH,EAAQoD,EAAKmC,IAAI,SAAA/J,GAAC,OAAIgM,KAAKG,IAAInM,EAAE0H,EAAQ,IAAI,KAC7DS,EAAgB6D,KAAKC,IAAI,IAAKD,KAAKE,IAAI,IAAKhE,EAAY,IAAM,MAEpEJ,EAAI/B,EAAA,CACJoE,QAAS,kDACTC,YAAa,uCACdC,WAAY,QACXzC,KAAM,CAAEH,OAAQM,GACjBuC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBACvB6B,MAAOnE,EACPoE,OAAQlE,EACRmE,UAAW,CACT,CAAC,OAAU,CAAC,CAAC,GAAM,MAAO,MAAS5E,EAAQ,GAAI,GAAM,SACrD,CAAC,OAAU,CAAC,CAAC,GAAM,OAAQ,MAASA,EAAQ,GAAI,GAAM,UACtD,CACE,UAAa,+BAAF6E,OAAiC7E,EAAQ,GAAE,iBACtD,GAAM,QAER,CACE,UAAa,SAAF6E,OAAW7E,EAAQ,GAAE,UAAA6E,OAAS3E,EAAKA,EAAK/F,OAAS,GAAG6F,EAAQ,IAAG,8BAAA6E,OAA6B7E,EAAQ,IAC/G,GAAM,gBAER,CACE,UAAa,SAAF6E,OAAW7E,EAAQ,GAAE,UAAA6E,OAAS3E,EAAKA,EAAK/F,OAAS,GAAG6F,EAAQ,IAAG,0BAAA6E,OAAyB7E,EAAQ,IAC3G,GAAM,UAER,CACE,UAAa,SAAF6E,OAAW7E,EAAQ,GAAE,UAAA6E,OAAS3E,EAAK,GAAGF,EAAQ,IAAG,cAAA6E,OAAa7E,EAAQ,GAAE,iBAAA6E,OAAgB7E,EAAQ,GAAE,UAAA6E,OAAS3E,EAAKA,EAAK/F,OAAS,GAAG6F,EAAQ,IAAG,cAAA6E,OAAa7E,EAAQ,GAAE,+CAC9K,GAAM,UAER,CACE,UAAa,SAAF6E,OAAW7E,EAAQ,GAAE,UAAA6E,OAAS3E,EAAKA,EAAK/F,OAAS,GAAG6F,EAAQ,IAAG,2BAAA6E,OAA0B7E,EAAQ,GAAE,UAAA6E,OAAS3E,EAAK,GAAGF,EAAQ,IAAG,eAAA6E,OAAc7E,EAAQ,GAAE,UAAA6E,OAAS3E,EAAKA,EAAK/F,OAAS,GAAG6F,EAAQ,IAAG,eAAA6E,OAAc7E,EAAQ,GAAE,6BAAA6E,OAA4B7E,EAAQ,IACxQ,GAAM,eAER,CAAC,UAAa,uCAAwC,GAAM,WAE9DkD,SAAU,CACRC,EAAG,CACDC,MAAOpD,EAAQ,GACf+C,KAAM,UACN+B,KAAM,KACNvB,KAAM,CAAC,WAAc,EAAG,MAASvD,EAAQ,IACzCqD,MAAO,CAAC,aAAgB,GAAK,aAAgB,OAGjD0B,MAAO,CACL,CACEjC,KAAM,CAAC,KAAQ,MAAO,KAAQ,IAC9BI,SAAU,CACRzH,EAAG,CACD2H,MAAO,eACPL,KAAM,eACNS,MAAOxD,EAAQ,IAEjBgF,GAAI,CAAC,MAAS,OACdrB,MAAO,CACLsB,UAAW,CACT,CACE5K,KAAM,SAAFwK,OAAW7E,EAAQ,GAAE,UAAA6E,OAAS3E,EAAK,GAAGF,EAAQ,IAAG,eAAA6E,OAAc7E,EAAQ,GAAE,UAAA6E,OAAS3E,EAAKA,EAAK/F,OAAS,GAAG6F,EAAQ,IAAG,KACvH/D,MAAO,WAET,CAAC,KAAQ,iCAAkC,MAAS,YAEtDA,MAAO,aAIb,CACE6G,KAAM,CACJC,KAAM,OACNY,MAAO,UACPuB,QAAS,EACTf,YAAa,EACbgB,SAAU,GACVC,SAAU,IAEZlC,SAAU,CACRmC,GAAI,CAAC,MAAS,QACd5J,EAAG,CAAC,MAAS,MAAO,KAAQ,kBAGhC,CACE,KAAQ,CACNsH,KAAM,OACNuC,GAAI,CAAC,KAAQ,8BACbC,SAAU,CAAC,KAAQ,yCAErBrC,SAAU,CACRzH,EAAG,CAAC,MAAS,MAAO,KAAQ,gBAC5B+J,KAAM,CAAC,MAAS,MAAO,KAAQ,WAC/BN,QAAS,CACP,UAAa,CACX,KAAQ,SAAFL,OAAW7E,EAAQ,GAAE,UAAA6E,OAAS3E,EAAK,GAAGF,EAAQ,IAAG,eAAA6E,OAAc7E,EAAQ,GAAE,UAAA6E,OAAS3E,EAAKA,EAAK/F,OAAS,GAAG6F,EAAQ,IAAG,KACzH,MAAS,GAEX,MAAS,KAIf,CACE8C,KAAM,CAAC,KAAQ,OAAQ,WAAc,OAAQ,SAAY,UACzDI,SAAU,CACRzH,EAAG,CAAC,MAAS,SAAU,KAAQ,gBAC/B+J,KAAM,CAAC,MAAS,cAAe,KAAQ,WACvC7B,MAAO,CACLsB,UAAW,CACT,CACE5K,KAAM,SAAFwK,OAAW7E,EAAQ,GAAE,UAAA6E,OAAS3E,EAAK,GAAGF,EAAQ,IAAG,eAAA6E,OAAc7E,EAAQ,GAAE,UAAA6E,OAAS3E,EAAKA,EAAK/F,OAAS,GAAG6F,EAAQ,IAAG,KACvH/D,MAAO,YAGXA,MAAO,aAId,SACO,CAAC,KAAQ,CAAC,WAAc,OAAQ,MAAS,cAI9B,WAAdkE,GACHD,EAAOD,EAAKoC,IAAI,SAAAvH,GAAC,MAAK,CAC1B0I,MAAO1I,EAAE,GACT2K,OAAQ,EAAE3K,EAAE,IAAKA,EAAE,IAAKA,EAAE,IAC1B4K,SAAU,EAAE5K,EAAE,IAAKA,EAAE,IACrB6K,QAAS,EAAE7K,EAAE,IACd,GAEDsF,EAAI/B,EAAA,CACF,QAAW,kDACXsE,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B,KAAQ,CAAE,OAAU3C,GACpB,MAAS,CACT,IAAO,CACH,MAAS,QAAS,KAAQ,UAC1B,OAAU,CAAE,WAAc,EAAG,MAAS,GAAI,WAAc,UAG5D,QAAW,GACX,KAAQ,CACR,SAAY,CACR,EAAK,CACL,KAAQ,eACR,MAAS,CAAE,MAAQ,GACnB,MAAS,OAGb,MAAS,CACL,CAAE,KAAQ,CAAE,KAAQ,MAAO,MAAS,QAAU,SAAY,CAAE,EAAK,CAAE,MAAS,eAC5E,CAAE,KAAQ,CAAE,KAAQ,MAAO,MAAS,QAAU,SAAY,CAAE,EAAK,CAAE,MAAS,eAC5E,CAAE,KAAQ,CAAE,KAAQ,MAAO,MAAS,QAAU,SAAY,CAAE,EAAK,CAAE,MAAS,eAC5E,CAAE,KAAQ,CAAE,KAAQ,MAAO,MAAS,iBAAkB,KAAQ,IAAM,SAAY,CAAE,EAAK,CAAE,MAAS,iBAClG,CAAE,KAAQ,CAAE,KAAQ,MAAO,MAAS,YAAa,KAAQ,IAAM,SAAY,CAAE,EAAK,CAAE,MAAS,iBAC7F,CAAE,KAAQ,CAAE,KAAQ,OAAQ,MAAS,SAAW,SAAY,CAAE,EAAK,CAAE,MAAS,kBAGlF,QAAW,CAAE,MAAS,CAAE,EAAK,iBAAiB,SACpC,CAAE,KAAQ,CAAE,UAAa,GAAK,MAAS,CAAE,oBAAuB,MAIrD,QAAdC,GAEHD,EAAOD,EACVnC,OAAO,SAAAhD,GAAC,OAAIA,EAAE,KAAO8K,OAAO9K,EAAE,GAAG,GACjCuH,IAAI,SAAAvH,GAAC,MAAK,CACT+K,SAAU/K,EAAE,GACZmB,OAAQnB,EAAE,GACX,GAEHsF,EAAO,CACL,QAAW,kDACX,YAAe,gCACf,KAAQ,CAAE,OAAUF,GACpB,KAAQ,CACN,KAAQ,UACR,OAAU,WAEZ,SAAY,CACV,EAAK,CAAE,MAAS,WAAY,KAAQ,WACpC,EAAK,CACH,MAAS,QACT,KAAQ,eACR,MAAS,CAAE,MAAQ,IAErB,MAAS,CACP,MAAS,WACT,KAAQ,UACR,OAAU,SAMO,QAAdC,EACPC,EAAO,CACPqC,QAAS,kDACTE,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1BH,YAAa,iCACbxC,KAAM,CAAEH,OAAQG,GAChB4C,KAAM,CAAEC,KAAM,MAAO+C,YAAa,KAClC5C,SAAU,CACR6C,MAAO,CAAE3C,MAAOpD,EAAQ,GAAI+C,KAAM,gBAClCY,MAAO,CAAEP,MAAOpD,EAAQ,GAAI+C,KAAM,aAKf,cAAd5C,GAEHD,EAAOD,EACVnC,OAAO,SAAAhD,GAAC,OAAK8K,OAAO9K,EAAE,GAAG,GACzBuH,IAAI,SAAAvH,GAAC,MAAK,CAAEmB,OAAQnB,EAAE,GAAI,GAE7BsF,EAAO,CACL,QAAW,kDACX,YAAe,iCACf,KAAQ,CAAE,OAAUF,GACpB,KAAQ,MACR,SAAY,CACV,EAAK,CACH,MAAS,QACT,IAAO,CAAE,QAAW,IACpB,KAAQ,eACR,KAAQ,CAAE,MAAS,UAErB,EAAK,CACH,UAAa,QACb,KAAQ,eACR,KAAQ,CAAE,MAAS,aAMF,UAAdC,IACPC,EAAO,CACLqC,QAAS,6CACTC,YAAa,uCACbgC,MAAO,IACPC,OAAQ,IACRhC,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1BtB,KAAM,CAAEsB,OAAQ,MAChBmD,QAAS,CAAEC,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,IACjDlG,KAAM,CACJ,CACE1C,KAAM,QACNuC,OAAQG,GAEV,CACE1C,KAAM,aACN6I,OAAQ,QACRzB,UAAW,CACT,CACE7B,KAAM,YACNuD,OAAQ,CAACtG,EAAQ,IACjBuG,IAAK,CAAC,OACNC,GAAI,CAAC,iBACLC,QAAS,CAACzG,EAAQ,KAEpB,CACE+C,KAAM,QACN2D,OAAQ,YACR5B,KAAM,CAAE1B,MAAO,gBAAiBuD,MAAO,cACvCvD,MAAO,gBACPoD,GAAI,CAAC,KAAM,OAEb,CACEzD,KAAM,UACNyD,GAAI,UACJI,KAAM,qBAER,CACE7D,KAAM,UACNyD,GAAI,QACJI,KAAM,SAAF/B,OAAW7E,EAAQ,GAAE,kDAI/B,CACExC,KAAM,aACN6I,OAAQ,QACRzB,UAAW,CACT,CACE7B,KAAM,QACN2D,OAAQ,YACRD,QAAS,CAACzG,EAAQ,IAClB8E,KAAM,CAAE1B,MAAOpD,EAAQ,GAAI2G,MAAO,cAClCvD,MAAOpD,EAAQ,GACfwG,GAAI,CAAC,KAAM,OAEb,CACEzD,KAAM,QACN0D,QAAS,CAACzG,EAAQ,IAClB8E,KAAM,CAAE1B,MAAOpD,EAAQ,GAAI2G,MAAO,cAClCvD,MAAOpD,EAAQ,GACfwG,GAAI,CAAC,KAAM,OAEb,CACEzD,KAAM,SACN5F,KAAM,aACN3E,IAAKwH,EAAQ,GACbD,OAAQ,CAAC,KAAM,MACfuG,OAAQ,CAACtG,EAAQ,KAEnB,CACE+C,KAAM,UACNyD,GAAI,UACJI,KAAM,qBAER,CACE7D,KAAM,UACNyD,GAAI,QACJI,KAAM,UAAF/B,OAAY7E,EAAQ,GAAE,mBAAA6E,OAAkB7E,EAAQ,GAAE,0DAExD,CACE+C,KAAM,SACN+B,KAAM,CAAE1B,MAAO,KAAMuD,MAAO,aAC5BJ,IAAK,CAAC,cACND,OAAQ,CAAC,MACTE,GAAI,CAAC,QACLC,QAAS,CAACzG,EAAQ,QAK1B6G,OAAQ,CACN,CACErJ,KAAM,IACNuF,KAAM,SACNjD,MAAO,QACPgH,OAAQ,CAAE5G,KAAM,aAAckD,MAAO,OAEvC,CACE5F,KAAM,IACNuF,KAAM,SACNjD,MAAO,SACPiH,MAAM,EACNzD,MAAM,EACNwD,OAAQ,CAAE5G,KAAM,aAAckD,MAAO,OAEvC,CACE5F,KAAM,UACNuF,KAAM,SACNjD,MAAO,CAAC,EAAG,IACXgH,OAAQ,CAAE5G,KAAM,aAAckD,MAAO,SAEvC,CACE5F,KAAM,QACNuF,KAAM,UACNjD,MAAO,CAAEkH,OAAQ,cACjBF,OAAQ,CACN5G,KAAM,aACNkD,MAAOpD,EAAQ,GACf8E,KAAM,CAAE1B,MAAO,KAAMuD,MAAO,YAAaM,GAAI,UAInDC,KAAM,CACJ,CACEC,OAAQ,OACR9D,MAAO,IACP+D,OAAQ,EACRC,OAAQ,GACRC,UAAW,EACXC,SAAU,GACVxD,WAAY,CAAE9H,MAAO,WACrBuL,gBAAiB,CAAEvL,MAAO,UAC1BwH,cAAe,CAAExH,MAAO,IACxBwL,UAAW,CAAExL,MAAO,YACpByK,OAAQ,EACRI,QAAQ,EACRY,OAAQ,CACNC,OAAQ,CACNC,OAAQ,CACNpC,KAAM,CAAEqC,OAAQ,mCAM1BC,MAAO,CACL,CACE/E,KAAM,OACNvF,KAAM,OACNL,KAAM,CAAE+C,KAAM,cACdwH,OAAQ,CACNE,OAAQ,CACNzE,EAAG,CAAEE,MAAO,IAAKD,MAAO,MACxBiC,GAAI,CAAEhC,MAAO,IAAKD,MAAO,MACzB3H,EAAG,CAAE4H,MAAO,IAAKD,MAAO,MACxB4B,GAAI,CAAE3B,MAAO,IAAKD,MAAO,MACzB2E,KAAM,CAAE1E,MAAO,QAASD,MAAOpD,EAAQ,IACvC6C,OAAQ,CAAE5G,MAAO,SACjBkI,YAAa,CAAElI,MAAO,GACtB+L,YAAa,CAAE3E,MAAO,UAAWD,MAAO,QACxCH,QAAS,CAAE4E,OAAQ,YAIzB,CACE9E,KAAM,OACNvF,KAAM,SACNyK,aAAa,EACb9K,KAAM,CAAE+C,KAAM,QACdwH,OAAQ,CACNE,OAAQ,CACNzE,EAAG,CAAE0E,OAAQ,sCACbK,MAAO,CAAEjM,MAAO,UAChBuJ,KAAM,CAAEpC,MAAO,eACf3H,EAAG,CAAEoM,OAAQ,sCACbE,KAAM,CAAE9L,MAAO,SACf6H,KAAM,CAAE7H,MAAO,YACfkM,WAAY,CAAElM,MAAO,IACrBmM,SAAU,CAAEnM,MAAO,IACnBiJ,QAAS,CAAE2C,OAAQ,uEAIzB,CACE9E,KAAM,OACNvF,KAAM,iBACNL,KAAM,CAAE+C,KAAM,cACdwH,OAAQ,CACNE,OAAQ,CACNzE,EAAG,CAAEE,MAAO,IAAKwE,OAAQ,oCACzBpM,EAAG,CAAEoM,OAAQ,OACbrC,KAAM,CAAEpC,MAAOpD,EAAQ,IACvBkI,MAAO,CAAEjM,MAAO,UAChBsJ,SAAU,CAAEtJ,MAAO,UACnB8L,KAAM,CAAE9L,MAAO,WACfoM,WAAY,CAAEpM,MAAO,QACrBmM,SAAU,CAAEnM,MAAO,IACnB6H,KAAM,CAAE7H,MAAO,eAIrB,CACE8G,KAAM,OACNvF,KAAM,sBACNL,KAAM,CAAE+C,KAAM,cACdwH,OAAQ,CACNE,OAAQ,CACNzE,EAAG,CAAEE,MAAO,IAAKwE,OAAQ,oCACzBpM,EAAG,CAAEoM,OAAQ,eACbrC,KAAM,CAAEpC,MAAO,SACf8E,MAAO,CAAEjM,MAAO,UAChBsJ,SAAU,CAAEtJ,MAAO,OACnB8L,KAAM,CAAE9L,MAAO,WACfoM,WAAY,CAAEpM,MAAO,UACrBmM,SAAU,CAAEnM,MAAO,IACnB6H,KAAM,CAAE7H,MAAO,kBAQT,cAAdkE,EAAyB,CAAAyB,EAAA5G,EAAA,aACzBgF,EAAQ7F,OAAS,GAAC,CAAAyH,EAAA5G,EAAA,QACsE,OAA1FmH,QAAQC,KAAK,6EAA6ER,EAAAhG,EAAA,UAI5FwE,EAAO,CACL,QAAW,6CACX,YAAe,uCACf,MAAS,IACT,OAAU,IACV,WAAc,QACd,KAAQ,CAAE,OAAU,MACpB,QAAW,CAAE,IAAO,GAAI,OAAU,GAAI,KAAQ,GAAI,MAAS,IAC3D,MAAS,CACP,KAAQ,kBACR,OAAU,GACV,MAAS,SACT,OAAU,SACV,SAAY,GACZ,WAAc,MACd,MAAS,WAEX,KAAQ,CACN,CACE,KAAQ,QACR,OAAUF,EACV,UAAa,CACX,CACE,KAAQ,UACR,GAAM,WACN,KAAQ,UAAF2E,OAAY7E,EAAQ,GAAE,OAE9B,CACE,KAAQ,UACR,GAAM,cACN,KAAQ,UAAF6E,OAAY7E,EAAQ,GAAE,OAE9B,CACE,KAAQ,UACR,GAAM,QACN,KAAQ,UAAF6E,OAAY7E,EAAQ,GAAE,SAIlC,CACE,KAAQ,aACR,OAAU,QACV,UAAa,CACX,CACE,KAAQ,YACR,OAAU,CAAC,SACX,IAAO,CAAC,OACR,GAAM,CAAC,iBACP,QAAW,CAAC,aAEd,CACE,KAAQ,QACR,OAAU,YACV,KAAQ,CAAE,MAAS,gBAAiB,MAAS,cAC7C,MAAS,gBACT,GAAM,CAAC,KAAM,OAEf,CACE,KAAQ,UACR,GAAM,UACN,KAAQ,yBAId,CACE,KAAQ,aACR,OAAU,QACV,UAAa,CACX,CACE,KAAQ,QACR,OAAU,YACV,QAAW,CAAC,YACZ,KAAQ,CAAE,MAAS,QAAS,MAAS,cACrC,MAAS,QACT,GAAM,CAAC,KAAM,OAEf,CACE,KAAQ,SACR,KAAQ,aACR,IAAO,WACP,OAAU,CAAC,KAAM,MACjB,OAAU,CAAC,aAEb,CACE,KAAQ,UACR,GAAM,UACN,KAAQ,0BAKhB,OAAU,CACR,CACE,KAAQ,IACR,KAAQ,SACR,MAAS,QACT,OAAU,CAAE,KAAQ,aAAc,MAAS,OAE7C,CACE,KAAQ,IACR,KAAQ,SACR,MAAS,SACT,MAAQ,EACR,MAAQ,EACR,OAAU,CAAE,KAAQ,aAAc,MAAS,OAE7C,CACE,KAAQ,QACR,KAAQ,UACR,MAAS,CAAE,OAAU,cACrB,OAAU,CACR,KAAQ,aACR,MAAS,WACT,KAAQ,CAAE,MAAS,KAAM,MAAS,YAAa,GAAM,UAI3D,KAAQ,CACN,CACE,OAAU,OACV,MAAS,IACT,OAAU,IACV,UAAa,EACb,WAAc,UACd,cAAiB,GACjB,QAAU,IAGd,MAAS,CACP,CACE,KAAQ,OACR,KAAQ,OACR,KAAQ,CAAE,KAAQ,cAClB,OAAU,CACR,OAAU,CACR,EAAK,CAAE,MAAS,IAAK,MAAS,MAC9B,GAAM,CAAE,MAAS,IAAK,MAAS,MAC/B,EAAK,CAAE,MAAS,IAAK,MAAS,MAC9B,GAAM,CAAE,MAAS,IAAK,MAAS,MAC/B,KAAQ,CAAE,MAAS,QAAS,MAAS,YACrC,OAAU,CAAE,MAAS,SACrB,YAAe,CAAE,MAAS,GAC1B,QAAW,CAAE,MAAS,IACtB,QAAW,CACT,OAAU,qIAGd,MAAS,CACP,QAAW,CAAE,MAAS,MAI5B,CACE,KAAQ,OACR,KAAQ,cACR,KAAQ,CAAE,KAAQ,cAClB,OAAU,CACR,OAAU,CACR,EAAK,CAAE,MAAS,IAAK,OAAU,sCAC/B,EAAK,CAAE,MAAS,IAAK,OAAU,sCAC/B,KAAQ,CACN,OAAU,6HAEZ,MAAS,CAAE,MAAS,UACpB,SAAY,CAAE,MAAS,UACvB,KAAQ,CAAE,MAAS,SACnB,SAAY,CAAE,MAAS,IACvB,WAAc,CAAE,MAAS,UACzB,KAAQ,CAAE,MAAS,YACnB,WAAc,CAAE,MAAS,IACzB,QAAW,CAAE,OAAU,oCAI7B,CACE,KAAQ,OACR,KAAQ,iBACR,KAAQ,CAAE,KAAQ,cAClB,OAAU,CACR,OAAU,CACR,EAAK,CAAE,MAAS,IAAK,OAAU,sCAC/B,EAAK,CAAE,OAAU,eACjB,KAAQ,CAAE,MAAS,YACnB,MAAS,CAAE,MAAS,UACpB,SAAY,CAAE,MAAS,OACvB,KAAQ,CAAE,MAAS,WACnB,SAAY,CAAE,MAAS,IACvB,WAAc,CAAE,MAAS,aAKjC4B,EAAA5G,EAAA,eAGqB,QAAdmF,GAEDU,EAAQX,EAAKmC,IAAI,SAACC,EAAKgG,GAAK,MAAM,CACtCjC,OAAQ/D,EAAItC,EAAQ,IACpBuI,OAAQjG,EAAItC,EAAQ,IACpB/D,MAAO+D,EAAQ7F,QAAU,GAAKmI,EAAItC,EAAQ,IAAMsC,EAAItC,EAAQ,IAAM,EAClEwI,MAAOxI,EAAQ7F,QAAU,GAAKmI,EAAItC,EAAQ,IAAMsC,EAAItC,EAAQ,IAAM,UACnE,GAGKc,EAAU,IAAI2H,IACpB5H,EAAMzC,QAAQ,SAAAsK,GACP5H,EAAQ6H,IAAID,EAAKrC,SACpBvF,EAAQ8H,IAAIF,EAAKrC,OAAQ,CACvB7I,KAAMkL,EAAKrC,OACXmC,MAAOE,EAAKF,MACZF,MAAOxH,EAAQkC,OAGdlC,EAAQ6H,IAAID,EAAKH,SACpBzH,EAAQ8H,IAAIF,EAAKH,OAAQ,CACvB/K,KAAMkL,EAAKH,OACXC,MAAOE,EAAKF,MACZF,MAAOxH,EAAQkC,MAGrB,GAEMjC,EAAQhE,MAAMI,KAAK2D,EAAQf,UAG3BiB,EAAmBH,EAAMwB,IAAI,SAAAqG,GAAI,MAAK,CAC1CrC,OAAQvF,EAAQjI,IAAI6P,EAAKrC,QAAQiC,MACjCC,OAAQzH,EAAQjI,IAAI6P,EAAKH,QAAQD,MACjCrM,MAAOyM,EAAKzM,MACb,GAEDmE,EAAI/B,EAAA,CACFoE,QAAS,6CACTC,YAAa,mCACbgC,MAAOJ,KAAKC,IAAI,IAAoB,GAAfxD,EAAM5G,QAC3BwK,OAAQ,IACRqB,QAAS,CAAEC,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,IACjDzD,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B3C,KAAM,CACJ,CACE1C,KAAM,QACNuC,OAAQiB,GAEV,CACExD,KAAM,eACN6I,OAAQ,QACRzB,UAAW,CACT,CAAE7B,KAAM,YAAa0D,QAAS,CAAC,UAAWD,GAAI,CAAC,YAGnD,CACEhJ,KAAM,eACN6I,OAAQ,QACRzB,UAAW,CACT,CAAE7B,KAAM,YAAa0D,QAAS,CAAC,UAAWD,GAAI,CAAC,YAGnD,CACEhJ,KAAM,QACNuC,OAAQgB,EACR6D,UAAW,CACT,CAAE7B,KAAM,SAAUwD,IAAK,CAAC,QAASC,GAAI,CAAC,UACtC,CACEzD,KAAM,SAAU5F,KAAM,eAAgB3E,IAAK,SAC3C8N,OAAQ,CAAC,SAAUE,GAAI,CAAC,gBACxBqC,QAAS,CAAEC,MAAO,IAEpB,CACE/F,KAAM,SAAU5F,KAAM,eAAgB3E,IAAK,SAC3C8N,OAAQ,CAAC,SAAUE,GAAI,CAAC,gBACxBqC,QAAS,CAAEC,MAAO,IAEpB,CACE/F,KAAM,UAAWyD,GAAI,SACrBI,KAAM,wEAMdC,OAAQ,CACN,CACErJ,KAAM,WACNuF,KAAM,OACN+D,OAAQ,CAAE5G,KAAM,QAASkD,MAAO,QAAS0B,MAAM,GAC/ChF,MAAO,SAET,CACEtC,KAAM,QACNuF,KAAM,UACNjD,MAAO,CAAEkH,OAAQ,cACjBF,OAAQ,CAAE5G,KAAM,QAASkD,MAAO,WAIpC0E,MAAO,CACL,CACE/E,KAAM,SACNvF,KAAM,SACNyK,aAAa,EACb9K,KAAM,CAAE+C,KAAM,SACdwH,OAAQ,CACNqB,MAAO,CAAE7D,QAAS,CAAEjJ,MAAO,IAC3B2L,OAAQ,CACNzE,EAAG,CAAEE,MAAO,WAAYD,MAAO,SAC/B3H,EAAG,CAAEQ,MAAO,GACZ+G,KAAM,CAAEI,MAAO,SAAU4F,KAAM,EAAGtC,OAAQ,IAC1CqB,KAAM,CAAE1E,MAAO,QAASD,MAAO,YAIrC,CACEL,KAAM,OACN5F,KAAM,CAAE+C,KAAM,SACdwH,OAAQ,CACNE,OAAQ,CACN/E,OAAQ,CAAE5G,MAAO,WACjBgN,cAAe,CAAEhN,MAAO,IACxBkI,YAAa,CAAEf,MAAO,QAAS4F,KAAM,EAAGtC,OAAQ,KAGpD9B,UAAW,CACT,CACE7B,KAAM,SAAU5F,KAAM,SAAU3E,IAAK,cACrC8N,OAAQ,CAAC,eAAgB,gBACzBE,GAAI,CAAC,aAAc,eAErB,CACEzD,KAAM,WACNmG,QAAS,CAAEtC,KAAM,+CACjBuC,QAAS,CAAEvC,KAAM,+CACjBwC,QAAS,CAAExC,KAAM,KACjByC,QAAS,CAAEzC,KAAM,KACjB/C,MAAO,SAIb,CACEd,KAAM,SACN5F,KAAM,CAAE+C,KAAM,UACdwH,OAAQ,CACNE,OAAQ,CACNzE,EAAG,CAAEC,MAAO,KACZ3H,EAAG,CAAE2H,MAAO,KACZ2E,KAAM,CAAE3E,MAAO,QACfJ,KAAM,CAAEI,MAAO,QACfP,OAAQ,CAAE5G,MAAO,SACjBkI,YAAa,CAAElI,MAAO,GACtBgH,QAAS,CACP4E,OAAQ,gGAKhB,CACE9E,KAAM,OACN5F,KAAM,CAAE+C,KAAM,SACdwH,OAAQ,CACNE,OAAQ,CACNzE,EAAG,CAAEE,MAAO,WAAYD,MAAO,SAC/B3H,EAAG,CAAEQ,MAAO,IACZmM,SAAU,CAAEnM,MAAO,IACnBiM,MAAO,CAAEjM,MAAO,UAChBsJ,SAAU,CAAEtJ,MAAO,OACnBqN,MAAO,CAAErN,OAAQ,IACjBuJ,KAAM,CAAEpC,MAAO,QACf2E,KAAM,CAAE9L,MAAO,WACf6H,KAAM,CAAE7H,MAAO,iBAItB,SAEO,CACNsF,KAAM,CAAEsB,OAAQ,eAChBiB,KAAM,WACN0B,KAAM,CAAE1B,KAAM,WAAYsE,SAAU,GAAIL,KAAM,cAK7B,aAAd5H,EACPC,EAAI/B,EAAA,CACFoE,QAAS,kDACTC,YAAa,sCACbC,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B3C,KAAM,CAAEH,OAAQG,GAChBgD,SAAU,CACRzH,EAAG,CACD2H,MAAOpD,EAAQ,GACf+C,KAAM,UACN+B,KAAM,KACNvB,KAAM,CACJuD,QAAQ,EACRtD,MAAO,KACP+F,OAAO,EACP9B,UAAW,WACXhE,cAAe,GACf+F,aAAc,GACdzF,WAAY,YAGhBZ,EAAG,CACDC,MAAOpD,EAAQ,GACf+C,KAAM,eACNQ,KAAM,CACJuD,QAAQ,EACRyC,OAAO,EACPE,MAAM,EACNxF,UAAW,UACXwD,UAAW,WACXhE,cAAe,GACfM,WAAY,UACZP,MAAOxD,EAAQ,GACf0J,UAAW,WACXhG,cAAe,GACfM,WAAY,YAGhBL,MAAO,CAAE1H,MAAO,YAElB8I,MAAO,CACL,CACEjC,KAAM,CACJC,KAAM,OACNE,SAAS,EACTkB,YAAa,EACbe,QAAS,KAGb,CACEpC,KAAM,CACJC,KAAM,SACNE,SAAS,EACTD,KAAM,IACNkC,QAAS,IAEXhC,SAAU,CACRF,KAAM,CACJI,MAAOpD,EAAQ,GACf+C,KAAM,eACNM,MAAO,CACLvD,MAAO,CAAC,IAAK,MAEf8D,OAAQ,UAIf,SACO,CACN+F,SAAU,CACR5G,KAAM,MACN6G,SAAU,WAEZrI,KAAM,CAAEsB,OAAQ,eAChBiB,KAAM,WACN0B,KAAM,CAAE1B,KAAM,WAAYsE,SAAU,GAAIL,KAAM,aAK7B,UAAd5H,EAEPC,EAAO,CACLqC,QAAS,kDACTC,YAAa,mDACbC,WAAY,QACZC,OAAQ,CACNrB,KAAM,CAAEsB,OAAQ,eAChBU,KAAM,CACJE,cAAe,GACfC,cAAe,GACfK,WAAY,UACZC,WAAY,YAGhB9D,KAAM,CAAEH,OAAQG,GAChB4C,KAAM,CACJC,KAAM,OACN8G,UAAW,EACX7G,KAAM,GACNW,MAAO,UACPuB,QAAS,GACTjC,SAAS,GAEXC,SAAQhF,EAAAA,EAAA,CACNiF,EAAG,CACDC,MAAOpD,EAAQ,GACf+C,KAAM,eACNQ,KAAM,CACJC,MAAOxD,EAAQ,GACfyJ,MAAM,EACNxF,UAAW,UACX6F,YAAa,KAGjBrO,EAAG,CACD2H,MAAOpD,EAAQ,GACf+C,KAAM,UACNQ,KAAM,CACJC,MAAOxD,EAAQ,GACfoE,WAAY,KAIZpE,EAAQ7F,OAAS,GAAK,CACxBwJ,MAAO,CACLP,MAAOpD,EAAQ,GACf+C,KAAM,UACNM,MAAO,CAAE2D,OAAQ,cACjBpD,OAAQ,CACNJ,MAAOxD,EAAQ,GACfmH,OAAQ,QACRzD,cAAe,GACfD,cAAe,OAGpB,IACDR,QAASjD,EAAQqC,IAAI,SAAAE,GAAC,MAAK,CAAEa,MAAOb,EAAGQ,KAAM,UAAW,MAKvC,YAAd5C,GAGHH,EAAQ7F,QAAU,GAEpB8G,EAAWf,EAAKmC,IAAI,SAAC/J,EAAG8B,GAAC,MAAM,CAC7B2P,GAAI,GAAFlF,OAAKvM,EAAE0H,EAAQ,IAAG,KAAA6E,OAAIzK,GACxBoD,KAAMlF,EAAE0H,EAAQ,IAChBgK,OAAQ1R,EAAE0H,EAAQ,KAAO,OACzBgD,KAAMiH,WAAW3R,EAAE0H,EAAQ,MAAQ,EACpC,GAGYlD,EAAO,IAAIoN,IAAIjJ,EAASoB,IAAI,SAAA/J,GAAC,OAAIA,EAAE0R,MAAM,KAC9C5L,QAAQ,SAAA4L,GACC,SAAXA,GAAsB/I,EAASkJ,KAAK,SAAA7R,GAAC,OAAIA,EAAEyR,KAAOC,CAAM,IAC1D/I,EAASjD,KAAK,CACZ+L,GAAIC,EACJxM,KAAMwM,EACNA,OAAQ,OACRhH,KAAM,GAGZ,GAGA/B,EAASjD,KAAK,CACZ+L,GAAI,OACJvM,KAAM,OACNwM,OAAQ,GACRhH,KAAM,KAIR/B,EAAW,CACT,CACE8I,GAAI,OACJvM,KAAM,OACNwM,OAAQ,GACRhH,KAAM,IACP6B,OAAA/H,EACEoD,EAAKmC,IAAI,SAAC/J,EAAG8B,GAAC,MAAM,CACrB2P,GAAI,QAAFlF,OAAUzK,GACZoD,KAAMlF,EAAE0H,EAAQ,IAChBgK,OAAQ,OACRhH,KAAMiH,WAAW3R,EAAE0H,EAAQ,MAAQ,EACpC,KAILI,EAAO,CACLqC,QAAS,6CACTC,YAAa,wCACbC,WAAY,QACZ+B,MAAO,IACPC,OAAQ,IACRqB,QAAS,EACT2D,SAAU,MAEVzJ,KAAM,CACJ,CACE1C,KAAM,OACNuC,OAAQkB,EACR2D,UAAW,CACT,CACE7B,KAAM,WACNvK,IAAK,KACL4R,UAAW,UAEb,CACErH,KAAM,UACNK,MAAO,OACP0B,KAAM,CAAE1B,MAAO,SACfiH,OAAO,EACPC,OAAQ,WACRC,MAAO,IACPvH,KAAM,CAAC,CAAE6E,OAAQ,SAAW,CAAEA,OAAQ,cAI5C,CACErK,KAAM,QACN6I,OAAQ,OACRzB,UAAW,CACT,CAAE7B,KAAM,SAAU6D,KAAM,oBAG5B,CACEpJ,KAAM,SACN6I,OAAQ,OACRzB,UAAW,CACT,CAAE7B,KAAM,SAAU6D,KAAM,sBAK9BC,OAAQ,CACN,CACErJ,KAAM,QACNuF,KAAM,UACN+D,OAAQ,CAAE5G,KAAM,QAASkD,MAAO,QAChCtD,MAAO,CACL,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,YAGhD,CACEtC,KAAM,WACNuF,KAAM,UACN+D,OAAQ,CAAC,EAAG,EAAG,EAAG,GAClBhH,MAAO,CAAC,GAAI,GAAI,GAAI,KAEtB,CACEtC,KAAM,UACNuF,KAAM,UACN+D,OAAQ,CAAC,EAAG,EAAG,EAAG,GAClBhH,MAAO,CAAC,GAAK,GAAK,GAAK,KAI3BgI,MAAO,CACL,CACE/E,KAAM,OACN5F,KAAM,CAAE+C,KAAM,SACd+H,aAAa,EACbP,OAAQ,CACNqB,MAAO,CACLhB,KAAM,CAAE1E,MAAO,QAASD,MAAO,QAC/B4E,YAAa,CAAE3E,MAAO,UAAWD,MAAO,UAE1CwE,OAAQ,CACNzE,EAAG,CAAEC,MAAO,MACZ3H,EAAG,CAAE2H,MAAO,MACZiC,GAAI,CAAEjC,MAAO,MACb4B,GAAI,CAAE5B,MAAO,MACbP,OAAQ,CAAE5G,MAAO,WACjBkI,YAAa,CAAElI,MAAO,MAI5B,CACE8G,KAAM,OACN5F,KAAM,CAAE+C,KAAM,UACdwH,OAAQ,CACNqB,MAAO,CACLlG,OAAQ,CAAE5G,MAAO,WACjBkI,YAAa,CAAElI,MAAO,IAExB2L,OAAQ,CACNzE,EAAG,CAAEC,MAAO,MACZ3H,EAAG,CAAE2H,MAAO,MACZiC,GAAI,CAAEjC,MAAO,MACb4B,GAAI,CAAE5B,MAAO,MACb2E,KAAM,CAAE9L,MAAO,eACfgH,QAAS,CACP4E,OAAQ,0EAGZ2C,MAAO,CACLzC,KAAM,CAAE9L,MAAO,WACf+L,YAAa,CAAE/L,MAAO,OAI5B,CACE8G,KAAM,OACN5F,KAAM,CAAE+C,KAAM,UACd+H,aAAa,EACbP,OAAQ,CACNqB,MAAO,CACLjF,KAAM,CAAE7H,MAAO,+BACfiM,MAAO,CAAEjM,MAAO,UAChBsJ,SAAU,CAAEtJ,MAAO,UACnB8L,KAAM,CAAE9L,MAAO,WACfoM,WAAY,CAAEpM,MAAO,QACrBuJ,KAAM,CAAEpC,MAAO,QACfgF,SAAU,CAAE/E,MAAO,WAAYD,MAAO,UAExCwE,OAAQ,CACNzE,EAAG,CAAE0E,OAAQ,+BACbpM,EAAG,CAAEoM,OAAQ,+BACb3C,QAAS,CACP2C,OAAQ,0EASC,WAAd1H,EACPC,EAAI/B,EAAA,CACFoE,QAAS,kDACTC,YAAa,oCACbC,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B3C,KAAM,CAAEH,OAAQG,GAChB0E,UAAW,CACT,CACE6F,cAAe,CAAC,CAAC,GAAM,MAAO,MAASzK,EAAQ,GAAI,GAAM,gBAE3D,CACE0K,UAAW,eAAF7F,OAAiB7E,EAAQ,GAAE,4BACpCwG,GAAI,kBAEN,CACEmE,UAAW,CAAC,CAAC,GAAM,MAAO,MAAS,iBAAkB,GAAM,YAC3DlE,QAAS,CAACzG,EAAQ,KAEpB,CAAC,UAAa,kBAAmB,GAAM,YACvC,CAAC,QAAW,CAAC,aACb,CACE0K,UAAW,6CAAF7F,OAA+C7E,EAAQ,GAAE,cAClEwG,GAAI,QAEN,CAAC,UAAa,6BAA8B,GAAM,OAClD,CAAC,UAAa,kCAAmC,GAAM,QAEzDoE,MAAO,CAAC,OAAU,CAAC,MAAS5K,EAAQ,GAAI,OAAU,CAAC,YAAe,YAClEI,KAAM,CACJ2E,MAAO,CACL,CACEjC,KAAM,CACJC,KAAM,SACNsB,QAAQ,EACRpB,SAAS,EACTJ,OAAQ,UACRsB,YAAa,IAEfjB,SAAU,CACRC,EAAG,CAAC,MAAS,MAAO,KAAQ,UAAW,KAAQ,MAC/C1H,EAAG,CAAC,MAAS,MAAO,KAAQ,UAAW,KAAQ,KAAM,KAAQ,MAC7DkI,MAAO,CACLsB,UAAW,CAAC,KAAQ,yBAA0B,MAAS,WACvD5B,MAAO,CAAC,OAAU,QAClBD,MAAO,OACPL,KAAM,UACNa,OAAQ,MAEVZ,KAAM,CAAC,MAAS,KAChBC,QAAS,CAAC,CAAC,MAASjD,EAAQ,GAAI,KAAQ,cAG5C,CACE8C,KAAM,CAAC,KAAQ,OAAQ,SAAY,GAAI,WAAc,QACrDI,SAAU,CACRzH,EAAG,CAAC,MAAS,IACb+J,KAAM,CACJP,UAAW,CACT5K,KAAM,sBACN4B,MAAO,CAAC,KAAQ,yBAGpB0H,MAAO,CAAC,MAAS,CAAC,OAAU,QAAS,MAAS,aAIrD,SACO,CACNpC,KAAM,CAAC,OAAU,eACjBuC,KAAM,WACN0B,KAAM,CAAC,KAAQ,WAAY,SAAY,GAAI,KAAQ,WACnDjC,KAAM,CACJgG,OAAO,EACPE,MAAM,EACN3C,QAAQ,EACR/C,WAAY,UACZN,cAAe,IAEjBoH,OAAQ,CACNnB,UAAW,WACXhG,cAAe,GACfM,WAAY,UACZyD,UAAW,WACXhE,cAAe,GACfM,WAAY,WAEdH,OAAQ,CACN8F,UAAW,WACXoB,gBAAiB,OACjB9G,WAAY,UACZyD,UAAW,WACXhE,cAAe,GACfM,WAAY,UACZgH,WAAY,SACZC,WAAY,MAMG,WAAd7K,EACPC,EAAI/B,EAAA,CACFoE,QAAS,kDACTC,YAAa,oCACbC,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B3C,KAAM,CAAEH,OAAQG,GAChB+K,QAAS,EACTL,MAAO,CACLM,OAAQ,CACN9H,MAAOpD,EAAQ,GACf6K,OAAQ,CACN1D,OAAQ,SACR3D,MAAO,KACPC,cAAe,MAIrBrD,KAAM,CACJsE,MAAO,IACPC,OAAQ,IACRzB,SAAU,CACRzH,EAAG,CACD2H,MAAOpD,EAAQ,GACf+C,KAAM,eACNS,MAAOxD,EAAQ,GACfuD,KAAM,CACJ+D,UAAW,GACX5D,cAAe,GACfD,cAAe,KAGnBN,EAAG,CACDJ,KAAM,eACNQ,KAAM,CACJoE,QAAQ,EACRnE,MAAO,KACPiG,MAAM,EACNF,OAAO,IAGX5F,MAAO,CACLP,MAAOpD,EAAQ,GACf+C,KAAM,UACNa,OAAQ,KACRP,MAAO,CACL2D,OAAQ,gBAIdjC,MAAO,CACL,CACEvH,KAAM,WACNoH,UAAW,CACT,CACEuG,QAASnL,EAAQ,GACjByG,QAAS,CAACzG,EAAQ,IAClBwG,GAAI,CAAC,aAAc,iBAErB,CACEkE,UAAW,6BACXlE,GAAI,0BAGRzB,MAAO,CACL,CACEvH,KAAM,eACNsF,KAAM,CACJC,KAAM,OACNoE,OAAQ,WACRjC,QAAS,IAEXhC,SAAU,CACRzH,EAAG,CAAE2H,MAAO,cACZD,EAAG,CAAEC,MAAO,kBAGhB,CACE5F,KAAM,eACNsF,KAAM,CACJC,KAAM,OACNoE,OAAQ,WACRjC,QAAS,IAEXhC,SAAU,CACRzH,EAAG,CAAE2H,MAAO,cACZD,EAAG,CAAEC,MAAO,4BAIlBF,SAAU,CACRmC,GAAI,CAAE+F,MAAO,KAGjB,CACE5N,KAAM,WACNsF,KAAM,CACJC,KAAM,UACNsI,OAAQ,UACRC,OAAQ,CACN3H,MAAO,QACPQ,YAAa,GAEfnB,KAAM,IAERE,SAAU,CACRzH,EAAG,CAAE2H,MAAOpD,EAAQ,IACpB+H,KAAM,CAAE9L,MAAO,WACf4G,OAAQ,CAAE5G,MAAO,cAIxB,SACO,CACNsF,KAAM,CAAEsB,OAAQ,eAChBiB,KAAM,WACN0B,KAAM,CAAE1B,KAAM,WAAYsE,SAAU,GAAIL,KAAM,WAC9CxE,KAAM,CACJgG,OAAO,EACPE,MAAM,EACNxF,UAAW,UACX6C,QAAQ,EACR/C,WAAY,UACZN,cAAe,IAEjBoH,OAAQ,CACNnB,UAAW,WACXhG,cAAe,GACfM,WAAY,UACZyD,UAAW,WACXhE,cAAe,GACfM,WAAY,aAMG,YAAd5D,EACPC,EAAI/B,EAAA,CACFoE,QAAS,kDACTC,YAAa,kDACbC,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B3C,KAAM,CAAEH,OAAQG,GAChB+K,QAAS,GACTM,OAAQ,QACRC,QAAS,CACP,CACE7G,OAAQ,GACR7B,KAAM,CACJC,KAAM,MACNF,OAAQ,KACR4I,gBAAiB,EACjBxI,SAAS,EACTU,MAAO,aAETT,SAAU,CACRC,EAAG,CACDC,MAAOpD,EAAQ,GACf+C,KAAM,UACNQ,KAAM,MAER9H,EAAG,CACD2H,MAAOpD,EAAQ,GACf2K,UAAW,OACX5H,KAAM,eACNQ,KAAM,QAIZ,CACE0H,QAAS,GACTM,OAAQ,QACRG,QAAS,CACP,CACE5I,KAAM,CACJC,KAAM,OACNF,OAAQ,QACRI,SAAS,GAEXC,SAAU,CACRzH,EAAG,CACD2H,MAAOpD,EAAQ,GACf+C,KAAM,UACNS,MAAOxD,EAAQ,GACfuD,KAAM,CACJuD,QAAQ,EACRyC,OAAO,EACP5B,QAAQ,EACRvD,WAAY,EACZoF,aAAc,IAGlBrG,EAAG,CACDC,MAAOpD,EAAQ,GACf+C,KAAM,UACNS,MAAOxD,EAAQ,GACfuD,KAAM,CACJuD,QAAQ,EACRyC,OAAO,EACP5B,QAAQ,EACRvD,WAAY,IAGhBT,MAAO,CACLgH,UAAW,OACXvH,MAAOpD,EAAQ,GACf+C,KAAM,eACNS,MAAOxD,EAAQ,GACfqD,MAAO,CACL2D,OAAQ,SAEVpD,OAAQ,CACN+H,UAAW,WACXC,eAAgB,QAKxB,CACE9I,KAAM,CACJC,KAAM,MACNF,OAAQ,KACR4I,gBAAiB,EACjBxI,SAAS,EACTU,MAAO,aAETe,MAAO,GACPxB,SAAU,CACRzH,EAAG,CACD2H,MAAOpD,EAAQ,GACf+C,KAAM,UACNQ,KAAM,MAERJ,EAAG,CACDC,MAAOpD,EAAQ,GACf+C,KAAM,eACN4H,UAAW,OACXpH,KAAM,YAMjB,SACO,CACNoG,SAAU,CACR5G,KAAM,MACN6G,SAAU,WAEZrI,KAAM,CAAEsB,OAAQ,eAChBiB,KAAM,WACN0B,KAAM,CAAE1B,KAAM,WAAYsE,SAAU,GAAIL,KAAM,WAC9CxE,KAAM,CACJgG,OAAO,EACPE,MAAM,EACN3C,QAAQ,EACR/C,WAAY,UACZN,cAAe,GACfC,cAAe,GACfM,WAAY,WAEdJ,OAAQ,CACN8F,UAAW,WACXoB,gBAAiB,OACjB9G,WAAY,UACZyD,UAAW,WACXhE,cAAe,GACfM,WAAY,aAMG,cAAd5D,EACTC,EAAI/B,EAAA,CACFoE,QAAS,kDACTC,YAAa,uCACbC,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B3C,KAAM,CAAEH,OAAQG,GAChB6E,MAAO,CACP,CACIjC,KAAM,CAAEC,KAAM,OAAQE,SAAS,EAAMU,MAAO,QAC5CT,SAAU,CACVC,EAAG,CAAEC,MAAOpD,EAAQ,GAAI+C,KAAM,WAC9BtH,EAAG,CAAE2H,MAAOpD,EAAQ,GAAI+C,KAAM,kBAGlC,CACID,KAAM,CAAEC,KAAM,SAAUC,KAAM,GAAIW,MAAO,OAAQV,SAAS,GAC1DC,SAAU,CACVC,EAAG,CAAEC,MAAOpD,EAAQ,GAAI+C,KAAM,WAC9BtH,EAAG,CAAE2H,MAAOpD,EAAQ,GAAI+C,KAAM,kBAGlC,CACID,KAAM,CAAEC,KAAM,OAAQoB,YAAa,EAAGlB,SAAS,GAC/CC,SAAU,CACVC,EAAG,CAAEC,MAAOpD,EAAQ,GAAI+C,KAAM,WAC9BtH,EAAG,CAAE2H,MAAOpD,EAAQ,GAAI+C,KAAM,gBAC9BiC,GAAI,CAAE5B,MAAOpD,EAAQ,IACrB2D,MAAO,CACHsB,UAAW,CAAE5K,KAAM,UAAFwK,OAAY7E,EAAQ,GAAE,gBAAA6E,OAAe7E,EAAQ,GAAE,MAAM/D,MAAO,OAC7EA,MAAO,WAIf,CACI6G,KAAM,CAAEC,KAAM,SAAUC,KAAM,GAAIC,SAAS,GAC3CC,SAAU,CACVC,EAAG,CAAEC,MAAOpD,EAAQ,GAAI+C,KAAM,WAC9BtH,EAAG,CAAE2H,MAAOpD,EAAQ,GAAI+C,KAAM,gBAC9BY,MAAO,CACHsB,UAAW,CAAE5K,KAAM,UAAFwK,OAAY7E,EAAQ,GAAE,gBAAA6E,OAAe7E,EAAQ,GAAE,MAAM/D,MAAO,OAC7EA,MAAO,YAKfiH,SAAU,CACVC,EAAG,CACCC,MAAOpD,EAAQ,GACf+C,KAAM,UACNQ,KAAM,CACFC,MAAO,KACPY,WAAY,IAGpB3I,EAAG,CAAEsH,KAAM,eAAgBQ,KAAM,CAAEC,MAAO,OACzC,SACO,CACRjC,KAAM,CAAEsB,OAAQ,eAChBgJ,KAAM,CAAE1H,YAAa,EAAG2H,UAAW,QAASC,WAAY,SACxDxI,KAAM,CACFgG,OAAO,EACPE,MAAM,EACN3C,QAAQ,EACR/C,WAAY,UACZN,cAAe,MAME,WAAdtD,EACPC,EAAO,CACPqC,QAAS,kDACTC,YAAa,oCACbC,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B3C,KAAM,CAAEH,OAAQG,GAChB6E,MAAO,CAAC,CACRjC,KAAM,CAAEC,KAAM,MAAOiJ,YAAa,GAAInJ,OAAQ,SAC3C,CACHC,KAAM,CAAEC,KAAM,OAAQkJ,aAAc,IACpC/I,SAAU,CACNsC,KAAM,CAAEpC,MAAOpD,EAAQ,GAAI+C,KAAM,mBAGrCG,SAAU,CACV6C,MAAO,CAAE3C,MAAOpD,EAAQ,GAAI+C,KAAM,eAAgBmJ,OAAO,GACzDC,OAAQ,CACJ/I,MAAOpD,EAAQ,GACfqD,MAAO,CAAEN,KAAM,OAAQO,MAAM,EAAM8I,SAAU,KAEjDzI,MAAO,CAAEP,MAAOpD,EAAQ,GAAI+C,KAAM,UAAWa,OAAQ,QAKhC,SAAdzD,GAEHe,EAAOpE,EAAO,IAAIoN,IAAIhK,EAAKmC,IAAI,SAAA/J,GAAC,OAAIA,EAAE0H,EAAQ,GAAG,KACjDO,EAAe+D,KAAKC,IAAI,IAAsB,GAAjBrD,EAAQ/G,QAE3CiG,EAAI/B,EAAA,CACFoE,QAAS,kDACTC,YAAa,kCACbC,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B3C,KAAM,CAAEH,OAAQG,GAChBwE,MAAOnE,EACPoE,OAAQ,IACRzB,SAAU,CACRC,EAAG,CACDC,MAAOpD,EAAQ,GACf+C,KAAM,UACNQ,KAAM,CAAEC,MAAO,IACfH,MAAO,CAAEN,KAAM,QAASiD,QAAS,IAEnCvK,EAAG,CACD2H,MAAOpD,EAAQ,GACf+C,KAAM,UACNQ,MAAM,IAGVwB,MAAO,CACL,CACEjC,KAAM,CAAEC,KAAM,OAAQsJ,YAAa,YACnCnJ,SAAU,CACRS,MAAO,CACLP,MAAOpD,EAAQ,GACf+C,KAAM,UACNa,QAAQ,KAId,CACEd,KAAM,CAAEC,KAAM,SAAUC,KAAM,IAAKC,SAAS,GAC5CC,SAAU,CACRS,MAAO,CACLP,MAAOpD,EAAQ,GACf+C,KAAM,UACNa,QAAQ,KAId,CACEd,KAAM,CAAEC,KAAM,OAAQY,MAAO,SAC7BT,SAAU,CACRsC,KAAM,CAAEpC,MAAOpD,EAAQ,MAG3B,CAEE4E,UAAW,CACT,CAAEzL,OAAQ,CAAC,CAAE8N,GAAI,OAAQT,GAAI,SAAW1B,KAAM,CAAC,CAAE1B,MAAOpD,EAAQ,GAAI2G,MAAO,gBAC3E,CAAE7I,OAAQ,qBAEZgF,KAAM,CACJC,KAAM,OACNmF,MAAO,OACP3C,SAAU,SACV+G,GAAI,GACJjE,WAAY,OACZD,SAAU,IAEZlF,SAAU,CACRsC,KAAM,CAAEpC,MAAOpD,EAAQ,GAAI+C,KAAM,WACjCY,MAAO,CAAEP,MAAOpD,EAAQ,GAAI+C,KAAM,UAAWa,QAAQ,KAGzD,CAEEgB,UAAW,CACT,CAAEzL,OAAQ,CAAC,CAAE8N,GAAI,OAAQT,GAAI,SAAW1B,KAAM,CAAC,CAAE1B,MAAOpD,EAAQ,GAAI2G,MAAO,eAC3E,CAAE7I,OAAQ,qBAEZgF,KAAM,CACJC,KAAM,OACNmF,MAAO,QACP3C,SAAU,SACV+G,IAAK,GACLjE,WAAY,OACZD,SAAU,IAEZlF,SAAU,CACRsC,KAAM,CAAEpC,MAAOpD,EAAQ,GAAI+C,KAAM,WACjCY,MAAO,CAAEP,MAAOpD,EAAQ,GAAI+C,KAAM,UAAWa,QAAQ,OAG1D,SACO,CACNrC,KAAM,CAAEsB,OAAQ,eAChBgJ,KAAM,CAAE1H,YAAa,EAAG2H,UAAW,QAASC,WAAY,SACxDxI,KAAM,CACJgG,OAAO,EACPE,MAAM,EACN3C,QAAQ,EACR/C,WAAY,UACZN,cAAe,OAME,WAAdtD,GACHD,EAAOD,EACVnC,OAAO,SAAAhD,GAAC,OAAIA,EAAE,IAAMA,EAAE,KAAO8K,OAAO9K,EAAE,GAAG,GACzCuH,IAAI,SAAAvH,GAAC,MAAK,CACTtC,IAAK,CAAE+T,KAAMzR,EAAE,GAAI0R,KAAM1R,EAAE,IAC3B2R,WAAY3R,EAAE,GACf,GAEHsF,EAAO,CACLqC,QAAS,+CACTkC,OAAQ,IACRD,MAAO,IACP/B,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B3C,KAAM,CACJ,CACE1C,KAAM,UACNuC,OAAQG,EACR0E,UAAW,CACT,CAAE7B,KAAM,UAAW6D,KAAM,iBAAkBJ,GAAI,QAC/C,CAAEzD,KAAM,UAAW6D,KAAM,iBAAkBJ,GAAI,QAC/C,CAAEzD,KAAM,UAAW6D,KAAM,kBAAmBJ,GAAI,UAGpD,CACEhJ,KAAM,QACN6I,OAAQ,UACRzB,UAAW,CACT,CACE7B,KAAM,SACN6D,KACE,0FAEJ,CAAE7D,KAAM,UAAW6D,KAAM,wBAAyBJ,GAAI,OACtD,CAAEzD,KAAM,OAAQuD,OAAQ,CAAC,OAAQ,QAASE,GAAI,CAAC,QAAS,UACxD,CACEzD,KAAM,UACN6D,KACE,gFACFJ,GAAI,aAEN,CACEzD,KAAM,QACN0D,QAAS,CAAC,SACV3B,KAAM,CAAE1B,MAAO,YAAauD,MAAO,cACnCvD,MAAO,QAET,CAAEL,KAAM,UAAW6D,KAAM,wBAAyBJ,GAAI,QAG1D,CACEhJ,KAAM,SACN6I,OAAQ,QACRzB,UAAW,CACT,CACE7B,KAAM,YACN0D,QAAS,CAAC,QAAS,SACnBH,OAAQ,CAAC,QACTC,IAAK,CAAC,OACNC,GAAI,CAAC,UAEP,CACEzD,KAAM,QACN0D,QAAS,CAAC,SACV3B,KAAM,CAAE1B,MAAO,QAASuD,MAAO,cAC/BvD,MAAO,SAET,CAAEL,KAAM,UAAW6D,KAAM,uBAAwBJ,GAAI,YACrD,CAAEzD,KAAM,UAAW6D,KAAM,uBAAwBJ,GAAI,YACrD,CAAEzD,KAAM,UAAW6D,KAAM,wBAAyBJ,GAAI,cACtD,CAAEzD,KAAM,UAAW6D,KAAM,6BAA8BJ,GAAI,gBAG/D,CACEhJ,KAAM,mBACN6I,OAAQ,QACRzB,UAAW,CAAC,CAAE7B,KAAM,SAAU6D,KAAM,2BAEtC,CACEpJ,KAAM,QACN6I,OAAQ,QACRzB,UAAW,CACT,CAAE7B,KAAM,SAAU6D,KAAM,yBACxB,CACE7D,KAAM,SACN5F,KAAM,mBACN3E,IAAK,MACL8N,OAAQ,CAAC,OACTE,GAAI,CAAC,WAEP,CACEzD,KAAM,WACNoE,OAAQ,aACRtD,MAAO,WACPuF,QAAS,CAAExC,KAAM,wBACjBsC,QAAS,CAAEtC,KAAM,uCACjByC,QAAS,CAAEzC,KAAM,+BACjBuC,QAAS,CAAEvC,KAAM,uBAEnB,CAAE7D,KAAM,UAAW6D,KAAM,uCAAwCJ,GAAI,eACrE,CAAEzD,KAAM,UAAW6D,KAAM,4BAA6BJ,GAAI,iBAIhEK,OAAQ,CACN,CACErJ,KAAM,IACNuF,KAAM,OACNjD,MAAO,QACPgH,OAAQ,CAAC,OAAQ,QACjB4F,aAAc,IACdC,aAAc,KAEhB,CACEnP,KAAM,IACNuF,KAAM,SACNjD,MAAO,SACPgH,OAAQ,CAAE5G,KAAM,QAASkD,MAAO,OAElC,CACE5F,KAAM,QACNuF,KAAM,UACNjD,MAAO,WACPgH,OAAQ,CACNR,OAAQ,CACN,CAAEpG,KAAM,UAAWkD,MAAO,QAC1B,CAAElD,KAAM,UAAWkD,MAAO,WAIhC,CACE5F,KAAM,aACNuF,KAAM,UACNjD,MAAO,CAAC,SAAU,eAClBgH,OAAQ,CAAC,OAAQ,UAGrBI,KAAM,CACJ,CACEC,OAAQ,SACR9D,MAAO,IACPqE,OAAQ,CACNC,OAAQ,CAAEC,OAAQ,CAAEpC,KAAM,CAAEnC,MAAO,aAAcD,MAAO,aAG5D,CAAE+D,OAAQ,OAAQ9D,MAAO,MAE3ByE,MAAO,CACL,CACE/E,KAAM,OACNvF,KAAM,WACNL,KAAM,CAAE+C,KAAM,SACd0M,MAAM,EACNlF,OAAQ,CACNE,OAAQ,CACN/E,OAAQ,CAAEQ,MAAO,QAASD,MAAO,QACjCe,YAAa,CAAEf,MAAO,eACtByJ,KAAM,CAAEzJ,MAAO,QACf6F,cAAe,CACbpB,OACE,kGAEJT,OAAQ,CACNS,OACE,8FAEJ5E,QAAS,CACP4E,OACE,2HAGN2C,MAAO,CAAEvB,cAAe,CAAEhN,MAAO,MAGrC,CACE8G,KAAM,OACNvF,KAAM,YACNL,KAAM,CAAE+C,KAAM,UACdwH,OAAQ,CACNqB,MAAO,CACLhB,KAAM,CAAE1E,MAAO,QAASD,MAAO,SAC/BsB,MAAO,CAAErB,MAAO,IAAKyJ,KAAM,IAE7BlF,OAAQ,CACNzE,EAAG,CAAEE,MAAO,IAAKD,MAAO,SACxB3H,EAAG,CAAE2H,MAAO,YACZ4B,GAAI,CAAE5B,MAAO,YACb4E,YAAa,CAAE/L,MAAO,IACtBgH,QAAS,CACP4E,OACE,uGAGN2C,MAAO,CAAExC,YAAa,CAAE/L,MAAO,MAGnC,CACE8G,KAAM,OACN5F,KAAM,CAAE+C,KAAM,UACd+H,aAAa,EACbP,OAAQ,CACNE,OAAQ,CACNzE,EAAG,CACD0E,OACE,0EAEJkF,GAAI,CAAElF,OAAQ,uCACdK,MAAO,CAAEL,OAAQ,uCACjBtC,SAAU,CAAEtJ,MAAO,UACnBoM,WAAY,CAAEpM,MAAO,QACrBuJ,KAAM,CACJqC,OAAQ,kEAMlBmF,QAAS,CACP,CACExP,KAAM,aACNvB,MAAO,CAAC,EACRgR,GAAI,CACF,CACEC,OAAQ,uBACRtF,OACE,sFAEJ,CAAEsF,OAAQ,WAAYtF,OAAQ,QAGlC,CACEpK,KAAM,gBACNvB,OAAO,EACPgR,GAAI,CACF,CACEC,OAAQ,oBACRtF,OACE,yGAEJ,CACEsF,OAAQ,CACN,CAAEnK,KAAM,QAASoK,SAAU,cAC3B,CAAEpK,KAAM,aAEV6E,OAAQ,cAQK,WAAdzH,EACTC,EAAI/B,EAAA,CACFoE,QAAS,kDACTC,YAAa,oCACbC,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B3C,KAAM,CAAEH,OAAQG,GAChB6E,MAAO,CACP,CACIjC,KAAM,CAAEC,KAAM,OAAQsJ,YAAa,WAAYpJ,SAAS,GACxDC,SAAU,CACVC,EAAG,CACCC,MAAOpD,EAAQ,GACf+C,KAAM,WAEVtH,EAAG,CACCkP,UAAW,MACXvH,MAAOpD,EAAQ,GACf+C,KAAM,eACNQ,KAAM,KACN2I,MAAO,UAEXvI,MAAO,CACHP,MAAOpD,EAAQ,GACf+C,KAAM,WAEV4D,MAAO,CACHgE,UAAW,MACXvH,MAAOpD,EAAQ,GACf+C,KAAM,oBAIb,SACO,CACRxB,KAAM,CAAEsB,OAAQ,eAChBU,KAAM,CACFgG,OAAO,EACPE,MAAM,EACNxF,UAAW,QACXmJ,UAAW,EACXtG,QAAQ,EACR/C,WAAY,WAEhBH,OAAQ,CACJ8F,UAAW,WACXoB,gBAAiB,OACjB9G,WAAY,UACZyD,UAAW,WACX1D,WAAY,UACZgH,WAAY,SACZC,WAAY,MAMK,cAAd7K,EACTC,EAAI/B,EAAA,CACFoE,QAAS,kDACTC,YAAa,iDACbC,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B3C,KAAM,CAAEH,OAAQG,GAChB4C,KAAM,CACNC,KAAM,OACNiF,YAAa,GACbiB,cAAe,EACf9E,YAAa,EACbkI,YAAa,YAEb3H,MAAO,IACPC,OAAQ,GACRzB,SAAU,CACVC,EAAG,CACCC,MAAOpD,EAAQ,GACf+C,KAAM,UACNS,MAAOxD,EAAQ,IAEnBvE,EAAG,CACCkP,UAAW,MACXvH,MAAOpD,EAAQ,GACf+C,KAAM,eACNM,MAAO,CAAEvD,MAAO,CAAC,IAAK,KACtByD,KAAM,CACNC,MAAO,KACPzD,OAAQ,CAAC,GACT+G,QAAQ,EACRa,QAAQ,EACR4B,OAAO,IAGXjH,IAAK,CACDc,MAAOpD,EAAQ,GACf+C,KAAM,UACNS,MAAOxD,EAAQ,GACf6K,OAAQ,CACRrH,MAAO,KACPY,WAAY,EACZiJ,YAAa,OACbC,WAAY,OACZ9D,aAAc,GAEd1E,KAAM,CAAE1B,MAAOpD,EAAQ,GAAIiH,GAAI,MAAON,MAAO,cAEjDoB,KAAM,CACF3E,MAAOpD,EAAQ,GACf+C,KAAM,UACNa,OAAQ,KACRP,MAAO,CAAE2D,OAAQ,YAGrBjI,QAAS,CAAEsE,MAAO,CAAE5H,EAAG,iBAAiB,SAChC,CACR8F,KAAM,CAAEsB,OAAQ,eAChB+H,MAAO,CAAEK,QAAS,IAClBJ,OAAQ,CACJpH,cAAe,GACf+D,gBAAiB,IACjBpD,WAAY,EACZmJ,YAAa,MACbF,YAAa,MACb7D,cAAe,IAEnBjG,KAAM,CACFuD,QAAQ,EACR2C,MAAM,EACNF,OAAO,EACPjC,UAAW,EACX7D,cAAe,GACfC,cAAe,GACfoH,gBAAiB,IACjB9G,WAAY,aAMK,cAAd7D,EACTC,EAAO,CACLqC,QAAS,6CACTC,YAAa,kCACbgC,MAAO,IACPC,OAAQ,IACRqB,QAAS,EACTrD,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B3C,KAAM,CACN,CACI1C,KAAM,QACNuC,OAAQG,EACR0E,UAAW,CACX,CACI7B,KAAM,eACNK,MAAOpD,EAAQ,GACfwN,KAAM,QACNC,QAAS,aACTC,UAAW,0+BAEf,CACI3K,KAAM,UACNyD,GAAI,QACJI,KAAM,kCAEV,CACI7D,KAAM,UACNyD,GAAI,SACJI,KAAM,qCAMdC,OAAQ,CACR,CACIrJ,KAAM,QACNuF,KAAM,UACN+D,OAAQ,CAAE5G,KAAM,QAASkD,MAAO,QAChCtD,MAAO,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,aAInEgI,MAAO,CACP,CACI/E,KAAM,OACN5F,KAAM,CAAE+C,KAAM,SACdwH,OAAQ,CACRqB,MAAO,CACHvD,KAAM,CAAEpC,MAAO,QACf8E,MAAO,CAAEjM,MAAO,UAChBsJ,SAAU,CAAEtJ,MAAO,cACnB8L,KAAM,CAAE1E,MAAO,QAASD,MAAO,SAEnCwE,OAAQ,CACJI,YAAa,CAAE/L,MAAO,IAE1BuO,MAAO,CACHxC,YAAa,CAAE/L,MAAO,MAG1B2I,UAAW,CACX,CACI7B,KAAM,YACNC,KAAM,CAAC,IAAK,KACZwC,KAAM,CAAEpC,MAAO,QACfuK,OAAQ,CAAEvK,MAAO,eACjBU,KAAM,wBACNsE,SAAU,CAAEhF,MAAO,eACnBiF,WAAY,CAAEjF,MAAO,gBACrBwK,cAAe,CAAC,GAAI,IACpB5H,QAAS,OAQI,SAAd7F,EACPC,EAAI/B,EAAA,CACFoE,QAAS,kDACTC,YAAa,kCACbC,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B3C,KAAM,CAAEH,OAAQG,GAChB4C,KAAM,CACJC,KAAM,OACNE,SAAS,EACTiC,QAAS,IAEXhC,SAAQhF,EAAA,CACNiF,EAAG,CACDC,MAAOpD,EAAQ,GACf+C,KAAM,UACNQ,KAAM,CACJC,MAAOxD,EAAQ,GACfyD,cAAe,GACfC,cAAe,KAGnBjI,EAAG,CACD2H,MAAOpD,EAAQ,GACf+C,KAAM,eACNQ,KAAM,CACJC,MAAOxD,EAAQ,GACfyD,cAAe,GACfC,cAAe,MAIf1D,EAAQ7F,QAAU,GAAK,CACzBwJ,MAAO,CACLP,MAAOpD,EAAQ,GACf+C,KAAM,UACNa,OAAQ,CACNJ,MAAOxD,EAAQ,GACf0D,cAAe,GACfD,cAAe,QAItB,SACO,CACNK,KAAM,WACNP,KAAM,CACJQ,WAAY,UACZC,WAAY,UACZC,UAAW,WAEbL,OAAQ,CACNI,WAAY,UACZD,WAAY,aAMG,QAAd5D,IACPC,EAAI/B,EAAA,CACFoE,QAAS,kDACTC,YAAa,iCACbC,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B3C,KAAM,CAAEH,OAAQG,GAChB4C,KAAM,CACJC,KAAM,MACNE,SAAS,GAEXC,SAAQhF,EAAA,CACNiF,EAAG,CACDC,MAAOpD,EAAQ,GACf+C,KAAM,UACNQ,KAAM,CACJC,MAAOxD,EAAQ,GACfyD,cAAe,GACfC,cAAe,KAGnBjI,EAAG,CACD2H,MAAOpD,EAAQ,GACf+C,KAAM,eACNQ,KAAM,CACJC,MAAOxD,EAAQ,GACfyD,cAAe,GACfC,cAAe,MAIf1D,EAAQ7F,QAAU,GAAK,CACzBwJ,MAAO,CACLP,MAAOpD,EAAQ,GACf+C,KAAM,UACNa,OAAQ,CACNJ,MAAOxD,EAAQ,GACf0D,cAAe,GACfD,cAAe,QAItB,SACO,CACNK,KAAM,WACNP,KAAM,CACJQ,WAAY,UACZC,WAAY,UACZC,UAAW,WAEbL,OAAQ,CACNI,WAAY,UACZD,WAAY,cAInB,OAKoC,OAF/B1C,EAAYzH,SAASiU,cAAc,QAC/BC,MAAMC,QAAU,OAC1BnU,SAASoU,KAAKC,YAAY5M,GAAWO,EAAA5G,EAAA,EAEhBkT,UAAU7M,EAAWjB,EAAM,CAAE+N,SAAS,IAAQ,OAGnE,OAHM7M,EAAMM,EAAAjG,EACN4F,EAAOD,EAAOC,KAEpBK,EAAA5G,EAAA,EACqBuG,EAAK6M,WAAW,OAAM,OAA/B,OAAN5M,EAAMI,EAAAjG,EAAAiG,EAAA5G,EAAG,EACQqT,MAAM7M,GAAO,OAAtB,OAARC,EAAQG,EAAAjG,EAAAiG,EAAA5G,EAAG,EACEyG,EAASC,OAAM,OAA5BA,EAAIE,EAAAjG,GAEJgG,EAAS,IAAI2M,YACZC,UAAStP,EAAAxC,IAAApE,EAAG,SAAAmW,IAAA,IAAAC,EAAAC,EAAA,OAAAjS,IAAAC,EAAA,SAAAiS,GAAA,cAAAA,EAAA3T,GAAA,OAOW,OANxByT,EAAa9M,EAAOL,OAAOsN,MAAM,KAAK,IAGtCF,EAAQ7O,EAAMgP,OAAOC,SAASL,IAC9BtI,KAAOrG,EAAMqG,KACnBuI,EAAMzI,IAAMnG,EAAMmG,IAClByI,EAAMK,iBAAkB,EAAMJ,EAAA3T,EAAA,EAExB4E,EAAQsC,OAAM,cAAAyM,EAAA/S,EAAA,KAAA4S,EAAA,IAGpB7M,EAAOqN,cAActN,GAGrB9H,SAASoU,KAAKiB,YAAY5N,GAAW,eAAAO,EAAAhG,EAAA,KAAA+D,EAAA,IACtC,gBAAAuP,GAAA,OAAAxP,EAAAzB,MAAA,KAAAE,UAAA,EAhgFc,IAggFb,OAAAqB,EAAAxE,EAAA,eAAAwE,EAAAhF,EAAA,EAAA+E,EAAAC,EAAA7D,EAEFwG,QAAQgN,MAAK5P,GAAQ,cAAAC,EAAA5D,EAAA,KAAA0D,EAAA,iBAExBD,EAAApB,MAAA,KAAAE,UAAA,CA1gFDiR,OAAOC,QAAQ,WACbzV,SAAS4I,eAAe,aAAa8M,QAAUlQ,CACjD,E,ICHiC,IAAImQ,IAAI,a","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/define property getters","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/* global console, document, Excel, Office */\n\nOffice.onReady(() => {\n  document.getElementById(\"drawChart\").onclick = run;\n});\n\nexport async function run() {\n  try {\n    await Excel.run(async (context) => {\n      const sheet = context.workbook.worksheets.getActiveWorksheet();\n\n      // Get current selection\n      const range = context.workbook.getSelectedRange();\n      range.load(\"values, left, top\");\n      await context.sync();\n\n      const values = range.values;\n      if (values.length < 2) {\n        console.warn(\"Need at least header row + one data row\");\n        return;\n      }\n\n      // First row is header\n      const headers = values[0];\n      const rows = values.slice(1);\n\n      // Convert rows -> objects\n      const data = rows.map(row => {\n        let obj = {};\n        headers.forEach((h, i) => {\n          obj[h] = row[i];\n        });\n        return obj;\n      });\n\n      // Get chart type from dropdown\n      const chartType = document.getElementById(\"chartType\").value;\n\n      let spec;\n\n      if (chartType === \"point\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n          description: \"Colored scatter plot from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          mark: { type: \"point\", size: 100, tooltip: true },\n          encoding: {\n            x: { \n              field: headers[0], \n              type: \"quantitative\",\n              scale: { zero: false },\n              axis: {\n                title: headers[0],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            y: { \n              field: headers[1], \n              type: \"quantitative\",\n              scale: { zero: false },\n              axis: {\n                title: headers[1],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            // Add color encoding if 3rd column exists\n            ...(headers.length >= 3 && {\n              color: { \n                field: headers[2], \n                type: \"nominal\",\n                legend: {\n                  title: headers[2],\n                  titleFontSize: 12,\n                  labelFontSize: 11\n                }\n              }\n            }),\n            // Add shape encoding if 4th column exists\n            ...(headers.length >= 4 && {\n              shape: { \n                field: headers[3], \n                type: \"nominal\",\n                legend: {\n                  title: headers[3],\n                  titleFontSize: 12,\n                  labelFontSize: 11\n                }\n              }\n            })\n          },\n          config: {\n            font: \"Segoe UI\",\n            axis: {\n              labelColor: \"#605e5c\",\n              titleColor: \"#323130\",\n              gridColor: \"#f3f2f1\"\n            },\n            legend: {\n              titleColor: \"#323130\",\n              labelColor: \"#605e5c\"\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"line\") {\n        // Multi-line chart\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n          description: \"Multi-line chart from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          mark: { \n            type: \"line\", \n            point: true,\n            tooltip: true,\n            strokeWidth: 2\n          },\n          encoding: {\n            x: { \n              field: headers[0], \n              type: \"ordinal\",\n              axis: {\n                title: headers[0],\n                labelFontSize: 12,\n                titleFontSize: 14,\n                labelAngle: 0\n              }\n            },\n            y: { \n              field: headers[1], \n              type: \"quantitative\",\n              axis: {\n                title: headers[1],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            // Add color encoding for multiple lines if 3rd column exists\n            ...(headers.length >= 3 && {\n              color: { \n                field: headers[2], \n                type: \"nominal\",\n                legend: {\n                  title: headers[2],\n                  titleFontSize: 12,\n                  labelFontSize: 11\n                }\n              }\n            })\n          },\n          config: {\n            font: \"Segoe UI\",\n            axis: {\n              labelColor: \"#605e5c\",\n              titleColor: \"#323130\",\n              gridColor: \"#f3f2f1\"\n            },\n            legend: {\n              titleColor: \"#323130\",\n              labelColor: \"#605e5c\"\n            },\n            point: {\n              size: 60,\n              filled: true\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"waterfall\") {\n        // Process waterfall data inline - set last entry's amount to 0\n        const processedData = [...data];\n        if (processedData.length > 0) {\n          processedData[processedData.length - 1] = {\n            ...processedData[processedData.length - 1],\n            [headers[1]]: 0\n          };\n        }\n\n        // Calculate dynamic dimensions\n        const numDataPoints = data.length;\n        const dynamicWidth = Math.max(400, Math.min(1200, numDataPoints * 70));\n        const maxAmount = Math.max(...data.map(d => Math.abs(d[headers[1]])));\n        const dynamicHeight = Math.max(300, Math.min(600, maxAmount / 100 + 200));\n\n        spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Waterfall chart from Excel selection\",\n\t      background: \"white\",\n        data: { values: processedData },\n\t      config: { view: { stroke: \"transparent\" }},\n          width: dynamicWidth,\n          height: dynamicHeight,\n          transform: [\n            {\"window\": [{\"op\": \"sum\", \"field\": headers[1], \"as\": \"sum\"}]},\n            {\"window\": [{\"op\": \"lead\", \"field\": headers[0], \"as\": \"lead\"}]},\n            {\n              \"calculate\": `datum.lead === null ? datum.${headers[0]} : datum.lead`,\n              \"as\": \"lead\"\n            },\n            {\n              \"calculate\": `datum.${headers[0]} === '${data[data.length - 1][headers[0]]}' ? 0 : datum.sum - datum.${headers[1]}`,\n              \"as\": \"previous_sum\"\n            },\n            {\n              \"calculate\": `datum.${headers[0]} === '${data[data.length - 1][headers[0]]}' ? datum.sum : datum.${headers[1]}`,\n              \"as\": \"amount\"\n            },\n            {\n              \"calculate\": `datum.${headers[0]} === '${data[0][headers[0]]}' ? datum.${headers[1]} / 2 : datum.${headers[0]} === '${data[data.length - 1][headers[0]]}' ? datum.${headers[1]} / 2 : (datum.sum + datum.previous_sum) / 2`,\n              \"as\": \"center\"\n            },\n            {\n              \"calculate\": `datum.${headers[0]} === '${data[data.length - 1][headers[0]]}' ? datum.sum : (datum.${headers[0]} !== '${data[0][headers[0]]}' && datum.${headers[0]} !== '${data[data.length - 1][headers[0]]}' && datum.${headers[1]} > 0 ? '+' : '') + datum.${headers[1]}`,\n              \"as\": \"text_amount\"\n            },\n            {\"calculate\": \"(datum.sum + datum.previous_sum) / 2\", \"as\": \"center\"}\n          ],\n          encoding: {\n            x: {\n              field: headers[0],\n              type: \"ordinal\",\n              sort: null,\n              axis: {\"labelAngle\": 0, \"title\": headers[0]},\n              scale: {\"paddingInner\": 0.1, \"paddingOuter\": 0.05}\n            }\n          },\n          layer: [\n            {\n              mark: {\"type\": \"bar\", \"size\": 60},\n              encoding: {\n                y: {\n                  field: \"previous_sum\",\n                  type: \"quantitative\",\n                  title: headers[1]\n                },\n                y2: {\"field\": \"sum\"},\n                color: {\n                  condition: [\n                    {\n                      test: `datum.${headers[0]} === '${data[0][headers[0]]}' || datum.${headers[0]} === '${data[data.length - 1][headers[0]]}'`,\n                      value: \"#00B0F0\"\n                    },\n                    {\"test\": \"datum.sum < datum.previous_sum\", \"value\": \"#E15759\"}\n                  ],\n                  value: \"#70AD47\"\n                }\n              }\n            },\n            {\n              mark: {\n                type: \"rule\",\n                color: \"#8F8F8F\",\n                opacity: 1,\n                strokeWidth: 2,\n                xOffset: -30,\n                x2Offset: 30\n              },\n              encoding: {\n                x2: {\"field\": \"lead\"},\n                y: {\"field\": \"sum\", \"type\": \"quantitative\"}\n              }\n            },\n            {\n              \"mark\": {\n                type: \"text\", \n                dy: {\"expr\": \"datum.amount >= 0 ? -4 : 4\"}, \n                baseline: {\"expr\": \"datum.amount >= 0 ? 'bottom' : 'top'\"}\n              },\n              encoding: {\n                y: {\"field\": \"sum\", \"type\": \"quantitative\"},\n                text: {\"field\": \"sum\", \"type\": \"nominal\"},\n                opacity: {\n                  \"condition\": {\n                    \"test\": `datum.${headers[0]} === '${data[0][headers[0]]}' || datum.${headers[0]} === '${data[data.length - 1][headers[0]]}'`,\n                    \"value\": 0\n                  },\n                  \"value\": 1\n                }\n              }\n            },\n            {\n              mark: {\"type\": \"text\", \"fontWeight\": \"bold\", \"baseline\": \"middle\"},\n              encoding: {\n                y: {\"field\": \"center\", \"type\": \"quantitative\"},\n                text: {\"field\": \"text_amount\", \"type\": \"nominal\"},\n                color: {\n                  condition: [\n                    {\n                      test: `datum.${headers[0]} === '${data[0][headers[0]]}' || datum.${headers[0]} === '${data[data.length - 1][headers[0]]}'`,\n                      value: \"#725a30\"\n                    }\n                  ],\n                  value: \"white\"\n                }\n              }\n            }\n          ],\n          config: {\"text\": {\"fontWeight\": \"bold\", \"color\": \"#D9D9D9\"}}\n        };\n      }\n\n      else if (chartType === \"bullet\") {\n      const data = rows.map(r => ({\n        title: r[0],\n        ranges: [+r[1], +r[2], +r[3]],\n        measures: [+r[4], +r[5]],\n        markers: [+r[6]]\n      }));\n\n      spec = {\n        \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        \"data\": { \"values\": data },\n        \"facet\": {\n        \"row\": {\n            \"field\": \"title\", \"type\": \"ordinal\",\n            \"header\": { \"labelAngle\": 0, \"title\": \"\", \"labelAlign\": \"left\" }\n        }\n        },\n        \"spacing\": 10,\n        \"spec\": {\n        \"encoding\": {\n            \"x\": {\n            \"type\": \"quantitative\",\n            \"scale\": { \"nice\": false },\n            \"title\": null\n            }\n        },\n        \"layer\": [\n            { \"mark\": { \"type\": \"bar\", \"color\": \"#eee\" }, \"encoding\": { \"x\": { \"field\": \"ranges[2]\" } } },\n            { \"mark\": { \"type\": \"bar\", \"color\": \"#ddd\" }, \"encoding\": { \"x\": { \"field\": \"ranges[1]\" } } },\n            { \"mark\": { \"type\": \"bar\", \"color\": \"#ccc\" }, \"encoding\": { \"x\": { \"field\": \"ranges[0]\" } } },\n            { \"mark\": { \"type\": \"bar\", \"color\": \"lightsteelblue\", \"size\": 10 }, \"encoding\": { \"x\": { \"field\": \"measures[1]\" } } },\n            { \"mark\": { \"type\": \"bar\", \"color\": \"steelblue\", \"size\": 10 }, \"encoding\": { \"x\": { \"field\": \"measures[0]\" } } },\n            { \"mark\": { \"type\": \"tick\", \"color\": \"black\" }, \"encoding\": { \"x\": { \"field\": \"markers[0]\" } } }\n        ]\n        },\n        \"resolve\": { \"scale\": { \"x\": \"independent\" } },\n        \"config\": { \"tick\": { \"thickness\": 2 }, \"scale\": { \"barBandPaddingInner\": 0 } }\n      };\n      }\n\n      else if (chartType === \"box\") {\n      // Expect headers: Category | Value\n      const data = rows\n        .filter(r => r[0] && !isNaN(+r[1]))\n        .map(r => ({\n          category: r[0],\n          value: +r[1]\n        }));\n\n      spec = {\n        \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",\n        \"description\": \"Box plot from Excel selection\",\n        \"data\": { \"values\": data },\n        \"mark\": {\n          \"type\": \"boxplot\",\n          \"extent\": \"min-max\"   // show whiskers from min to max\n        },\n        \"encoding\": {\n          \"x\": { \"field\": \"category\", \"type\": \"nominal\" },\n          \"y\": {\n            \"field\": \"value\",\n            \"type\": \"quantitative\",\n            \"scale\": { \"zero\": false }\n          },\n          \"color\": {\n            \"field\": \"category\",\n            \"type\": \"nominal\",\n            \"legend\": null\n          }\n        }\n      };\n      }\n\n      else if (chartType === \"pie\") {\n        spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        description: \"Pie chart from Excel selection\",\n        data: { values: data },\n        mark: { type: \"arc\", outerRadius: 120 },\n        encoding: {\n          theta: { field: headers[1], type: \"quantitative\" },\n          color: { field: headers[0], type: \"nominal\" }\n          }\n        };\n      }\n\n      else if (chartType === \"histogram\") {\n      // Expect a single numeric column\n      const data = rows\n        .filter(r => !isNaN(+r[0]))\n        .map(r => ({ value: +r[0] }));\n\n      spec = {\n        \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",\n        \"description\": \"Histogram from Excel selection\",\n        \"data\": { \"values\": data },\n        \"mark\": \"bar\",\n        \"encoding\": {\n          \"x\": {\n            \"field\": \"value\",\n            \"bin\": { \"maxbins\": 20 },   // adjust bin count here\n            \"type\": \"quantitative\",\n            \"axis\": { \"title\": \"Value\" }\n          },\n          \"y\": {\n            \"aggregate\": \"count\",\n            \"type\": \"quantitative\",\n            \"axis\": { \"title\": \"Count\" }\n          }\n        }\n      };\n      }\n\n      else if (chartType === \"mekko\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega/v5.json\",\n          description: \"Marimekko chart from Excel selection\",\n          width: 800,\n          height: 500,\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          view: { stroke: null },\n          padding: { top: 60, bottom: 80, left: 60, right: 60 },\n          data: [\n            {\n              name: \"table\",\n              values: data\n            },\n            {\n              name: \"categories\",\n              source: \"table\",\n              transform: [\n                {\n                  type: \"aggregate\",\n                  fields: [headers[2]],\n                  ops: [\"sum\"],\n                  as: [\"categoryTotal\"],\n                  groupby: [headers[0]]\n                },\n                {\n                  type: \"stack\",\n                  offset: \"normalize\",\n                  sort: { field: \"categoryTotal\", order: \"descending\" },\n                  field: \"categoryTotal\",\n                  as: [\"x0\", \"x1\"]\n                },\n                {\n                  type: \"formula\",\n                  as: \"Percent\",\n                  expr: \"datum.x1-datum.x0\"\n                },\n                {\n                  type: \"formula\",\n                  as: \"Label\",\n                  expr: `datum.${headers[0]} + ' (' + format(datum.Percent,'.1%') + ')'`\n                }\n              ]\n            },\n            {\n              name: \"finalTable\",\n              source: \"table\",\n              transform: [\n                {\n                  type: \"stack\",\n                  offset: \"normalize\",\n                  groupby: [headers[0]],\n                  sort: { field: headers[2], order: \"descending\" },\n                  field: headers[2],\n                  as: [\"y0\", \"y1\"]\n                },\n                {\n                  type: \"stack\",\n                  groupby: [headers[0]],\n                  sort: { field: headers[2], order: \"descending\" },\n                  field: headers[2],\n                  as: [\"z0\", \"z1\"]\n                },\n                {\n                  type: \"lookup\",\n                  from: \"categories\",\n                  key: headers[0],\n                  values: [\"x0\", \"x1\"],\n                  fields: [headers[0]]\n                },\n                {\n                  type: \"formula\",\n                  as: \"Percent\",\n                  expr: \"datum.y1-datum.y0\"\n                },\n                {\n                  type: \"formula\",\n                  as: \"Label\",\n                  expr: `[datum.${headers[1]}, format(datum.${headers[2]}, '.0f') + ' (' + format(datum.Percent, '.1%') + ')']`\n                },\n                {\n                  type: \"window\",\n                  sort: { field: \"y0\", order: \"ascending\" },\n                  ops: [\"row_number\"],\n                  fields: [null],\n                  as: [\"rank\"],\n                  groupby: [headers[0]]\n                }\n              ]\n            }\n          ],\n          scales: [\n            {\n              name: \"x\",\n              type: \"linear\",\n              range: \"width\",\n              domain: { data: \"finalTable\", field: \"x1\" }\n            },\n            {\n              name: \"y\",\n              type: \"linear\",\n              range: \"height\",\n              nice: false,\n              zero: true,\n              domain: { data: \"finalTable\", field: \"z1\" }\n            },\n            {\n              name: \"opacity\",\n              type: \"linear\",\n              range: [1, 0.6],\n              domain: { data: \"finalTable\", field: \"rank\" }\n            },\n            {\n              name: \"color\",\n              type: \"ordinal\",\n              range: { scheme: \"category20\" },\n              domain: {\n                data: \"categories\",\n                field: headers[0],\n                sort: { field: \"x0\", order: \"ascending\", op: \"sum\" }\n              }\n            }\n          ],\n          axes: [\n            {\n              orient: \"left\",\n              scale: \"y\",\n              zindex: 1,\n              format: \"\",\n              tickCount: 5,\n              tickSize: 15,\n              labelColor: { value: \"#333740\" },\n              labelFontWeight: { value: \"normal\" },\n              labelFontSize: { value: 12 },\n              labelFont: { value: \"Segoe UI\" },\n              offset: 5,\n              domain: false,\n              encode: {\n                labels: {\n                  update: {\n                    text: { signal: `format(datum.value, '.0f')` }\n                  }\n                }\n              }\n            }\n          ],\n          marks: [\n            {\n              type: \"rect\",\n              name: \"bars\",\n              from: { data: \"finalTable\" },\n              encode: {\n                update: {\n                  x: { scale: \"x\", field: \"x0\" },\n                  x2: { scale: \"x\", field: \"x1\" },\n                  y: { scale: \"y\", field: \"z0\" },\n                  y2: { scale: \"y\", field: \"z1\" },\n                  fill: { scale: \"color\", field: headers[0] },\n                  stroke: { value: \"white\" },\n                  strokeWidth: { value: 1 },\n                  fillOpacity: { scale: \"opacity\", field: \"rank\" },\n                  tooltip: { signal: \"datum\" }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              name: \"labels\",\n              interactive: false,\n              from: { data: \"bars\" },\n              encode: {\n                update: {\n                  x: { signal: \"(datum.x2 - datum.x)*0.5 + datum.x\" },\n                  align: { value: \"center\" },\n                  text: { field: \"datum.Label\" },\n                  y: { signal: \"(datum.y2 - datum.y)*0.5 + datum.y\" },\n                  fill: { value: \"white\" },\n                  font: { value: \"Segoe UI\" },\n                  lineHeight: { value: 12 },\n                  fontSize: { value: 10 },\n                  opacity: { signal: \"(datum.x2 - datum.x) > 0.05 && (datum.y2 - datum.y) > 20 ? 1 : 0\" }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              name: \"categoryLabels\",\n              from: { data: \"categories\" },\n              encode: {\n                update: {\n                  x: { scale: \"x\", signal: \"(datum.x1-datum.x0)/2 + datum.x0\" },\n                  y: { signal: \"-15\" },\n                  text: { field: headers[0] },\n                  align: { value: \"center\" },\n                  baseline: { value: \"bottom\" },\n                  fill: { value: \"#333740\" },\n                  fontWeight: { value: \"bold\" },\n                  fontSize: { value: 12 },\n                  font: { value: \"Segoe UI\" }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              name: \"categoryPercentages\",\n              from: { data: \"categories\" },\n              encode: {\n                update: {\n                  x: { scale: \"x\", signal: \"(datum.x1-datum.x0)/2 + datum.x0\" },\n                  y: { signal: \"height + 30\" },\n                  text: { field: \"Label\" },\n                  align: { value: \"center\" },\n                  baseline: { value: \"top\" },\n                  fill: { value: \"#666666\" },\n                  fontWeight: { value: \"normal\" },\n                  fontSize: { value: 10 },\n                  font: { value: \"Segoe UI\" }\n                }\n              }\n            }\n          ]\n        };\n      }\n\n      if (chartType === \"marimekko\") {\n      if (headers.length < 3) {\n        console.warn(\"Marimekko chart requires at least 3 columns: Category, Subcategory, Value\");\n        return;\n      }\n\n      spec = {\n        \"$schema\": \"https://vega.github.io/schema/vega/v5.json\",\n        \"description\": \"Marimekko Chart from Excel selection\",\n        \"width\": 600,\n        \"height\": 400,\n        \"background\": \"white\",\n        \"view\": { \"stroke\": null },\n        \"padding\": { \"top\": 30, \"bottom\": 60, \"left\": 60, \"right\": 60 },\n        \"title\": {\n          \"text\": \"Marimekko Chart\",\n          \"offset\": 20,\n          \"align\": \"center\",\n          \"anchor\": \"middle\",\n          \"fontSize\": 18,\n          \"fontWeight\": \"600\",\n          \"color\": \"#333333\"\n        },\n        \"data\": [\n          {\n            \"name\": \"table\",\n            \"values\": data,\n            \"transform\": [\n              {\n                \"type\": \"formula\",\n                \"as\": \"Category\",\n                \"expr\": `datum['${headers[0]}']`\n              },\n              {\n                \"type\": \"formula\", \n                \"as\": \"Subcategory\",\n                \"expr\": `datum['${headers[1]}']`\n              },\n              {\n                \"type\": \"formula\",\n                \"as\": \"Value\", \n                \"expr\": `datum['${headers[2]}']`\n              }\n            ]\n          },\n          {\n            \"name\": \"categories\",\n            \"source\": \"table\",\n            \"transform\": [\n              {\n                \"type\": \"aggregate\",\n                \"fields\": [\"Value\"],\n                \"ops\": [\"sum\"],\n                \"as\": [\"categoryTotal\"],\n                \"groupby\": [\"Category\"]\n              },\n              {\n                \"type\": \"stack\",\n                \"offset\": \"normalize\",\n                \"sort\": { \"field\": \"categoryTotal\", \"order\": \"descending\" },\n                \"field\": \"categoryTotal\",\n                \"as\": [\"x0\", \"x1\"]\n              },\n              {\n                \"type\": \"formula\",\n                \"as\": \"Percent\",\n                \"expr\": \"datum.x1 - datum.x0\"\n              }\n            ]\n          },\n          {\n            \"name\": \"finalTable\",\n            \"source\": \"table\",\n            \"transform\": [\n              {\n                \"type\": \"stack\",\n                \"offset\": \"normalize\",\n                \"groupby\": [\"Category\"],\n                \"sort\": { \"field\": \"Value\", \"order\": \"descending\" },\n                \"field\": \"Value\",\n                \"as\": [\"y0\", \"y1\"]\n              },\n              {\n                \"type\": \"lookup\",\n                \"from\": \"categories\",\n                \"key\": \"Category\",\n                \"values\": [\"x0\", \"x1\"],\n                \"fields\": [\"Category\"]\n              },\n              {\n                \"type\": \"formula\",\n                \"as\": \"Percent\",\n                \"expr\": \"datum.y1 - datum.y0\"\n              }\n            ]\n          }\n        ],\n        \"scales\": [\n          {\n            \"name\": \"x\",\n            \"type\": \"linear\",\n            \"range\": \"width\",\n            \"domain\": { \"data\": \"finalTable\", \"field\": \"x1\" }\n          },\n          {\n            \"name\": \"y\",\n            \"type\": \"linear\",\n            \"range\": \"height\",\n            \"nice\": false,\n            \"zero\": true,\n            \"domain\": { \"data\": \"finalTable\", \"field\": \"y1\" }\n          },\n          {\n            \"name\": \"color\",\n            \"type\": \"ordinal\",\n            \"range\": { \"scheme\": \"category20\" },\n            \"domain\": {\n              \"data\": \"categories\",\n              \"field\": \"Category\",\n              \"sort\": { \"field\": \"x0\", \"order\": \"ascending\", \"op\": \"sum\" }\n            }\n          }\n        ],\n        \"axes\": [\n          {\n            \"orient\": \"left\",\n            \"scale\": \"y\",\n            \"format\": \"%\",\n            \"tickCount\": 5,\n            \"labelColor\": \"#333333\",\n            \"labelFontSize\": 11,\n            \"domain\": false\n          }\n        ],\n        \"marks\": [\n          {\n            \"type\": \"rect\",\n            \"name\": \"bars\",\n            \"from\": { \"data\": \"finalTable\" },\n            \"encode\": {\n              \"update\": {\n                \"x\": { \"scale\": \"x\", \"field\": \"x0\" },\n                \"x2\": { \"scale\": \"x\", \"field\": \"x1\" },\n                \"y\": { \"scale\": \"y\", \"field\": \"y0\" },\n                \"y2\": { \"scale\": \"y\", \"field\": \"y1\" },\n                \"fill\": { \"scale\": \"color\", \"field\": \"Category\" },\n                \"stroke\": { \"value\": \"white\" },\n                \"strokeWidth\": { \"value\": 1 },\n                \"opacity\": { \"value\": 0.8 },\n                \"tooltip\": { \n                  \"signal\": \"{'Category': datum.Category, 'Subcategory': datum.Subcategory, 'Value': datum.Value, 'Percentage': format(datum.Percent, '.1%')}\" \n                }\n              },\n              \"hover\": {\n                \"opacity\": { \"value\": 1.0 }\n              }\n            }\n          },\n          {\n            \"type\": \"text\",\n            \"name\": \"valueLabels\",\n            \"from\": { \"data\": \"finalTable\" },\n            \"encode\": {\n              \"update\": {\n                \"x\": { \"scale\": \"x\", \"signal\": \"(datum.x1 - datum.x0)/2 + datum.x0\" },\n                \"y\": { \"scale\": \"y\", \"signal\": \"(datum.y1 - datum.y0)/2 + datum.y0\" },\n                \"text\": { \n                  \"signal\": \"datum.Percent > 0.027 ? [datum.Subcategory, format(datum.Value, ',.0f') + ' (' + format(datum.Percent, '.0%') + ')'] : []\" \n                },\n                \"align\": { \"value\": \"center\" },\n                \"baseline\": { \"value\": \"middle\" },\n                \"fill\": { \"value\": \"white\" },\n                \"fontSize\": { \"value\": 10 },\n                \"fontWeight\": { \"value\": \"normal\" },\n                \"font\": { \"value\": \"Segoe UI\" },\n                \"lineHeight\": { \"value\": 12 },\n                \"opacity\": { \"signal\": \"datum.Percent > 0.027 ? 1 : 0\" }\n              }\n            }\n          },\n          {\n            \"type\": \"text\",\n            \"name\": \"categoryLabels\",\n            \"from\": { \"data\": \"categories\" },\n            \"encode\": {\n              \"update\": {\n                \"x\": { \"scale\": \"x\", \"signal\": \"(datum.x1 - datum.x0)/2 + datum.x0\" },\n                \"y\": { \"signal\": \"height + 25\" },\n                \"text\": { \"field\": \"Category\" },\n                \"align\": { \"value\": \"center\" },\n                \"baseline\": { \"value\": \"top\" },\n                \"fill\": { \"value\": \"#333333\" },\n                \"fontSize\": { \"value\": 12 },\n                \"fontWeight\": { \"value\": \"bold\" }\n              }\n            }\n          }\n        ]\n      };\n      }\n\n      else if (chartType === \"arc\") {\n        // Transform Excel data for arc chart\n        const edges = data.map((row, index) => ({\n          source: row[headers[0]],\n          target: row[headers[1]],\n          value: headers.length >= 3 && row[headers[2]] ? row[headers[2]] : 1,\n          group: headers.length >= 4 && row[headers[3]] ? row[headers[3]] : \"default\"\n        }));\n\n        // Get unique nodes from edges\n        const nodeMap = new Map();\n        edges.forEach(edge => {\n          if (!nodeMap.has(edge.source)) {\n            nodeMap.set(edge.source, { \n              name: edge.source, \n              group: edge.group,\n              index: nodeMap.size\n            });\n          }\n          if (!nodeMap.has(edge.target)) {\n            nodeMap.set(edge.target, { \n              name: edge.target, \n              group: edge.group,\n              index: nodeMap.size\n            });\n          }\n        });\n\n        const nodes = Array.from(nodeMap.values());\n\n        // Transform edges to use node indices\n        const edgesWithIndices = edges.map(edge => ({\n          source: nodeMap.get(edge.source).index,\n          target: nodeMap.get(edge.target).index,\n          value: edge.value\n        }));\n\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega/v5.json\",\n          description: \"Arc diagram from Excel selection\",\n          width: Math.max(600, nodes.length * 40),\n          height: 300,\n          padding: { top: 20, bottom: 80, left: 20, right: 20 },\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: [\n            {\n              name: \"edges\",\n              values: edgesWithIndices\n            },\n            {\n              name: \"sourceDegree\",\n              source: \"edges\",\n              transform: [\n                { type: \"aggregate\", groupby: [\"source\"], as: [\"count\"] }\n              ]\n            },\n            {\n              name: \"targetDegree\", \n              source: \"edges\",\n              transform: [\n                { type: \"aggregate\", groupby: [\"target\"], as: [\"count\"] }\n              ]\n            },\n            {\n              name: \"nodes\",\n              values: nodes,\n              transform: [\n                { type: \"window\", ops: [\"rank\"], as: [\"order\"] },\n                {\n                  type: \"lookup\", from: \"sourceDegree\", key: \"source\",\n                  fields: [\"index\"], as: [\"sourceDegree\"],\n                  default: { count: 0 }\n                },\n                {\n                  type: \"lookup\", from: \"targetDegree\", key: \"target\", \n                  fields: [\"index\"], as: [\"targetDegree\"],\n                  default: { count: 0 }\n                },\n                {\n                  type: \"formula\", as: \"degree\",\n                  expr: \"(datum.sourceDegree.count || 0) + (datum.targetDegree.count || 0)\"\n                }\n              ]\n            }\n          ],\n\n          scales: [\n            {\n              name: \"position\",\n              type: \"band\",\n              domain: { data: \"nodes\", field: \"order\", sort: true },\n              range: \"width\"\n            },\n            {\n              name: \"color\",\n              type: \"ordinal\",\n              range: { scheme: \"category20\" },\n              domain: { data: \"nodes\", field: \"group\" }\n            }\n          ],\n\n          marks: [\n            {\n              type: \"symbol\",\n              name: \"layout\",\n              interactive: false,\n              from: { data: \"nodes\" },\n              encode: {\n                enter: { opacity: { value: 0 } },\n                update: {\n                  x: { scale: \"position\", field: \"order\" },\n                  y: { value: 0 },\n                  size: { field: \"degree\", mult: 8, offset: 50 },\n                  fill: { scale: \"color\", field: \"group\" }\n                }\n              }\n            },\n            {\n              type: \"path\",\n              from: { data: \"edges\" },\n              encode: {\n                update: {\n                  stroke: { value: \"#0078d4\" },\n                  strokeOpacity: { value: 0.4 },\n                  strokeWidth: { field: \"value\", mult: 2, offset: 1 }\n                }\n              },\n              transform: [\n                {\n                  type: \"lookup\", from: \"layout\", key: \"datum.index\",\n                  fields: [\"datum.source\", \"datum.target\"],\n                  as: [\"sourceNode\", \"targetNode\"]\n                },\n                {\n                  type: \"linkpath\",\n                  sourceX: { expr: \"min(datum.sourceNode.x, datum.targetNode.x)\" },\n                  targetX: { expr: \"max(datum.sourceNode.x, datum.targetNode.x)\" },\n                  sourceY: { expr: \"0\" },\n                  targetY: { expr: \"0\" },\n                  shape: \"arc\"\n                }\n              ]\n            },\n            {\n              type: \"symbol\",\n              from: { data: \"layout\" },\n              encode: {\n                update: {\n                  x: { field: \"x\" },\n                  y: { field: \"y\" },\n                  fill: { field: \"fill\" },\n                  size: { field: \"size\" },\n                  stroke: { value: \"white\" },\n                  strokeWidth: { value: 1 },\n                  tooltip: { \n                    signal: \"{'Node': datum.datum.name, 'Group': datum.datum.group, 'Connections': datum.datum.degree}\" \n                  }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              from: { data: \"nodes\" },\n              encode: {\n                update: {\n                  x: { scale: \"position\", field: \"order\" },\n                  y: { value: 25 },\n                  fontSize: { value: 10 },\n                  align: { value: \"center\" },\n                  baseline: { value: \"top\" },\n                  angle: { value: -45 },\n                  text: { field: \"name\" },\n                  fill: { value: \"#323130\" },\n                  font: { value: \"Segoe UI\" }\n                }\n              }\n            }\n          ],\n          \n          config: {\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            text: { font: \"Segoe UI\", fontSize: 10, fill: \"#605e5c\" }\n          }\n        };\n      }\n\n      else if (chartType === \"lollipop\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n          description: \"Lollipop chart from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          encoding: {\n            y: {\n              field: headers[0],\n              type: \"nominal\",\n              sort: \"-x\",\n              axis: {\n                domain: false,\n                title: null,\n                ticks: false,\n                labelFont: \"Segoe UI\",\n                labelFontSize: 14,\n                labelPadding: 10,\n                labelColor: \"#605e5c\"\n              }\n            },\n            x: {\n              field: headers[1],\n              type: \"quantitative\",\n              axis: {\n                domain: false,\n                ticks: false,\n                grid: true,\n                gridColor: \"#e0e0e0\",\n                labelFont: \"Segoe UI\",\n                labelFontSize: 12,\n                labelColor: \"#605e5c\",\n                title: headers[1],\n                titleFont: \"Segoe UI\",\n                titleFontSize: 14,\n                titleColor: \"#323130\"\n              }\n            },\n            color: { value: \"#0078d4\" }\n          },\n          layer: [\n            {\n              mark: {\n                type: \"rule\",\n                tooltip: true,\n                strokeWidth: 3,\n                opacity: 0.7\n              }\n            },\n            {\n              mark: {\n                type: \"circle\",\n                tooltip: true,\n                size: 300,\n                opacity: 0.9\n              },\n              encoding: {\n                size: {\n                  field: headers[1],\n                  type: \"quantitative\",\n                  scale: {\n                    range: [200, 800]\n                  },\n                  legend: null\n                }\n              }\n            }\n          ],\n          config: {\n            autosize: {\n              type: \"fit\",\n              contains: \"padding\"\n            },\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            text: { font: \"Segoe UI\", fontSize: 12, fill: \"#605E5C\" }\n          }\n        };\n      }\n\n      else if (chartType === \"strip\") {\n        // Strip plot implementation\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n          description: \"Strip plot showing distribution using tick marks\",\n          background: \"white\",\n          config: { \n            view: { stroke: \"transparent\" },\n            axis: {\n              labelFontSize: 11,\n              titleFontSize: 12,\n              labelColor: \"#605E5C\",\n              titleColor: \"#323130\"\n            }\n          },\n          data: { values: data },\n          mark: {\n            type: \"tick\",\n            thickness: 2,\n            size: 15,\n            color: \"#0078d4\",\n            opacity: 0.8,\n            tooltip: true\n          },\n          encoding: {\n            x: { \n              field: headers[0], \n              type: \"quantitative\",\n              axis: {\n                title: headers[0],\n                grid: true,\n                gridColor: \"#f3f2f1\",\n                gridOpacity: 0.5\n              }\n            },\n            y: { \n              field: headers[1], \n              type: \"ordinal\",\n              axis: {\n                title: headers[1],\n                labelAngle: 0\n              }\n            },\n            // Add color encoding if 3rd column exists\n            ...(headers.length > 2 && {\n              color: {\n                field: headers[2],\n                type: \"nominal\",\n                scale: { scheme: \"category10\" },\n                legend: {\n                  title: headers[2],\n                  orient: \"right\",\n                  titleFontSize: 11,\n                  labelFontSize: 10\n                }\n              }\n            }),\n            tooltip: headers.map(h => ({ field: h, type: \"nominal\" }))\n          }\n        };\n      }\n\n      else if (chartType === \"treemap\") {\n        let treeData;\n        \n        if (headers.length >= 3) {\n          // Hierarchical data with parent column\n          treeData = data.map((d, i) => ({\n            id: `${d[headers[1]]}_${i}`,\n            name: d[headers[1]],\n            parent: d[headers[0]] || \"root\",\n            size: parseFloat(d[headers[2]]) || 0\n          }));\n          \n          // Add root and parent nodes\n          const parents = [...new Set(treeData.map(d => d.parent))];\n          parents.forEach(parent => {\n            if (parent !== \"root\" && !treeData.find(d => d.id === parent)) {\n              treeData.push({\n                id: parent,\n                name: parent,\n                parent: \"root\",\n                size: 0\n              });\n            }\n          });\n          \n          // Add root node\n          treeData.push({\n            id: \"root\",\n            name: \"Root\",\n            parent: \"\",\n            size: 0\n          });\n        } else {\n          // Simple flat data - create single level hierarchy\n          treeData = [\n            {\n              id: \"root\",\n              name: \"Root\", \n              parent: \"\",\n              size: 0\n            },\n            ...data.map((d, i) => ({\n              id: `item_${i}`,\n              name: d[headers[1]],\n              parent: \"root\",\n              size: parseFloat(d[headers[2]]) || 0\n            }))\n          ];\n        }\n\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega/v5.json\",\n          description: \"Treemap visualization from Excel data\",\n          background: \"white\",\n          width: 600,\n          height: 400,\n          padding: 5,\n          autosize: \"fit\",\n          \n          data: [\n            {\n              name: \"tree\",\n              values: treeData,\n              transform: [\n                {\n                  type: \"stratify\",\n                  key: \"id\",\n                  parentKey: \"parent\"\n                },\n                {\n                  type: \"treemap\",\n                  field: \"size\",\n                  sort: { field: \"value\" },\n                  round: true,\n                  method: \"squarify\",\n                  ratio: 1.6,\n                  size: [{ signal: \"width\" }, { signal: \"height\" }]\n                }\n              ]\n            },\n            {\n              name: \"nodes\",\n              source: \"tree\",\n              transform: [\n                { type: \"filter\", expr: \"datum.children\" }\n              ]\n            },\n            {\n              name: \"leaves\", \n              source: \"tree\",\n              transform: [\n                { type: \"filter\", expr: \"!datum.children\" }\n              ]\n            }\n          ],\n          \n          scales: [\n            {\n              name: \"color\",\n              type: \"ordinal\",\n              domain: { data: \"nodes\", field: \"name\" },\n              range: [\n                \"#0078d4\", \"#00bcf2\", \"#40e0d0\", \"#00cc6a\", \"#10893e\",\n                \"#107c10\", \"#bad80a\", \"#ffb900\", \"#ff8c00\", \"#d13438\"\n              ]\n            },\n            {\n              name: \"fontSize\",\n              type: \"ordinal\", \n              domain: [0, 1, 2, 3],\n              range: [20, 16, 12, 10]\n            },\n            {\n              name: \"opacity\",\n              type: \"ordinal\",\n              domain: [0, 1, 2, 3], \n              range: [0.3, 0.6, 0.8, 1.0]\n            }\n          ],\n          \n          marks: [\n            {\n              type: \"rect\",\n              from: { data: \"nodes\" },\n              interactive: false,\n              encode: {\n                enter: {\n                  fill: { scale: \"color\", field: \"name\" },\n                  fillOpacity: { scale: \"opacity\", field: \"depth\" }\n                },\n                update: {\n                  x: { field: \"x0\" },\n                  y: { field: \"y0\" },\n                  x2: { field: \"x1\" },\n                  y2: { field: \"y1\" },\n                  stroke: { value: \"#ffffff\" },\n                  strokeWidth: { value: 1 }\n                }\n              }\n            },\n            {\n              type: \"rect\",\n              from: { data: \"leaves\" },\n              encode: {\n                enter: {\n                  stroke: { value: \"#ffffff\" },\n                  strokeWidth: { value: 2 }\n                },\n                update: {\n                  x: { field: \"x0\" },\n                  y: { field: \"y0\" },\n                  x2: { field: \"x1\" },\n                  y2: { field: \"y1\" },\n                  fill: { value: \"transparent\" },\n                  tooltip: {\n                    signal: `{'Category': datum.name, 'Value': datum.size, 'Parent': datum.parent}`\n                  }\n                },\n                hover: {\n                  fill: { value: \"#323130\" },\n                  fillOpacity: { value: 0.1 }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              from: { data: \"leaves\" },\n              interactive: false,\n              encode: {\n                enter: {\n                  font: { value: \"Segoe UI, Arial, sans-serif\" },\n                  align: { value: \"center\" },\n                  baseline: { value: \"middle\" },\n                  fill: { value: \"#323130\" },\n                  fontWeight: { value: \"bold\" },\n                  text: { field: \"name\" },\n                  fontSize: { scale: \"fontSize\", field: \"depth\" }\n                },\n                update: {\n                  x: { signal: \"0.5 * (datum.x0 + datum.x1)\" },\n                  y: { signal: \"0.5 * (datum.y0 + datum.y1)\" },\n                  opacity: {\n                    signal: \"(datum.x1 - datum.x0) > 50 && (datum.y1 - datum.y0) > 20 ? 1 : 0\"\n                  }\n                }\n              }\n            }\n          ]\n        };\n      }\n      \n      else if (chartType === \"waffle\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n          description: \"Waffle chart from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          transform: [\n            {\n              joinaggregate: [{\"op\": \"sum\", \"field\": headers[1], \"as\": \"TotalValue\"}]\n            },\n            {\n              calculate: `round(datum.${headers[1]}/datum.TotalValue * 100)`,\n              as: \"PercentOfTotal\"\n            },\n            {\n              aggregate: [{\"op\": \"min\", \"field\": \"PercentOfTotal\", \"as\": \"Percent\"}],\n              groupby: [headers[0]]\n            },\n            {\"calculate\": \"sequence(1,101)\", \"as\": \"Sequence\"},\n            {\"flatten\": [\"Sequence\"]},\n            {\n              calculate: `if(datum.Sequence <= datum.Percent, datum.${headers[0]},'_blank')`,\n              as: \"Plot\"\n            },\n            {\"calculate\": \"ceil (datum.Sequence / 10)\", \"as\": \"row\"},\n            {\"calculate\": \"datum.Sequence - datum.row * 10\", \"as\": \"col\"}\n          ],\n          facet: {\"column\": {\"field\": headers[0], \"header\": {\"labelOrient\": \"bottom\"}}},\n          spec: {\n            layer: [\n              {\n                mark: {\n                  type: \"circle\",\n                  filled: true,\n                  tooltip: true,\n                  stroke: \"#9e9b9b\",\n                  strokeWidth: 0.7\n                },\n                encoding: {\n                  x: {\"field\": \"col\", \"type\": \"ordinal\", \"axis\": null},\n                  y: {\"field\": \"row\", \"type\": \"ordinal\", \"axis\": null, \"sort\": \"-y\"},\n                  color: {\n                    condition: {\"test\": \"datum.Plot == '_blank'\", \"value\": \"#e6e3e3\"},\n                    scale: {\"scheme\": \"set1\"},\n                    field: \"Plot\",\n                    type: \"nominal\",\n                    legend: null\n                  },\n                  size: {\"value\": 241},\n                  tooltip: [{\"field\": headers[0], \"type\": \"nominal\"}]\n                }\n              },\n              {\n                mark: {\"type\": \"text\", \"fontSize\": 30, \"fontWeight\": \"bold\"},\n                encoding: {\n                  y: {\"value\": 30},\n                  text: {\n                    condition: {\n                      test: \"datum.Sequence == 1\",\n                      value: {\"expr\": \"datum.Percent + '%'\"}\n                    }\n                  },\n                  color: {\"scale\": {\"scheme\": \"set1\"}, \"field\": \"Plot\"}\n                }\n              }\n            ]\n          },\n          config: {\n            view: {\"stroke\": \"transparent\"},\n            font: \"Segoe UI\",\n            text: {\"font\": \"Segoe UI\", \"fontSize\": 12, \"fill\": \"#605E5C\"},\n            axis: {\n              ticks: false,\n              grid: false,\n              domain: false,\n              labelColor: \"#605E5C\",\n              labelFontSize: 12\n            },\n            header: {\n              titleFont: \"Segoe UI\",\n              titleFontSize: 16,\n              titleColor: \"#757575\",\n              labelFont: \"Segoe UI\",\n              labelFontSize: 13,\n              labelColor: \"#605E5C\"\n            },\n            legend: {\n              titleFont: \"Segoe UI\",\n              titleFontWeight: \"bold\",\n              titleColor: \"#605E5C\",\n              labelFont: \"Segoe UI\",\n              labelFontSize: 13,\n              labelColor: \"#605E5C\",\n              symbolType: \"circle\",\n              symbolSize: 75\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"violin\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n          description: \"Violin chart from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          spacing: 0,\n          facet: {\n            column: {\n              field: headers[0],\n              header: {\n                orient: \"bottom\",\n                title: null,\n                labelFontSize: 14\n              }\n            }\n          },\n          spec: {\n            width: 180,\n            height: 400,\n            encoding: {\n              y: {\n                field: headers[1],\n                type: \"quantitative\",\n                title: headers[1],\n                axis: {\n                  tickCount: 10,\n                  titleFontSize: 16,\n                  labelFontSize: 12\n                }\n              },\n              x: {\n                type: \"quantitative\",\n                axis: {\n                  labels: false,\n                  title: null,\n                  grid: false,\n                  ticks: false\n                }\n              },\n              color: {\n                field: headers[0],\n                type: \"nominal\",\n                legend: null,\n                scale: {\n                  scheme: \"category10\"\n                }\n              }\n            },\n            layer: [\n              {\n                name: \"KDE_PLOT\",\n                transform: [\n                  {\n                    density: headers[1],\n                    groupby: [headers[0]],\n                    as: [\"_kde_value\", \"_kde_density\"]\n                  },\n                  {\n                    calculate: \"datum['_kde_density'] * -1\",\n                    as: \"_negative_kde_density\"\n                  }\n                ],\n                layer: [\n                  {\n                    name: \"KDE_POSITIVE\",\n                    mark: {\n                      type: \"area\",\n                      orient: \"vertical\",\n                      opacity: 0.6\n                    },\n                    encoding: {\n                      y: { field: \"_kde_value\" },\n                      x: { field: \"_kde_density\" }\n                    }\n                  },\n                  {\n                    name: \"KDE_NEGATIVE\",\n                    mark: {\n                      type: \"area\",\n                      orient: \"vertical\",\n                      opacity: 0.6\n                    },\n                    encoding: {\n                      y: { field: \"_kde_value\" },\n                      x: { field: \"_negative_kde_density\" }\n                    }\n                  }\n                ],\n                encoding: {\n                  x2: { datum: 0 }\n                }\n              },\n              {\n                name: \"BOX_PLOT\",\n                mark: {\n                  type: \"boxplot\",\n                  extent: \"min-max\",\n                  median: {\n                    color: \"black\",\n                    strokeWidth: 2\n                  },\n                  size: 20\n                },\n                encoding: {\n                  y: { field: headers[1] },\n                  fill: { value: \"#969696\" },\n                  stroke: { value: \"black\" }\n                }\n              }\n            ]\n          },\n          config: {\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            text: { font: \"Segoe UI\", fontSize: 12, fill: \"#605E5C\" },\n            axis: {\n              ticks: false,\n              grid: true,\n              gridColor: \"#e0e0e0\",\n              domain: false,\n              labelColor: \"#605E5C\",\n              labelFontSize: 12\n            },\n            header: {\n              titleFont: \"Segoe UI\",\n              titleFontSize: 16,\n              titleColor: \"#757575\",\n              labelFont: \"Segoe UI\",\n              labelFontSize: 13,\n              labelColor: \"#605E5C\"\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"heatmap\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n          description: \"Heatmap with marginal bars from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          spacing: 15,\n          bounds: \"flush\",\n          vconcat: [\n            {\n              height: 60,\n              mark: {\n                type: \"bar\",\n                stroke: null,\n                cornerRadiusEnd: 2,\n                tooltip: true,\n                color: \"lightgrey\"\n              },\n              encoding: {\n                x: {\n                  field: headers[1],\n                  type: \"ordinal\",\n                  axis: null\n                },\n                y: {\n                  field: headers[2],\n                  aggregate: \"mean\",\n                  type: \"quantitative\",\n                  axis: null\n                }\n              }\n            },\n            {\n              spacing: 15,\n              bounds: \"flush\",\n              hconcat: [\n                {\n                  mark: {\n                    type: \"rect\",\n                    stroke: \"white\",\n                    tooltip: true\n                  },\n                  encoding: {\n                    y: {\n                      field: headers[0],\n                      type: \"ordinal\",\n                      title: headers[0],\n                      axis: {\n                        domain: false,\n                        ticks: false,\n                        labels: true,\n                        labelAngle: 0,\n                        labelPadding: 5\n                      }\n                    },\n                    x: {\n                      field: headers[1],\n                      type: \"ordinal\",\n                      title: headers[1],\n                      axis: {\n                        domain: false,\n                        ticks: false,\n                        labels: true,\n                        labelAngle: 0\n                      }\n                    },\n                    color: {\n                      aggregate: \"mean\",\n                      field: headers[2],\n                      type: \"quantitative\",\n                      title: headers[2],\n                      scale: {\n                        scheme: \"blues\"\n                      },\n                      legend: {\n                        direction: \"vertical\",\n                        gradientLength: 120\n                      }\n                    }\n                  }\n                },\n                {\n                  mark: {\n                    type: \"bar\",\n                    stroke: null,\n                    cornerRadiusEnd: 2,\n                    tooltip: true,\n                    color: \"lightgrey\"\n                  },\n                  width: 60,\n                  encoding: {\n                    y: {\n                      field: headers[0],\n                      type: \"ordinal\",\n                      axis: null\n                    },\n                    x: {\n                      field: headers[2],\n                      type: \"quantitative\",\n                      aggregate: \"mean\",\n                      axis: null\n                    }\n                  }\n                }\n              ]\n            }\n          ],\n          config: {\n            autosize: {\n              type: \"fit\",\n              contains: \"padding\"\n            },\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            text: { font: \"Segoe UI\", fontSize: 12, fill: \"#605E5C\" },\n            axis: {\n              ticks: false,\n              grid: false,\n              domain: false,\n              labelColor: \"#605E5C\",\n              labelFontSize: 12,\n              titleFontSize: 14,\n              titleColor: \"#323130\"\n            },\n            legend: {\n              titleFont: \"Segoe UI\",\n              titleFontWeight: \"bold\",\n              titleColor: \"#605E5C\",\n              labelFont: \"Segoe UI\",\n              labelFontSize: 12,\n              labelColor: \"#605E5C\"\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"deviation\") {\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Deviation chart from Excel selection\",\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        data: { values: data },\n        layer: [\n        {\n            mark: { type: \"line\", tooltip: true, color: \"grey\" },\n            encoding: {\n            x: { field: headers[0], type: \"ordinal\" },\n            y: { field: headers[1], type: \"quantitative\" }\n            }\n        },\n        {\n            mark: { type: \"circle\", size: 80, color: \"grey\", tooltip: true },\n            encoding: {\n            x: { field: headers[0], type: \"ordinal\" },\n            y: { field: headers[1], type: \"quantitative\" }\n            }\n        },\n        {\n            mark: { type: \"rule\", strokeWidth: 2, tooltip: true },\n            encoding: {\n            x: { field: headers[0], type: \"ordinal\" },\n            y: { field: headers[1], type: \"quantitative\" },\n            y2: { field: headers[2] },\n            color: {\n                condition: { test: `datum[\"${headers[1]}\"] < datum[\"${headers[2]}\"]`, value: \"red\" },\n                value: \"green\"\n            }\n            }\n        },\n        {\n            mark: { type: \"circle\", size: 60, tooltip: true },\n            encoding: {\n            x: { field: headers[0], type: \"ordinal\" },\n            y: { field: headers[2], type: \"quantitative\" },\n            color: {\n                condition: { test: `datum[\"${headers[1]}\"] < datum[\"${headers[2]}\"]`, value: \"red\" },\n                value: \"green\"\n            }\n            }\n        }\n        ],\n        encoding: {\n        x: { \n            field: headers[0], \n            type: \"ordinal\", \n            axis: { \n                title: null,\n                labelAngle: 0       // Optional: adjust label angle if needed\n            } \n        },\n        y: { type: \"quantitative\", axis: { title: \"\" } }\n        },\n        config: {\n        view: { stroke: \"transparent\" },\n        line: { strokeWidth: 3, strokeCap: \"round\", strokeJoin: \"round\" },\n        axis: {\n            ticks: false,\n            grid: false,\n            domain: false,\n            labelColor: \"#605E5C\",\n            labelFontSize: 12\n        }\n        }\n      };\n      }\n\n      else if (chartType === \"radial\") {\n        spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Radial chart from Excel selection\",\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        data: { values: data },\n        layer: [{\n        mark: { type: \"arc\", innerRadius: 20, stroke: \"#fff\" }\n        }, {\n        mark: { type: \"text\", radiusOffset: 10 },\n        encoding: {\n            text: { field: headers[1], type: \"quantitative\" }\n        }\n        }],\n        encoding: {\n        theta: { field: headers[1], type: \"quantitative\", stack: true },\n        radius: { \n            field: headers[1], \n            scale: { type: \"sqrt\", zero: true, rangeMin: 20 }\n        },\n        color: { field: headers[0], type: \"nominal\", legend: null }\n        }\n      };\n      }\n\n      else if (chartType === \"bump\") {\n      // calculate width based on number of unique x-values\n      const uniqueX = [...new Set(data.map(d => d[headers[0]]))];\n      const dynamicWidth = Math.max(400, uniqueX.length * 80);\n\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Bump chart from Excel selection\",\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        data: { values: data },\n        width: dynamicWidth,\n        height: 200,   // give it some room\n        encoding: {\n          x: {\n            field: headers[0],\n            type: \"nominal\",\n            axis: { title: \"\" },\n            scale: { type: \"point\", padding: 1 }   // padding 1 for more spread\n          },\n          y: {\n            field: headers[2],      \n            type: \"ordinal\",\n            axis: false\n          }\n        },\n        layer: [\n          {\n            mark: { type: \"line\", interpolate: \"monotone\" },\n            encoding: {\n              color: {\n                field: headers[1],   \n                type: \"nominal\",\n                legend: false\n              }\n            }\n          },\n          {\n            mark: { type: \"circle\", size: 400, tooltip: true },\n            encoding: {\n              color: {\n                field: headers[1],\n                type: \"nominal\",\n                legend: false\n              }\n            }\n          },\n          {\n            mark: { type: \"text\", color: \"white\" },\n            encoding: {\n              text: { field: headers[2] }\n            }\n          },\n          {\n            // Left-side labels\n            transform: [\n              { window: [{ op: \"rank\", as: \"rank\" }], sort: [{ field: headers[0], order: \"descending\" }] },\n              { filter: \"datum.rank === 1\" }\n            ],\n            mark: {\n              type: \"text\",\n              align: \"left\",\n              baseline: \"middle\",\n              dx: 15,\n              fontWeight: \"bold\",\n              fontSize: 12\n            },\n            encoding: {\n              text: { field: headers[1], type: \"nominal\" },\n              color: { field: headers[1], type: \"nominal\", legend: false }\n            }\n          },\n          {\n            // Right-side labels\n            transform: [\n              { window: [{ op: \"rank\", as: \"rank\" }], sort: [{ field: headers[0], order: \"ascending\" }] },\n              { filter: \"datum.rank === 1\" }\n            ],\n            mark: {\n              type: \"text\",\n              align: \"right\",\n              baseline: \"middle\",\n              dx: -15,\n              fontWeight: \"bold\",\n              fontSize: 12\n            },\n            encoding: {\n              text: { field: headers[1], type: \"nominal\" },\n              color: { field: headers[1], type: \"nominal\", legend: false }\n            }\n          }\n        ],\n        config: {\n          view: { stroke: \"transparent\" },\n          line: { strokeWidth: 3, strokeCap: \"round\", strokeJoin: \"round\" },\n          axis: {\n            ticks: false,\n            grid: false,\n            domain: false,\n            labelColor: \"#666666\",\n            labelFontSize: 12\n          }\n        }\n      };\n      }\n\n      else if (chartType === \"sankey\") {\n      const data = rows\n        .filter(r => r[0] && r[1] && !isNaN(+r[2]))\n        .map(r => ({\n          key: { stk1: r[0], stk2: r[1] },\n          doc_count: +r[2]\n        }));\n\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega/v5.2.json\",\n        height: 300,\n        width: 600,\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        data: [\n          {\n            name: \"rawData\",\n            values: data,\n            transform: [\n              { type: \"formula\", expr: \"datum.key.stk1\", as: \"stk1\" },\n              { type: \"formula\", expr: \"datum.key.stk2\", as: \"stk2\" },\n              { type: \"formula\", expr: \"datum.doc_count\", as: \"size\" }\n            ]\n          },\n          {\n            name: \"nodes\",\n            source: \"rawData\",\n            transform: [\n              {\n                type: \"filter\",\n                expr:\n                  \"!groupSelector || groupSelector.stk1 == datum.stk1 || groupSelector.stk2 == datum.stk2\"\n              },\n              { type: \"formula\", expr: \"datum.stk1+datum.stk2\", as: \"key\" },\n              { type: \"fold\", fields: [\"stk1\", \"stk2\"], as: [\"stack\", \"grpId\"] },\n              {\n                type: \"formula\",\n                expr:\n                  \"datum.stack == 'stk1' ? datum.stk1+' '+datum.stk2 : datum.stk2+' '+datum.stk1\",\n                as: \"sortField\"\n              },\n              {\n                type: \"stack\",\n                groupby: [\"stack\"],\n                sort: { field: \"sortField\", order: \"descending\" },\n                field: \"size\"\n              },\n              { type: \"formula\", expr: \"(datum.y0+datum.y1)/2\", as: \"yc\" }\n            ]\n          },\n          {\n            name: \"groups\",\n            source: \"nodes\",\n            transform: [\n              {\n                type: \"aggregate\",\n                groupby: [\"stack\", \"grpId\"],\n                fields: [\"size\"],\n                ops: [\"sum\"],\n                as: [\"total\"]\n              },\n              {\n                type: \"stack\",\n                groupby: [\"stack\"],\n                sort: { field: \"grpId\", order: \"descending\" },\n                field: \"total\"\n              },\n              { type: \"formula\", expr: \"scale('y', datum.y0)\", as: \"scaledY0\" },\n              { type: \"formula\", expr: \"scale('y', datum.y1)\", as: \"scaledY1\" },\n              { type: \"formula\", expr: \"datum.stack == 'stk1'\", as: \"rightLabel\" },\n              { type: \"formula\", expr: \"datum.total/domain('y')[1]\", as: \"percentage\" }\n            ]\n          },\n          {\n            name: \"destinationNodes\",\n            source: \"nodes\",\n            transform: [{ type: \"filter\", expr: \"datum.stack == 'stk2'\" }]\n          },\n          {\n            name: \"edges\",\n            source: \"nodes\",\n            transform: [\n              { type: \"filter\", expr: \"datum.stack == 'stk1'\" },\n              {\n                type: \"lookup\",\n                from: \"destinationNodes\",\n                key: \"key\",\n                fields: [\"key\"],\n                as: [\"target\"]\n              },\n              {\n                type: \"linkpath\",\n                orient: \"horizontal\",\n                shape: \"diagonal\",\n                sourceY: { expr: \"scale('y', datum.yc)\" },\n                sourceX: { expr: \"scale('x', 'stk1') + bandwidth('x')\" },\n                targetY: { expr: \"scale('y', datum.target.yc)\" },\n                targetX: { expr: \"scale('x', 'stk2')\" }\n              },\n              { type: \"formula\", expr: \"range('y')[0]-scale('y', datum.size)\", as: \"strokeWidth\" },\n              { type: \"formula\", expr: \"datum.size/domain('y')[1]\", as: \"percentage\" }\n            ]\n          }\n        ],\n        scales: [\n          {\n            name: \"x\",\n            type: \"band\",\n            range: \"width\",\n            domain: [\"stk1\", \"stk2\"],\n            paddingOuter: 0.05,\n            paddingInner: 0.95\n          },\n          {\n            name: \"y\",\n            type: \"linear\",\n            range: \"height\",\n            domain: { data: \"nodes\", field: \"y1\" }\n          },\n          {\n            name: \"color\",\n            type: \"ordinal\",\n            range: \"category\",\n            domain: {\n              fields: [\n                { data: \"rawData\", field: \"stk1\" },\n                { data: \"rawData\", field: \"stk2\" }\n              ]\n            }\n          },\n          {\n            name: \"stackNames\",\n            type: \"ordinal\",\n            range: [\"Source\", \"Destination\"],\n            domain: [\"stk1\", \"stk2\"]\n          }\n        ],\n        axes: [\n          {\n            orient: \"bottom\",\n            scale: \"x\",\n            encode: {\n              labels: { update: { text: { scale: \"stackNames\", field: \"value\" } } }\n            }\n          },\n          { orient: \"left\", scale: \"y\" }\n        ],\n        marks: [\n          {\n            type: \"path\",\n            name: \"edgeMark\",\n            from: { data: \"edges\" },\n            clip: true,\n            encode: {\n              update: {\n                stroke: { scale: \"color\", field: \"stk1\" }, // links colored by source\n                strokeWidth: { field: \"strokeWidth\" },\n                path: { field: \"path\" },\n                strokeOpacity: {\n                  signal:\n                    \"!groupSelector && (groupHover.stk1 == datum.stk1 || groupHover.stk2 == datum.stk2) ? 0.9 : 0.3\"\n                },\n                zindex: {\n                  signal:\n                    \"!groupSelector && (groupHover.stk1 == datum.stk1 || groupHover.stk2 == datum.stk2) ? 1 : 0\"\n                },\n                tooltip: {\n                  signal:\n                    \"datum.stk1 + ' → ' + datum.stk2 + '    ' + format(datum.size, ',.0f') + '   (' + format(datum.percentage, '.1%') + ')'\"\n                }\n              },\n              hover: { strokeOpacity: { value: 1 } }\n            }\n          },\n          {\n            type: \"rect\",\n            name: \"groupMark\",\n            from: { data: \"groups\" },\n            encode: {\n              enter: {\n                fill: { scale: \"color\", field: \"grpId\" }, // both source & destination use union colors\n                width: { scale: \"x\", band: 1 }\n              },\n              update: {\n                x: { scale: \"x\", field: \"stack\" },\n                y: { field: \"scaledY0\" },\n                y2: { field: \"scaledY1\" },\n                fillOpacity: { value: 0.6 },\n                tooltip: {\n                  signal:\n                    \"datum.grpId + '   ' + format(datum.total, ',.0f') + '   (' + format(datum.percentage, '.1%') + ')'\"\n                }\n              },\n              hover: { fillOpacity: { value: 1 } }\n            }\n          },\n          {\n            type: \"text\",\n            from: { data: \"groups\" },\n            interactive: false,\n            encode: {\n              update: {\n                x: {\n                  signal:\n                    \"scale('x', datum.stack) + (datum.rightLabel ? bandwidth('x') + 8 : -8)\"\n                },\n                yc: { signal: \"(datum.scaledY0 + datum.scaledY1)/2\" },\n                align: { signal: \"datum.rightLabel ? 'left' : 'right'\" },\n                baseline: { value: \"middle\" },\n                fontWeight: { value: \"bold\" },\n                text: {\n                  signal: \"abs(datum.scaledY0-datum.scaledY1) > 13 ? datum.grpId : ''\"\n                }\n              }\n            }\n          }\n        ],\n        signals: [\n          {\n            name: \"groupHover\",\n            value: {},\n            on: [\n              {\n                events: \"@groupMark:mouseover\",\n                update:\n                  \"{stk1:datum.stack=='stk1' && datum.grpId, stk2:datum.stack=='stk2' && datum.grpId}\"\n              },\n              { events: \"mouseout\", update: \"{}\" }\n            ]\n          },\n          {\n            name: \"groupSelector\",\n            value: false,\n            on: [\n              {\n                events: \"@groupMark:click!\",\n                update:\n                  \"{stack:datum.stack, stk1:datum.stack=='stk1' && datum.grpId, stk2:datum.stack=='stk2' && datum.grpId}\"\n              },\n              {\n                events: [\n                  { type: \"click\", markname: \"groupReset\" },\n                  { type: \"dblclick\" }\n                ],\n                update: \"false\"\n              }\n            ]\n          }\n        ]\n      };\n      }\n\n      else if (chartType === \"ribbon\") {\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Ribbon chart from Excel selection\",\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        data: { values: data },\n        layer: [\n        {\n            mark: { type: \"area\", interpolate: \"monotone\", tooltip: true },\n            encoding: {\n            x: {\n                field: headers[0],\n                type: \"ordinal\" // temporal change to \"ordinal\" if your first col is not a date\n            },\n            y: {\n                aggregate: \"sum\",\n                field: headers[2],\n                type: \"quantitative\",\n                axis: null,\n                stack: \"center\"\n            },\n            color: {\n                field: headers[1],\n                type: \"nominal\"\n            },\n            order: {\n                aggregate: \"sum\",\n                field: headers[2],\n                type: \"quantitative\"\n            }\n            }\n        }\n        ],\n        config: {\n        view: { stroke: \"transparent\" },\n        axis: {\n            ticks: false,\n            grid: true,\n            gridColor: \"white\",\n            gridWidth: 3,\n            domain: false,\n            labelColor: \"#666666\"\n        },\n        legend: {\n            titleFont: \"Segoe UI\",\n            titleFontWeight: \"bold\",\n            titleColor: \"#666666\",\n            labelFont: \"Segoe UI\",\n            labelColor: \"#666666\",\n            symbolType: \"circle\",\n            symbolSize: 75\n        }\n        }\n      };\n      }\n\n      else if (chartType === \"ridgeline\") {\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Ridgeline (Joyplot) chart from Excel selection\",\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        data: { values: data },\n        mark: {\n        type: \"area\",\n        fillOpacity: 0.7,\n        strokeOpacity: 1,\n        strokeWidth: 1,\n        interpolate: \"monotone\"\n        },\n        width: 400,\n        height: 20,\n        encoding: {\n        x: {\n            field: headers[0],       // date/time column\n            type: \"ordinal\",\n            title: headers[0]\n        },\n        y: {\n            aggregate: \"sum\",\n            field: headers[2],       // value column\n            type: \"quantitative\",\n            scale: { range: [20, -40] },\n            axis: {\n            title: null,\n            values: [0],\n            domain: false,\n            labels: false,\n            ticks: false\n            }\n        },\n        row: {\n            field: headers[1],       // category column\n            type: \"nominal\",\n            title: headers[1],\n            header: {\n            title: null,\n            labelAngle: 0,\n            labelOrient: \"left\",\n            labelAlign: \"left\",\n            labelPadding: 0\n            },\n            sort: { field: headers[0], op: \"max\", order: \"ascending\" }\n        },\n        fill: {\n            field: headers[1],\n            type: \"nominal\",\n            legend: null,\n            scale: { scheme: \"plasma\" }\n        }\n        },\n        resolve: { scale: { y: \"independent\" } },\n        config: {\n        view: { stroke: \"transparent\" },\n        facet: { spacing: 20 },\n        header: {\n            labelFontSize: 12,\n            labelFontWeight: 500,\n            labelAngle: 0,\n            labelAnchor: \"end\",\n            labelOrient: \"top\",\n            labelPadding: -19\n        },\n        axis: {\n            domain: false,\n            grid: false,\n            ticks: false,\n            tickCount: 5,\n            labelFontSize: 12,\n            titleFontSize: 12,\n            titleFontWeight: 400,\n            titleColor: \"#605E5C\"\n        }\n        }\n      };\n      }\n\n      else if (chartType === \"wordcloud\") {\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega/v5.json\",\n        description: \"Word cloud from Excel selection\",\n        width: 800,\n        height: 400,\n        padding: 0,\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        data: [\n        {\n            name: \"table\",\n            values: data,\n            transform: [\n            {\n                type: \"countpattern\",\n                field: headers[0], // Use first column as text source\n                case: \"upper\",\n                pattern: \"[\\\\w']{3,}\",\n                stopwords: \"(i|me|my|myself|we|us|our|ours|ourselves|you|your|yours|yourself|yourselves|he|him|his|himself|she|her|hers|herself|it|its|itself|they|them|their|theirs|themselves|what|which|who|whom|whose|this|that|these|those|am|is|are|was|were|be|been|being|have|has|had|having|do|does|did|doing|will|would|should|can|could|ought|i'm|you're|he's|she's|it's|we're|they're|i've|you've|we've|they've|i'd|you'd|he'd|she'd|we'd|they'd|i'll|you'll|he'll|she'll|we'll|they'll|isn't|aren't|wasn't|weren't|hasn't|haven't|hadn't|doesn't|don't|didn't|won't|wouldn't|shan't|shouldn't|can't|cannot|couldn't|mustn't|let's|that's|who's|what's|here's|there's|when's|where's|why's|how's|a|an|the|and|but|if|or|because|as|until|while|of|at|by|for|with|about|against|between|into|through|during|before|after|above|below|to|from|up|upon|down|in|out|on|off|over|under|again|further|then|once|here|there|when|where|why|how|all|any|both|each|few|more|most|other|some|such|no|nor|not|only|own|same|so|than|too|very|say|says|said|shall)\"\n            },\n            {\n                type: \"formula\", \n                as: \"angle\",\n                expr: \"[-45, 0, 45][~~(random() * 3)]\"\n            },\n            {\n                type: \"formula\", \n                as: \"weight\",\n                expr: \"if(datum.count > 10, 600, 300)\"\n            }\n            ]\n        }\n        ],\n        \n        scales: [\n        {\n            name: \"color\",\n            type: \"ordinal\",\n            domain: { data: \"table\", field: \"text\" },\n            range: [\"#d5a928\", \"#652c90\", \"#939597\", \"#2563eb\", \"#dc2626\", \"#059669\"]\n        }\n        ],\n        \n        marks: [\n        {\n            type: \"text\",\n            from: { data: \"table\" },\n            encode: {\n            enter: {\n                text: { field: \"text\" },\n                align: { value: \"center\" },\n                baseline: { value: \"alphabetic\" },\n                fill: { scale: \"color\", field: \"text\" }\n            },\n            update: {\n                fillOpacity: { value: 1 }\n            },\n            hover: {\n                fillOpacity: { value: 0.5 }\n            }\n            },\n            transform: [\n            {\n                type: \"wordcloud\",\n                size: [800, 400],\n                text: { field: \"text\" },\n                rotate: { field: \"datum.angle\" },\n                font: \"Helvetica Neue, Arial\",\n                fontSize: { field: \"datum.count\" },\n                fontWeight: { field: \"datum.weight\" },\n                fontSizeRange: [12, 56],\n                padding: 2\n            }\n            ]\n        }\n        ]\n      };\n      }\n\n      else if (chartType === \"area\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n          description: \"Area chart from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          mark: { \n            type: \"area\", \n            tooltip: true,\n            opacity: 0.7\n          },\n          encoding: {\n            x: { \n              field: headers[0], \n              type: \"ordinal\",\n              axis: {\n                title: headers[0],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            y: { \n              field: headers[1], \n              type: \"quantitative\",\n              axis: {\n                title: headers[1],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            // Add color encoding for multiple areas if 3rd column exists\n            ...(headers.length >= 3 && {\n              color: { \n                field: headers[2], \n                type: \"nominal\",\n                legend: {\n                  title: headers[2],\n                  titleFontSize: 12,\n                  labelFontSize: 11\n                }\n              }\n            })\n          },\n          config: {\n            font: \"Segoe UI\",\n            axis: {\n              labelColor: \"#605e5c\",\n              titleColor: \"#323130\",\n              gridColor: \"#f3f2f1\"\n            },\n            legend: {\n              titleColor: \"#323130\",\n              labelColor: \"#605e5c\"\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"bar\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n          description: \"Bar chart from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          mark: { \n            type: \"bar\", \n            tooltip: true\n          },\n          encoding: {\n            x: { \n              field: headers[0], \n              type: \"nominal\",\n              axis: {\n                title: headers[0],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            y: { \n              field: headers[1], \n              type: \"quantitative\",\n              axis: {\n                title: headers[1],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            // Add color encoding for grouped bars if 3rd column exists\n            ...(headers.length >= 3 && {\n              color: { \n                field: headers[2], \n                type: \"nominal\",\n                legend: {\n                  title: headers[2],\n                  titleFontSize: 12,\n                  labelFontSize: 11\n                }\n              }\n            })\n          },\n          config: {\n            font: \"Segoe UI\",\n            axis: {\n              labelColor: \"#605e5c\",\n              titleColor: \"#323130\",\n              gridColor: \"#f3f2f1\"\n            },\n            legend: {\n              titleColor: \"#323130\",\n              labelColor: \"#605e5c\"\n            }\n          }\n        };\n      }\n\n      // Render hidden chart\n      const hiddenDiv = document.createElement(\"div\");\n      hiddenDiv.style.display = \"none\";\n      document.body.appendChild(hiddenDiv);\n\n      const result = await vegaEmbed(hiddenDiv, spec, { actions: false });\n      const view = result.view;\n\n      // Export chart -> PNG\n      const pngUrl = await view.toImageURL(\"png\");\n      const response = await fetch(pngUrl);\n      const blob = await response.blob();\n\n      const reader = new FileReader();\n      reader.onloadend = async () => {\n      const base64data = reader.result.split(\",\")[1];\n\n      // Insert picture above selection\n      const image = sheet.shapes.addImage(base64data);\n      image.left = range.left;\n      image.top = range.top;\n      image.lockAspectRatio = true; // keep proportions\n\n      await context.sync();\n      };\n\n      reader.readAsDataURL(blob);\n      \n      // Clean up hidden div\n      document.body.removeChild(hiddenDiv);\n    });\n  } catch (error) {\n    console.error(error);\n  }\n}","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.js\", import.meta.url);\n// Module\nvar code = \"<!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Vega Chart</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/vega@6\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/vega-lite@6\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/vega-embed@6\\\"><\" + \"/script> <\" + \"script type=\\\"module\\\" src=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\"><\" + \"/script> <style>body{font-family:-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif;margin:20px;line-height:1.4}.chart-selector{margin-bottom:15px}label{display:block;margin-bottom:5px;font-weight:600;color:#323130}.custom-dropdown{position:relative;width:100%}.dropdown-header{width:100%;padding:8px 12px;border:1px solid #8a8886;border-radius:4px;font-size:14px;background:#fff;cursor:pointer;display:flex;justify-content:space-between;align-items:center;box-sizing:border-box}.dropdown-header:hover{border-color:#0078d4}.dropdown-arrow{font-size:12px;transition:transform .2s}.dropdown-arrow.expanded{transform:rotate(180deg)}.dropdown-list{position:absolute;top:100%;left:0;right:0;background:#fff;border:1px solid #8a8886;border-top:none;border-radius:0 0 4px 4px;max-height:300px;overflow-y:auto;z-index:1000;display:none;box-shadow:0 2px 8px rgba(0,0,0,.1)}.dropdown-list.open{display:block}.folder-item{padding:8px 12px;cursor:pointer;font-weight:600;color:#0078d4;background:#f8f9fa;border-bottom:1px solid #e1e4e8;display:flex;justify-content:space-between;align-items:center}.folder-item:hover{background:#e3f2fd}.folder-arrow{font-size:10px;transition:transform .2s}.folder-arrow.expanded{transform:rotate(90deg)}.chart-item{padding:8px 12px 8px 32px;cursor:pointer;color:#323130;border-bottom:1px solid #f0f0f0;display:none}.chart-item.visible{display:block}.chart-item:hover{background:#f5f5f5}.chart-item:last-child{border-bottom:none}button{background-color:#0078d4;color:#fff;border:none;padding:10px 20px;border-radius:4px;font-size:14px;cursor:pointer;width:100%;margin-bottom:15px}button:hover{background-color:#106ebe}.data-requirements{background-color:#f8f9fa;border:1px solid #e1e4e8;border-radius:6px;padding:12px;margin-top:10px;font-size:13px}.data-requirements h4{margin:0 0 8px 0;color:#24292f;font-size:14px}.data-requirements ul{margin:0;padding-left:18px}.data-requirements li{margin-bottom:4px}.hidden{display:none}</style> </head> <body> <h2>Chart Generator</h2> <div class=\\\"chart-selector\\\"> <label for=\\\"chartDropdown\\\">Select Chart Type:</label> <div class=\\\"custom-dropdown\\\" id=\\\"chartDropdown\\\"> <div class=\\\"dropdown-header\\\" id=\\\"dropdownHeader\\\"> <span id=\\\"selectedText\\\">Choose a chart...</span> <span class=\\\"dropdown-arrow\\\">▼</span> </div> <div class=\\\"dropdown-list\\\" id=\\\"dropdownList\\\"> <div class=\\\"folder-item\\\" data-folder=\\\"basic\\\"> <span>Basic</span> <span class=\\\"folder-arrow\\\">►</span> </div> <div class=\\\"chart-item\\\" data-chart=\\\"bar\\\" data-folder=\\\"basic\\\">Bar</div> <div class=\\\"chart-item\\\" data-chart=\\\"line\\\" data-folder=\\\"basic\\\">Line</div> <div class=\\\"chart-item\\\" data-chart=\\\"area\\\" data-folder=\\\"basic\\\">Area</div> <div class=\\\"chart-item\\\" data-chart=\\\"point\\\" data-folder=\\\"basic\\\">Scatter</div> <div class=\\\"chart-item\\\" data-chart=\\\"pie\\\" data-folder=\\\"basic\\\">Pie</div> <div class=\\\"chart-item\\\" data-chart=\\\"box\\\" data-folder=\\\"basic\\\">Box</div> <div class=\\\"chart-item\\\" data-chart=\\\"histogram\\\" data-folder=\\\"basic\\\">Histogram</div> <div class=\\\"chart-item\\\" data-chart=\\\"treemap\\\" data-folder=\\\"basic\\\">Treemap</div> <div class=\\\"chart-item\\\" data-chart=\\\"waterfall\\\" data-folder=\\\"basic\\\">Waterfall</div> <div class=\\\"folder-item\\\" data-folder=\\\"special\\\"> <span>Special</span> <span class=\\\"folder-arrow\\\">►</span> </div> <div class=\\\"chart-item\\\" data-chart=\\\"radial\\\" data-folder=\\\"special\\\">Radial</div> <div class=\\\"chart-item\\\" data-chart=\\\"arc\\\" data-folder=\\\"special\\\">Arc</div> <div class=\\\"chart-item\\\" data-chart=\\\"wordcloud\\\" data-folder=\\\"special\\\">Wordcloud</div> <div class=\\\"chart-item\\\" data-chart=\\\"strip\\\" data-folder=\\\"special\\\">Strip</div> <div class=\\\"chart-item\\\" data-chart=\\\"heatmap\\\" data-folder=\\\"special\\\">Heatmap</div> <div class=\\\"chart-item\\\" data-chart=\\\"bullet\\\" data-folder=\\\"special\\\">Bullet</div> <div class=\\\"chart-item\\\" data-chart=\\\"mekko\\\" data-folder=\\\"special\\\">Mekko</div> <div class=\\\"chart-item\\\" data-chart=\\\"marimekko\\\" data-folder=\\\"special\\\">Marimekko</div> <div class=\\\"chart-item\\\" data-chart=\\\"bump\\\" data-folder=\\\"special\\\">Bump</div> <div class=\\\"chart-item\\\" data-chart=\\\"waffle\\\" data-folder=\\\"special\\\">Waffle</div> <div class=\\\"chart-item\\\" data-chart=\\\"lollipop\\\" data-folder=\\\"special\\\">Lollipop</div> <div class=\\\"chart-item\\\" data-chart=\\\"violin\\\" data-folder=\\\"special\\\">Violin</div> <div class=\\\"chart-item\\\" data-chart=\\\"sankey\\\" data-folder=\\\"special\\\">Sankey</div> <div class=\\\"chart-item\\\" data-chart=\\\"ribbon\\\" data-folder=\\\"special\\\">Ribbon</div> <div class=\\\"chart-item\\\" data-chart=\\\"ridgeline\\\" data-folder=\\\"special\\\">Ridgeline</div> <div class=\\\"chart-item\\\" data-chart=\\\"deviation\\\" data-folder=\\\"special\\\">Deviation</div> </div> </div> </div> <button id=\\\"drawChart\\\">Generate Chart</button> <select id=\\\"chartType\\\" style=\\\"display:none\\\"> <option value=\\\"\\\">Choose a chart...</option> <option value=\\\"bar\\\">Bar</option> <option value=\\\"line\\\">Line</option> <option value=\\\"area\\\">Area</option> <option value=\\\"point\\\">Scatter</option> <option value=\\\"pie\\\">Pie</option> <option value=\\\"box\\\">Box</option> <option value=\\\"histogram\\\">Histogram</option> <option value=\\\"heatmap\\\">Heatmap</option> <option value=\\\"radial\\\">Radial</option> <option value=\\\"arc\\\">Arc</option> <option value=\\\"wordcloud\\\">Wordcloud</option> <option value=\\\"strip\\\">Strip</option> <option value=\\\"treemap\\\">Treemap</option> <option value=\\\"bullet\\\">Bullet</option> <option value=\\\"mekko\\\">Mekko</option> <option value=\\\"marimekko\\\">Marimekko</option> <option value=\\\"bump\\\">Bump</option> <option value=\\\"waffle\\\">Waffle</option> <option value=\\\"lollipop\\\">Lollipop</option> <option value=\\\"violin\\\">Violin</option> <option value=\\\"sankey\\\">Sankey</option> <option value=\\\"ribbon\\\">Ribbon</option> <option value=\\\"ridgeline\\\">Ridgeline</option> <option value=\\\"deviation\\\">Deviation</option> <option value=\\\"waterfall\\\">Waterfall</option> </select> <div id=\\\"req-point\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> X-axis values (numbers)</li> <li><strong>Column 2:</strong> Y-axis values (numbers)</li> <li><strong>Column 3 (optional):</strong> Color grouping (categories for different colors)</li> <li><strong>Column 4 (optional):</strong> Shape grouping (categories for different shapes)</li> </ul> </div> <div id=\\\"req-bar\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Categories or X-axis values</li> <li><strong>Column 2:</strong> Values (numbers)</li> <li><strong>Column 3 (optional):</strong> Grouping variable for grouped bars</li> </ul> </div> <div id=\\\"req-line\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> X-axis values (often dates/time or categories)</li> <li><strong>Column 2:</strong> Y-axis values (numbers)</li> <li><strong>Column 3 (optional):</strong> Series grouping for multiple lines</li> </ul> </div> <div id=\\\"req-area\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> X-axis values (often dates/time)</li> <li><strong>Column 2:</strong> Y-axis values (numbers)</li> <li><strong>Column 3 (optional):</strong> Series grouping for multiple areas</li> </ul> </div> <div id=\\\"req-box\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Categories/Groups (e.g., \\\"Species\\\", \\\"Department\\\", \\\"Region\\\")</li> <li><strong>Column 2:</strong> Values for distribution analysis (numbers)</li> </ul> </div> <div id=\\\"req-pie\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Values (numbers for slice sizes)</li> </ul> </div> <div id=\\\"req-histogram\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Continuous numeric values to create distribution bins</li> <li><strong>Column 2 (optional):</strong> Grouping variable for colored/separate histograms</li> </ul> </div> <div id=\\\"req-radial\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category names</li> <li><strong>Column 2:</strong> Values (determines both angle and radius)</li> </ul> </div> <div id=\\\"req-arc\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Source node/entity (e.g., \\\"Person A\\\", \\\"Department 1\\\")</li> <li><strong>Column 2:</strong> Target node/entity (e.g., \\\"Person B\\\", \\\"Department 2\\\")</li> <li><strong>Column 3:</strong> Connection strength/weight (numbers, optional)</li> <li><strong>Column 4:</strong> Group/Category (optional, for coloring nodes)</li> </ul> </div> <div id=\\\"req-strip\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column A:</strong> Quantitative values (e.g., Horsepower, Sales, Temperature)</li> <li><strong>Column B:</strong> Categories/Groups (e.g., Cylinders, Department, Grade)</li> <li><strong>Column C (optional):</strong> Color grouping (e.g., Brand, Region, Type)</li> </ul> </div> <div id=\\\"req-treemap\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column A:</strong> Parent/Group hierarchy (e.g., Region, Division)</li> <li><strong>Column B:</strong> Category/Item names (e.g., Product, Department, File)</li> <li><strong>Column C:</strong> Values/Sizes (e.g., Sales, Budget, File Size)</li> </ul> </div> <div id=\\\"req-wordcloud\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Text data (sentences, phrases, or words)</li> </ul> </div> <div id=\\\"req-lollipop\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category names (e.g., \\\"Products\\\", \\\"Regions\\\", \\\"Teams\\\")</li> <li><strong>Column 2:</strong> Values (numbers for stick length and circle size)</li> </ul> </div> <div id=\\\"req-waffle\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category names (e.g., \\\"Product A\\\", \\\"Product B\\\")</li> <li><strong>Column 2:</strong> Values (numbers that will be converted to percentages)</li> </ul> </div> <div id=\\\"req-bullet\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Title/Metric name (e.g., \\\"Revenue\\\", \\\"Profit\\\")</li> <li><strong>Column 2:</strong> Poor range max</li> <li><strong>Column 3:</strong> Satisfactory range max</li> <li><strong>Column 4:</strong> Good range max</li> <li><strong>Column 5:</strong> Actual value</li> <li><strong>Column 6:</strong> Forecast value (optional)</li> <li><strong>Column 7:</strong> Target value (marker)</li> </ul> </div> <div id=\\\"req-mekko\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category (text)</li> <li><strong>Column 2:</strong> Subcategory (text)</li> <li><strong>Column 3:</strong> Value (number)</li> </ul> </div> <div id=\\\"req-marimekko\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category (text)</li> <li><strong>Column 2:</strong> Subcategory (text)</li> <li><strong>Column 3:</strong> Value (number)</li> </ul> </div> <div id=\\\"req-heatmap\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Y-axis categories (e.g., \\\"Months\\\", \\\"Products\\\", \\\"Regions\\\")</li> <li><strong>Column 2:</strong> X-axis categories (e.g., \\\"Days\\\", \\\"Quarters\\\", \\\"Sales Reps\\\")</li> <li><strong>Column 3:</strong> Values (numbers for color intensity)</li> </ul> </div> <div id=\\\"req-bump\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Time periods</li> <li><strong>Column 2:</strong> Categories (e.g., \\\"Team A\\\", \\\"Team B\\\")</li> <li><strong>Column 3:</strong> Rank values (1, 2, 3, etc.)</li> </ul> </div> <div id=\\\"req-violin\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Categories/Groups (e.g., \\\"Country A\\\", \\\"Product Line\\\", \\\"Department\\\")</li> <li><strong>Column 2:</strong> Continuous values (numbers for distribution analysis)</li> </ul> </div> <div id=\\\"req-sankey\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Source Category</li> <li><strong>Column 2:</strong> Destination Category</li> <li><strong>Column 3:</strong> Values (numbers)</li> </ul> </div> <div id=\\\"req-ribbon\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Time periods (dates/periods)</li> <li><strong>Column 2:</strong> Categories (different series)</li> <li><strong>Column 3:</strong> Values (numbers)</li> </ul> </div> <div id=\\\"req-ridgeline\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Time periods/X-axis values</li> <li><strong>Column 2:</strong> Categories (creates separate ridges)</li> <li><strong>Column 3:</strong> Values (creates distribution shape)</li> </ul> </div> <div id=\\\"req-deviation\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Date/Period</li> <li><strong>Column 2:</strong> Actual values</li> <li><strong>Column 3:</strong> Target/Baseline values</li> </ul> </div> <div id=\\\"req-waterfall\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Categories/Labels (e.g., \\\"Begin\\\", \\\"Q1\\\", \\\"Q2\\\", \\\"End\\\")</li> <li><strong>Column 2:</strong> Amount values (positive/negative numbers)</li> </ul> </div> <div id=\\\"chart\\\"></div> <\" + \"script>document.addEventListener(\\\"DOMContentLoaded\\\",function(){const e=document.getElementById(\\\"dropdownHeader\\\"),t=document.getElementById(\\\"dropdownList\\\"),o=e.querySelector(\\\".dropdown-arrow\\\"),d=document.getElementById(\\\"selectedText\\\"),c=document.querySelectorAll(\\\".data-requirements\\\"),n=document.getElementById(\\\"chartType\\\");let s=!1;c.forEach(e=>e.classList.add(\\\"hidden\\\")),e.addEventListener(\\\"click\\\",function(){s=!s,t.classList.toggle(\\\"open\\\",s),o.classList.toggle(\\\"expanded\\\",s)}),document.addEventListener(\\\"click\\\",function(e){e.target.closest(\\\".custom-dropdown\\\")||(s=!1,t.classList.remove(\\\"open\\\"),o.classList.remove(\\\"expanded\\\"))}),document.querySelectorAll(\\\".folder-item\\\").forEach(e=>{e.addEventListener(\\\"click\\\",function(e){e.stopPropagation();const t=this.dataset.folder,o=this.querySelector(\\\".folder-arrow\\\"),d=document.querySelectorAll(`[data-folder=\\\"${t}\\\"].chart-item`),c=o.classList.contains(\\\"expanded\\\");o.classList.toggle(\\\"expanded\\\",!c),d.forEach(e=>{e.classList.toggle(\\\"visible\\\",!c)})})}),document.querySelectorAll(\\\".chart-item\\\").forEach(e=>{e.addEventListener(\\\"click\\\",function(){const e=this.dataset.chart,r=this.textContent;d.textContent=r,n.value=e,s=!1,t.classList.remove(\\\"open\\\"),o.classList.remove(\\\"expanded\\\"),document.querySelectorAll(\\\".folder-arrow\\\").forEach(e=>{e.classList.remove(\\\"expanded\\\")}),document.querySelectorAll(\\\".chart-item\\\").forEach(e=>{e.classList.remove(\\\"visible\\\")}),c.forEach(e=>e.classList.add(\\\"hidden\\\"));const l=document.getElementById(`req-${e}`);l&&l.classList.remove(\\\"hidden\\\")})})})<\" + \"/script> </body> </html>\";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","t","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","bind","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","_invoke","configurable","writable","_toConsumableArray","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","toString","slice","constructor","name","_unsupportedIterableToArray","_nonIterableSpread","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_typeof","toPrimitive","String","_toPrimitive","_toPropertyKey","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","_next","_throw","run","_run","_callee3","_t","_context3","Excel","_ref","_callee2","context","sheet","range","values","headers","rows","data","chartType","spec","processedData","numDataPoints","dynamicWidth","maxAmount","dynamicHeight","_data","_data2","_data3","edges","nodeMap","nodes","edgesWithIndices","treeData","uniqueX","_dynamicWidth","_data4","hiddenDiv","result","view","pngUrl","response","blob","reader","_context2","workbook","worksheets","getActiveWorksheet","getSelectedRange","load","sync","console","warn","map","row","h","getElementById","$schema","description","background","config","stroke","mark","type","size","tooltip","encoding","x","field","scale","zero","axis","title","labelFontSize","titleFontSize","color","legend","shape","font","labelColor","titleColor","gridColor","point","strokeWidth","labelAngle","filled","Math","max","min","abs","width","height","transform","concat","sort","layer","y2","condition","opacity","xOffset","x2Offset","x2","dy","baseline","text","ranges","measures","markers","isNaN","category","outerRadius","theta","padding","top","bottom","left","right","source","fields","ops","as","groupby","offset","order","expr","scales","domain","nice","scheme","op","axes","orient","zindex","format","tickCount","tickSize","labelFontWeight","labelFont","encode","labels","update","signal","marks","fill","fillOpacity","interactive","align","lineHeight","fontSize","fontWeight","index","target","group","Map","edge","has","set","default","count","enter","mult","strokeOpacity","sourceX","targetX","sourceY","targetY","angle","ticks","labelPadding","grid","titleFont","autosize","contains","thickness","gridOpacity","id","parent","parseFloat","Set","find","parentKey","round","method","ratio","hover","joinaggregate","calculate","aggregate","facet","header","titleFontWeight","symbolType","symbolSize","spacing","column","density","datum","extent","median","bounds","vconcat","cornerRadiusEnd","hconcat","direction","gradientLength","line","strokeCap","strokeJoin","innerRadius","radiusOffset","stack","radius","rangeMin","interpolate","dx","stk1","stk2","doc_count","paddingOuter","paddingInner","clip","path","band","yc","signals","on","events","markname","gridWidth","labelOrient","labelAlign","labelAnchor","case","pattern","stopwords","rotate","fontSizeRange","createElement","style","display","body","appendChild","vegaEmbed","actions","toImageURL","fetch","FileReader","onloadend","_callee","base64data","image","_context","split","shapes","addImage","lockAspectRatio","readAsDataURL","removeChild","_x","error","Office","onReady","onclick","URL"],"sourceRoot":""}