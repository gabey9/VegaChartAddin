{"version":3,"file":"taskpane.js","mappings":";gGACIA,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CAGAJ,EAAoBO,EAAID,ECxBxBN,EAAoBQ,EAAI,SAASJ,EAASK,GACzC,IAAI,IAAIC,KAAOD,EACXT,EAAoBW,EAAEF,EAAYC,KAASV,EAAoBW,EAAEP,EAASM,IAC5EE,OAAOC,eAAeT,EAASM,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAG3E,ECPAV,EAAoBgB,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBrB,EAAoBW,EAAI,SAASW,EAAKC,GAAQ,OAAOX,OAAOY,UAAUC,eAAeC,KAAKJ,EAAKC,EAAO,E,WCAtG,IAAII,EACA3B,EAAoBgB,EAAEY,gBAAeD,EAAY3B,EAAoBgB,EAAEa,SAAW,IACtF,IAAIC,EAAW9B,EAAoBgB,EAAEc,SACrC,IAAKH,GAAaG,IACbA,EAASC,eAAkE,WAAjDD,EAASC,cAAcC,QAAQC,gBAC5DN,EAAYG,EAASC,cAAcG,MAC/BP,GAAW,CACf,IAAIQ,EAAUL,EAASM,qBAAqB,UAC5C,GAAGD,EAAQE,OAEV,IADA,IAAIC,EAAIH,EAAQE,OAAS,EAClBC,GAAK,KAAOX,IAAc,aAAaY,KAAKZ,KAAaA,EAAYQ,EAAQG,KAAKJ,GAE3F,CAID,IAAKP,EAAW,MAAM,IAAIa,MAAM,yDAChCb,EAAYA,EAAUc,QAAQ,SAAU,IAAIA,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KAC1GzC,EAAoB0C,EAAIf,C,IClBxB3B,EAAoB2C,EAAIb,SAASc,SAAWC,KAAKhB,SAASiB,K,8PCC1D,IAAA1B,EAAA2B,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAxC,EAAAqC,EAAAI,aAAA,yBAAAd,EAAAU,EAAAE,EAAAvC,EAAA2B,GAAA,IAAAe,EAAAH,GAAAA,EAAA1B,qBAAA8B,EAAAJ,EAAAI,EAAAC,EAAA3C,OAAA4C,OAAAH,EAAA7B,WAAA,OAAAiC,EAAAF,EAAA,mBAAAP,EAAAE,EAAAvC,GAAA,IAAA2B,EAAAe,EAAAE,EAAAG,EAAA,EAAAhB,EAAA/B,GAAA,GAAAgD,GAAA,EAAAC,EAAA,CAAAlB,EAAA,EAAAQ,EAAA,EAAAW,EAAAzC,EAAA0C,EAAAtD,EAAAkD,EAAAlD,EAAAuD,KAAA3C,EAAA,GAAAZ,EAAA,SAAAuC,EAAAC,GAAA,OAAAV,EAAAS,EAAAM,EAAA,EAAAE,EAAAnC,EAAAwC,EAAAV,EAAAF,EAAAc,CAAA,YAAAtD,EAAAwC,EAAAE,GAAA,IAAAG,EAAAL,EAAAO,EAAAL,EAAAH,EAAA,GAAAY,GAAAD,IAAA/C,GAAAoC,EAAAL,EAAAL,OAAAU,IAAA,KAAApC,EAAA2B,EAAAI,EAAAK,GAAAvC,EAAAoD,EAAAlB,EAAAsB,EAAA1B,EAAA,GAAAU,EAAA,GAAArC,EAAAqD,IAAAd,KAAAK,EAAAjB,GAAAe,EAAAf,EAAA,OAAAe,EAAA,MAAAf,EAAA,GAAAA,EAAA,GAAAlB,GAAAkB,EAAA,IAAA9B,KAAAG,EAAAqC,EAAA,GAAAxC,EAAA8B,EAAA,KAAAe,EAAA,EAAAO,EAAAC,EAAAX,EAAAU,EAAAV,EAAAZ,EAAA,IAAA9B,EAAAwD,IAAArD,EAAAqC,EAAA,GAAAV,EAAA,GAAAY,GAAAA,EAAAc,KAAA1B,EAAA,GAAAU,EAAAV,EAAA,GAAAY,EAAAU,EAAAV,EAAAc,EAAAX,EAAA,OAAA1C,GAAAqC,EAAA,SAAAc,EAAA,MAAAH,GAAA,EAAAT,CAAA,iBAAAvC,EAAA+B,EAAAsB,GAAA,GAAAN,EAAA,QAAAO,UAAA,oCAAAN,GAAA,IAAAjB,GAAAlC,EAAAkC,EAAAsB,GAAAX,EAAAX,EAAAa,EAAAS,GAAAjB,EAAAM,EAAA,EAAAjC,EAAAmC,KAAAI,GAAA,CAAArB,IAAAe,EAAAA,EAAA,GAAAA,EAAA,IAAAO,EAAAV,GAAA,GAAA1C,EAAA6C,EAAAE,IAAAK,EAAAV,EAAAK,EAAAK,EAAAC,EAAAN,GAAA,OAAAG,EAAA,EAAApB,EAAA,IAAAe,IAAA1C,EAAA,QAAAoC,EAAAT,EAAA3B,GAAA,MAAAoC,EAAAA,EAAArB,KAAAY,EAAAiB,IAAA,MAAAU,UAAA,wCAAAlB,EAAAmB,KAAA,OAAAnB,EAAAQ,EAAAR,EAAAoB,MAAAd,EAAA,IAAAA,EAAA,YAAAA,IAAAN,EAAAT,EAAA8B,SAAArB,EAAArB,KAAAY,GAAAe,EAAA,IAAAE,EAAAU,UAAA,oCAAAtD,EAAA,YAAA0C,EAAA,GAAAf,EAAAlB,CAAA,UAAA2B,GAAAY,EAAAC,EAAAV,EAAA,GAAAK,EAAAP,EAAAtB,KAAAwB,EAAAU,MAAAE,EAAA,YAAAf,GAAAT,EAAAlB,EAAAiC,EAAA,EAAAE,EAAAR,CAAA,SAAAW,EAAA,UAAAS,MAAApB,EAAAmB,KAAAP,EAAA,GAAAX,EAAArC,EAAA2B,IAAA,GAAAiB,CAAA,KAAAO,EAAA,YAAAR,IAAA,UAAAe,IAAA,UAAAC,IAAA,CAAAvB,EAAAnC,OAAA2D,eAAA,IAAAlB,EAAA,GAAAH,GAAAH,EAAAA,EAAA,GAAAG,QAAAO,EAAAV,EAAA,GAAAG,EAAA,yBAAAH,GAAAQ,EAAAe,EAAA9C,UAAA8B,EAAA9B,UAAAZ,OAAA4C,OAAAH,GAAA,SAAAK,EAAAtC,GAAA,OAAAR,OAAA4D,eAAA5D,OAAA4D,eAAApD,EAAAkD,IAAAlD,EAAAqD,UAAAH,EAAAb,EAAArC,EAAAT,EAAA,sBAAAS,EAAAI,UAAAZ,OAAA4C,OAAAD,GAAAnC,CAAA,QAAAiD,EAAA7C,UAAA8C,EAAAb,EAAAF,EAAA,cAAAe,GAAAb,EAAAa,EAAA,cAAAD,GAAAA,EAAAK,YAAA,oBAAAjB,EAAAa,EAAA3D,EAAA,qBAAA8C,EAAAF,GAAAE,EAAAF,EAAA5C,EAAA,aAAA8C,EAAAF,EAAAL,EAAA,yBAAAO,EAAAF,EAAA,oDAAAoB,EAAA,kBAAAC,EAAAtC,EAAA/B,EAAAmD,EAAA,cAAAD,EAAArC,EAAA4B,EAAAE,EAAAH,GAAA,IAAAT,EAAA1B,OAAAC,eAAA,IAAAyB,EAAA,gBAAAlB,GAAAkB,EAAA,EAAAmB,EAAA,SAAArC,EAAA4B,EAAAE,EAAAH,GAAA,SAAApC,EAAAqC,EAAAE,GAAAO,EAAArC,EAAA4B,EAAA,SAAA5B,GAAA,YAAAyD,QAAA7B,EAAAE,EAAA9B,EAAA,GAAA4B,EAAAV,EAAAA,EAAAlB,EAAA4B,EAAA,CAAAmB,MAAAjB,EAAApC,YAAAiC,EAAA+B,cAAA/B,EAAAgC,UAAAhC,IAAA3B,EAAA4B,GAAAE,GAAAvC,EAAA,UAAAA,EAAA,WAAAA,EAAA,cAAA8C,EAAArC,EAAA4B,EAAAE,EAAAH,EAAA,UAAAiC,EAAAhC,EAAA5B,GAAA,gBAAA4B,GAAA,GAAAiC,MAAAC,QAAAlC,GAAA,OAAAA,CAAA,CAAAmC,CAAAnC,IAAA,SAAAA,EAAAgB,GAAA,IAAAjB,EAAA,MAAAC,EAAA,yBAAAC,QAAAD,EAAAC,OAAAE,WAAAH,EAAA,uBAAAD,EAAA,KAAA3B,EAAA8B,EAAAZ,EAAAiB,EAAAO,EAAA,GAAAJ,GAAA,EAAA/C,GAAA,SAAA2B,GAAAS,EAAAA,EAAArB,KAAAsB,IAAAoC,KAAA,IAAApB,EAAA,IAAApD,OAAAmC,KAAAA,EAAA,OAAAW,GAAA,cAAAA,GAAAtC,EAAAkB,EAAAZ,KAAAqB,IAAAmB,QAAAJ,EAAAuB,KAAAjE,EAAA+C,OAAAL,EAAAzB,SAAA2B,GAAAN,GAAA,UAAAV,GAAArC,GAAA,EAAAuC,EAAAF,CAAA,iBAAAU,GAAA,MAAAX,EAAAqB,SAAAb,EAAAR,EAAAqB,SAAAxD,OAAA2C,KAAAA,GAAA,kBAAA5C,EAAA,MAAAuC,CAAA,SAAAY,CAAA,EAAAwB,CAAAtC,EAAA5B,IAAAmE,EAAAvC,EAAA5B,IAAA,qBAAA6C,UAAA,6IAAAuB,EAAA,UAAAC,EAAAzC,EAAA5B,GAAA,IAAA2B,EAAA,oBAAAE,QAAAD,EAAAC,OAAAE,WAAAH,EAAA,kBAAAD,EAAA,IAAAkC,MAAAC,QAAAlC,KAAAD,EAAAwC,EAAAvC,KAAA5B,GAAA4B,GAAA,iBAAAA,EAAAX,OAAA,CAAAU,IAAAC,EAAAD,GAAA,IAAA2C,EAAA,EAAAC,EAAA,oBAAAC,EAAAD,EAAAzC,EAAA,kBAAAwC,GAAA1C,EAAAX,OAAA,CAAA6B,MAAA,IAAAA,MAAA,EAAAC,MAAAnB,EAAA0C,KAAA,EAAAtE,EAAA,SAAA4B,GAAA,MAAAA,CAAA,EAAAU,EAAAiC,EAAA,WAAA1B,UAAA,6IAAAtD,EAAAmD,GAAA,EAAAP,GAAA,SAAAqC,EAAA,WAAA7C,EAAAA,EAAArB,KAAAsB,EAAA,EAAAE,EAAA,eAAAF,EAAAD,EAAAqC,OAAA,OAAAtB,EAAAd,EAAAkB,KAAAlB,CAAA,EAAA5B,EAAA,SAAA4B,GAAAO,GAAA,EAAA5C,EAAAqC,CAAA,EAAAU,EAAA,eAAAI,GAAA,MAAAf,EAAAqB,QAAArB,EAAAqB,QAAA,YAAAb,EAAA,MAAA5C,CAAA,aAAAkF,EAAA7C,GAAA,gBAAAA,GAAA,GAAAiC,MAAAC,QAAAlC,GAAA,OAAA8C,EAAA9C,EAAA,CAAA+C,CAAA/C,IAAA,SAAAA,GAAA,uBAAAC,QAAA,MAAAD,EAAAC,OAAAE,WAAA,MAAAH,EAAA,qBAAAiC,MAAAe,KAAAhD,EAAA,CAAAiD,CAAAjD,IAAAuC,EAAAvC,IAAA,qBAAAiB,UAAA,wIAAAiC,EAAA,UAAAX,EAAAvC,EAAAc,GAAA,GAAAd,EAAA,qBAAAA,EAAA,OAAA8C,EAAA9C,EAAAc,GAAA,IAAAf,EAAA,GAAAoD,SAAAzE,KAAAsB,GAAAoD,MAAA,uBAAArD,GAAAC,EAAAqD,cAAAtD,EAAAC,EAAAqD,YAAAC,MAAA,QAAAvD,GAAA,QAAAA,EAAAkC,MAAAe,KAAAhD,GAAA,cAAAD,GAAA,2CAAAR,KAAAQ,GAAA+C,EAAA9C,EAAAc,QAAA,YAAAgC,EAAA9C,EAAAc,IAAA,MAAAA,GAAAA,EAAAd,EAAAX,UAAAyB,EAAAd,EAAAX,QAAA,QAAAjB,EAAA,EAAA8B,EAAA+B,MAAAnB,GAAA1C,EAAA0C,EAAA1C,IAAA8B,EAAA9B,GAAA4B,EAAA5B,GAAA,OAAA8B,CAAA,UAAAqD,EAAAnF,EAAA4B,GAAA,IAAAD,EAAAnC,OAAA4F,KAAApF,GAAA,GAAAR,OAAA6F,sBAAA,KAAA9F,EAAAC,OAAA6F,sBAAArF,GAAA4B,IAAArC,EAAAA,EAAA+F,OAAA,SAAA1D,GAAA,OAAApC,OAAA+F,yBAAAvF,EAAA4B,GAAAlC,UAAA,IAAAiC,EAAAsC,KAAAuB,MAAA7D,EAAApC,EAAA,QAAAoC,CAAA,UAAA8D,EAAAzF,GAAA,QAAA4B,EAAA,EAAAA,EAAA8D,UAAAzE,OAAAW,IAAA,KAAAD,EAAA,MAAA+D,UAAA9D,GAAA8D,UAAA9D,GAAA,GAAAA,EAAA,EAAAuD,EAAA3F,OAAAmC,IAAA,GAAAgE,QAAA,SAAA/D,GAAAgE,EAAA5F,EAAA4B,EAAAD,EAAAC,GAAA,GAAApC,OAAAqG,0BAAArG,OAAAsG,iBAAA9F,EAAAR,OAAAqG,0BAAAlE,IAAAwD,EAAA3F,OAAAmC,IAAAgE,QAAA,SAAA/D,GAAApC,OAAAC,eAAAO,EAAA4B,EAAApC,OAAA+F,yBAAA5D,EAAAC,GAAA,UAAA5B,CAAA,UAAA4F,EAAA5F,EAAA4B,EAAAD,GAAA,OAAAC,EAAA,SAAAD,GAAA,IAAAT,EAAA,SAAAS,GAAA,aAAAoE,EAAApE,KAAAA,EAAA,OAAAA,EAAA,IAAA3B,EAAA2B,EAAAE,OAAAmE,aAAA,YAAAhG,EAAA,KAAAkB,EAAAlB,EAAAM,KAAAqB,EAAAC,UAAA,aAAAmE,EAAA7E,GAAA,OAAAA,EAAA,UAAA2B,UAAA,uDAAAoD,OAAAtE,EAAA,CAAAuE,CAAAvE,GAAA,gBAAAoE,EAAA7E,GAAAA,EAAAA,EAAA,GAAAiF,CAAAvE,MAAA5B,EAAAR,OAAAC,eAAAO,EAAA4B,EAAA,CAAAmB,MAAApB,EAAAjC,YAAA,EAAAgE,cAAA,EAAAC,UAAA,IAAA3D,EAAA4B,GAAAD,EAAA3B,CAAA,UAAAoG,EAAAtE,EAAAH,EAAA3B,EAAA4B,EAAArC,EAAAmD,EAAAT,GAAA,QAAAf,EAAAY,EAAAY,GAAAT,GAAAE,EAAAjB,EAAA6B,KAAA,OAAAjB,GAAA,YAAA9B,EAAA8B,EAAA,CAAAZ,EAAA4B,KAAAnB,EAAAQ,GAAAkE,QAAAC,QAAAnE,GAAAoE,KAAA3E,EAAArC,EAAA,UAAAiH,EAAA1E,GAAA,sBAAAH,EAAA,KAAA3B,EAAA0F,UAAA,WAAAW,QAAA,SAAAzE,EAAArC,GAAA,IAAAmD,EAAAZ,EAAA0D,MAAA7D,EAAA3B,GAAA,SAAAyG,EAAA3E,GAAAsE,EAAA1D,EAAAd,EAAArC,EAAAkH,EAAAC,EAAA,OAAA5E,EAAA,UAAA4E,EAAA5E,GAAAsE,EAAA1D,EAAAd,EAAArC,EAAAkH,EAAAC,EAAA,QAAA5E,EAAA,CAAA2E,OAAA,MAKO,SAAeE,IAAG,OAAAC,EAAApB,MAAC,KAADE,UAAA,CAg4MxB,SAAAkB,IAAA,OAAAA,EAAAJ,EAAAjD,IAAApE,EAh4MM,SAAA0H,IAAA,IAAAC,EAAA,OAAAvD,IAAAC,EAAA,SAAAuD,GAAA,cAAAA,EAAAzF,EAAAyF,EAAAjF,GAAA,cAAAiF,EAAAzF,EAAA,EAAAyF,EAAAjF,EAAA,EAEGkF,MAAML,IAAG,eAAAM,EAAAT,EAAAjD,IAAApE,EAAC,SAAA+H,EAAOC,GAAO,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlH,EAAAmnM,GAAAoM,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAnM,GAAAoM,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAnR,GAAAhC,GAAA2B,GAAAyR,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAA,OAAA1Q,IAAAC,EAAA,SAAA0Q,GAAA,cAAAA,EAAApS,GAAA,OAKI,OAJ1BsF,EAAQD,EAAQgN,SAASC,WAAWC,sBAGpChN,EAAQF,EAAQgN,SAASG,oBACzBC,KAAK,qBAAqBL,EAAApS,EAAA,EAC1BqF,EAAQqN,OAAM,OAEO,MAArBlN,EAASD,EAAMC,QACVrG,OAAS,GAAC,CAAAiT,EAAApS,EAAA,QACqC,OAAxD2S,QAAQC,KAAK,2CAA2CR,EAAAxR,EAAA,UAkBE,GAbtD6E,EAAUD,EAAO,GACjBE,EAAOF,EAAOtC,MAAM,GAGpByC,EAAOD,EAAKmN,IAAI,SAAAC,GACpB,IAAI1U,EAAM,CAAC,EAIX,OAHAqH,EAAQ5B,QAAQ,SAACkP,EAAG3T,GAClBhB,EAAI2U,GAAKD,EAAI1T,EACf,GACOhB,CACT,GAOkB,WAJZwH,EAAYhH,SAASoU,eAAe,aAAa/R,OAI9B,CAAAmR,EAAApS,EAAA,QACvB6F,EAAI/B,EAAA,CACFmP,QAAS,kDACTC,YAAa,4CACbC,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B1N,KAAM,CAAEH,OAAQG,GAChB2N,KAAM,CAAEC,KAAM,QAASC,KAAM,IAAKC,SAAS,GAC3CC,SAAQ/P,EAAAA,EAAA,CACNgQ,EAAG,CACDC,MAAOnO,EAAQ,GACf8N,KAAM,eACNM,MAAO,CAAEC,MAAM,GACfC,KAAM,CACJC,MAAOvO,EAAQ,GACfwO,cAAe,GACfC,cAAe,KAGnBzT,EAAG,CACDmT,MAAOnO,EAAQ,GACf8N,KAAM,eACNM,MAAO,CAAEC,MAAM,GACfC,KAAM,CACJC,MAAOvO,EAAQ,GACfwO,cAAe,GACfC,cAAe,MAIfzO,EAAQtG,QAAU,GAAK,CACzBgV,MAAO,CACLP,MAAOnO,EAAQ,GACf8N,KAAM,UACNa,OAAQ,CACNJ,MAAOvO,EAAQ,GACfyO,cAAe,GACfD,cAAe,OAKjBxO,EAAQtG,QAAU,GAAK,CACzBkV,MAAO,CACLT,MAAOnO,EAAQ,GACf8N,KAAM,UACNa,OAAQ,CACNJ,MAAOvO,EAAQ,GACfyO,cAAe,GACfD,cAAe,QAItB,SACO,CACNK,KAAM,WACNP,KAAM,CACJQ,WAAY,UACZC,WAAY,UACZC,UAAW,WAEbL,OAAQ,CACNI,WAAY,UACZD,WAAY,aAGhBnC,EAAApS,EAAA,mBAGmB,WAAd4F,EAAsB,CAAAwM,EAAApS,EAAA,QAC7B6F,EAAI/B,EAAA,CACFmP,QAAS,kDACTC,YAAa,oCACbC,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B1N,KAAM,CAAEH,OAAQG,GAChB2N,KAAM,CAAEC,KAAM,SAAUE,SAAS,EAAMiB,QAAS,IAChDhB,SAAQ/P,EAAA,CACNgQ,EAAG,CACDC,MAAOnO,EAAQ,GACf8N,KAAM,eACNM,MAAO,CAAEC,MAAM,GACfC,KAAM,CACJC,MAAOvO,EAAQ,GACfwO,cAAe,GACfC,cAAe,KAGnBzT,EAAG,CACDmT,MAAOnO,EAAQ,GACf8N,KAAM,eACNM,MAAO,CAAEC,MAAM,GACfC,KAAM,CACJC,MAAOvO,EAAQ,GACfwO,cAAe,GACfC,cAAe,KAGnBV,KAAM,CACJI,MAAOnO,EAAQ,GACf8N,KAAM,eACNM,MAAO,CACLN,KAAM,SACNhO,MAAO,CAAC,IAAK,MAEf6O,OAAQ,CACNJ,MAAOvO,EAAQ,GACfyO,cAAe,GACfD,cAAe,MAIfxO,EAAQtG,QAAU,GAAK,CACzBgV,MAAO,CACLP,MAAOnO,EAAQ,GACf8N,KAAM,UACNa,OAAQ,CACNJ,MAAOvO,EAAQ,GACfyO,cAAe,GACfD,cAAe,QAItB,SACO,CACNK,KAAM,WACNP,KAAM,CACJQ,WAAY,UACZC,WAAY,UACZC,UAAW,WAEbL,OAAQ,CACNI,WAAY,UACZD,WAAY,aAGhBnC,EAAApS,EAAA,mBAGmB,SAAd4F,EAAoB,CAAAwM,EAAApS,EAAA,aAEvByF,EAAQtG,OAAS,GAAC,CAAAiT,EAAApS,EAAA,cACd,IAAIV,MAAM,kDAAiD,OAGvC,GACX,KADXwG,EAAWH,EAAKxG,QACJ,CAAAiT,EAAApS,EAAA,cACV,IAAIV,MAAM,6CAA4C,OA8B9D,IA1BMyG,EAAY4O,KAAKC,IAAI,GAAID,KAAKE,IAAI,GAAI,IAAM/O,IAC5CE,EAAU2O,KAAKC,IAAI,EAAGD,KAAKE,IAAI,EAAG,GAAK/O,IACvCG,EAAY,IAAkB,EAAXH,EAGnBI,EAAoB,SAAC4O,EAAOnE,GAChC,IACMoE,EAAaJ,KAAKC,IAAI,GAAI,GAAc,EAARE,GAChCE,EAAYL,KAAKC,IAAI,GAAI,GAAc,EAARE,GACrC,MAAO,OAAPG,OAHgB,IAGK,MAAAA,OAAKF,EAAU,OAAAE,OAAMD,EAAS,KACrD,EAGM7O,EAAkBR,EAAKkN,IAAI,SAACvV,EAAGwX,GAAK,OAAAhR,EAAAA,EAAAA,EAAAA,EAAA,QAAAmR,OAClCH,EAAK,MAAOxX,EAAEmI,EAAQ,KAAG,KAAAwP,OACzBH,EAAQ,IAAG,MAAOxX,EAAEmI,EAAQ,KAAG,OAAAwP,OAC7BH,EAAQ,EAAC,WAAY,EAAIH,KAAKO,GAAK5X,EAAEmI,EAAQ,IAAM,KAAG,OAAAwP,OACtDH,EAAQ,EAAC,kBAAmBxX,EAAEmI,EAAQ,IAAM,IAAG,GAInDW,EAAY,CAAC1I,OAAOyX,OAAMzR,MAAbhG,OAAM,CAAQ,CAAC,GAACuX,OAAAtS,EAAKwD,MAGlCE,EAAgB,GAClBC,EAAeL,EACV7G,EAAI,EAAGA,EAAI0G,EAAU1G,IAGtBqH,IAFAF,EAAQD,IACRE,EAAQD,EAAQR,IACW,EACjCM,EAAclE,KAAK,CAAEoE,MAAAA,EAAOC,MAAAA,EAAOC,OAAAA,IACnCH,EAAeE,EAAQR,EAQnBU,EADeT,EAAY,GAFR,GACCH,EAE+B,EAEzDD,EAAO,CACL,QAAW,kDACX,OAAU,CACR,SAAY,CACV,KAAQ,MACR,QAAU,GAEZ,OAAU,CAAC,QAAW,KAExB,YAAe,2BAAFoP,OAA6BnP,EAAQ,qBAClD,WAAc,QACd,KAAQ,CAAC,OAAUM,GACnB,QAAW,CACT,CACE,YAAe,qBACf,MAA4B,GAAlBH,EAAY,IACtB,OAA6B,GAAlBA,EAAY,IACvB,KAAQ,CAAC,OAAU,MACnB,MAAS,GAAFgP,OAAAtS,EAEFgD,EAAKkN,IAAI,SAACvV,EAAGwX,GAAK,MAAM,CACzB,YAAe,QAAFG,OAAUH,EAAQ,EAAC,eAChC,KAAQ,CACN,KAAQ,MACR,OAAUzO,EAAcyO,GAAOvO,MAC/B,QAAWF,EAAcyO,GAAOtO,MAChC,MAAS,EACT,OAAU,kBACV,QAAW,IACX,EAAKP,EAAY,GACjB,EAAKA,EAAY,IAEnB,SAAY,CACV,MAAS,CAAC,MAASC,EAAkB4O,KAExC,IAAEnS,EAEAgD,EAAKkN,IAAI,SAACvV,EAAGwX,GAAK,MAAM,CACzB,YAAe,QAAFG,OAAUH,EAAQ,EAAC,aAChC,KAAQ,CACN,KAAQ,MACR,OAAUzO,EAAcyO,GAAOvO,MAC/B,QAAWF,EAAcyO,GAAOtO,MAChC,MAAS,EACT,OAAU,CAAC,KAAQ,cAAFyO,OAAgBH,EAAQ,EAAC,cAC1C,aAAgBH,KAAKE,IAAI,EAAG9O,EAAY,GACxC,SAAW,EACX,EAAKE,EAAY,GACjB,EAAKA,EAAY,IAEnB,SAAY,CACV,MAAS,CAAC,MAASC,EAAkB4O,IACrC,QAAW,CACT,CAAC,MAASxX,EAAEmI,EAAQ,IAAK,MAAS,YAClC,CAAC,MAASnI,EAAEmI,EAAQ,IAAM,IAAK,MAAS,cAG7C,IAAE9C,EAEAgD,EAAKkN,IAAI,SAACvV,EAAGwX,GAAK,MAAM,CACzB,YAAe,QAAFG,OAAUH,EAAQ,EAAC,UAChC,KAAQ,CACN,KAAQ,OACR,MAAS,SACT,SAAY,SACZ,EAAK7O,EAAY,GAAK,GACtB,EAAKA,EAAY,GAAKI,EAAcyO,GAAOrO,OAC3C,SAAYkO,KAAKC,IAAI,GAAID,KAAKE,IAAI,GAAI,IAAM/O,IAC5C,KAAQ,WACR,WAAc,OACd,MAAS,SAEX,SAAY,CACV,KAAQ,CAAC,MAASxI,EAAEmI,EAAQ,IAAM,KAClC,QAAW,CACT,UAAa,CACX,KAAQ,cAAFwP,OAAgBH,EAAQ,EAAC,iBAC/B,MAAS,GAEX,MAAS,IAGd,MAGL,CACE,YAAe,sBACf,MA7Fc,IA8Fd,OAA6B,GAAlB7O,EAAY,IACvB,KAAQ,CAAC,OAAU,MACnB,MAASN,EAAKkN,IAAI,SAACvV,EAAGwX,GAAK,MAAK,CAC9B,CACE,YAAe,iBAAFG,OAAmBH,EAAQ,GACxC,KAAQ,CACN,KAAQ,SACR,KAAQ,IACR,EAAK,GACL,EAAKpO,EAtGQ,GAsGQoO,EACrB,MAAS5O,EAAkB4O,KAG/B,CACE,YAAe,gBAAFG,OAAkBH,EAAQ,GACvC,KAAQ,CACN,KAAQ,OACR,EAAK,GACL,EAAKpO,EA/GQ,GA+GQoO,EACrB,MAAS,OACT,SAAY,SACZ,SAAY,GACZ,KAAQ,YAEV,SAAY,CACV,KAAQ,CAAC,MAASxX,EAAEmI,EAAQ,OAGjC,GAAE2P,SAGP,KAAQ,CAAC,OAAU,OACnBhD,EAAApS,EAAA,mBAGmB,SAAd4F,EAAoB,CAAAwM,EAAApS,EAAA,QACrBmG,EAAkB,GAClBS,EAAenB,EAAQvC,MAAM,GACnCyC,EAAK9B,QAAQ,SAAAiP,GACTlM,EAAa/C,QAAQ,SAAAwR,GACA,OAAjBvC,EAAIuC,SAAsCpY,IAAjB6V,EAAIuC,IAA2C,KAAjBvC,EAAIuC,IAC3DlP,EAAgBhE,KAAI2B,EAAAA,EAAAA,EAAC,CAAC,EACrB2B,EAAQ,GAAKqN,EAAIrN,EAAQ,KAAG,SACrB4P,GAAO,QACRC,WAAWxC,EAAIuC,KAAa,GAGvC,EACJ,GAEAxP,EAAI/B,EAAA,CACAmP,QAAS,kDACTC,YAAa,+CACbC,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B1N,KAAM,CAAEH,OAAQW,GAChBmN,KAAM,CACNC,KAAM,OACNgC,OAAO,EACP9B,SAAS,EACT+B,YAAa,GAEb9B,SAAU,CACVC,EAAG,CACCC,MAAOnO,EAAQ,GACf8N,KAAM,UACNQ,KAAM,CACNC,MAAOvO,EAAQ,GACfwO,cAAe,GACfC,cAAe,GACfuB,WAAY,IAGhBhV,EAAG,CACCmT,MAAO,QACPL,KAAM,eACNQ,KAAM,CACNC,MAAO,QACPC,cAAe,GACfC,cAAe,KAGnBC,MAAO,CACHP,MAAO,SACPL,KAAM,UACNM,MAAO,CACP6B,OAAQ,cAERtB,OAAQ,CACRJ,MAAO,SACPE,cAAe,GACfD,cAAe,OAGlB,SACO,CACRK,KAAM,WACNP,KAAM,CACFQ,WAAY,UACZC,WAAY,UACZC,UAAW,WAEfL,OAAQ,CACJI,WAAY,UACZD,WAAY,WAEhBgB,MAAO,CACH/B,KAAM,GACNmC,QAAQ,KAGdvD,EAAApS,EAAA,mBAGmB,SAAd4F,EAAoB,CAAAwM,EAAApS,EAAA,SAc3B,GAPS6G,EAAT,SAA2B+O,GACzB,MAAsB,iBAAXA,EACF,IAAIC,KAAKlB,KAAKmB,MAAyB,OAAlBF,EAAS,OAAiB,MAEjD,IAAIC,KAAKD,EAClB,IAVInQ,EAAQtG,OAAS,GAAC,CAAAiT,EAAApS,EAAA,cACd,IAAIV,MAAM,+EAA8E,OAgC5E,GAEI,KAtBlBwH,EAAWnB,EACdkN,IAAI,SAACC,EAAKgC,GAET,IAAKhC,EAAIrN,EAAQ,KACM,MAAnBqN,EAAIrN,EAAQ,KAAmC,KAApBqN,EAAIrN,EAAQ,IACzC,OAAO,KAGT,IAAMsQ,EAAOlP,EAAkBiM,EAAIrN,EAAQ,KACrCuQ,EAAQV,WAAWxC,EAAIrN,EAAQ,KAErC,OAAIwQ,MAAMF,EAAKG,YAAcD,MAAMD,GAC1B,KAGF,CACLD,KAAMA,EAAKI,cACXH,MAAOA,EAEX,GACCxS,OAAO4S,UAEGjX,OAAY,CAAAiT,EAAApS,EAAA,SACwB,OAA/C2S,QAAQC,KAAK,kCAAkCR,EAAAxR,EAAA,WAKjDiF,EAAI/B,EAAA,CACF,QAAW,kDACX,MAAS,IACT,YAAe,kCACf,WAAc,QACd,OAAU,CAAE,KAAQ,CAAE,OAAU,gBAChC,KAAQ,CAAE,OAAUgD,GACpB,KAAQ,CACN,KAAQ,OACR,YAAe,aACf,YAAe,GAEjB,SAAY,CACV,EAAK,CACH,MAAS,OACT,KAAQ,WACR,KAAQ,CACN,MAAS,KACT,OAAU,QACV,YAAe,GACf,cAAiB,GACjB,WAAc,UACd,KAAQ,aAGZ,EAAK,CACH,MAAS,QACT,KAAQ,eACR,MAAS,CAAE,MAAQ,GACnB,KAAQ,CACN,MAAS,KACT,cAAiB,GACjB,WAAc,UACd,KAAQ,WACR,MAAQ,EACR,UAAa,YAGjB,QAAW,CACT,CAAE,MAAS,OAAQ,KAAQ,WAAY,MAAS,OAAQ,OAAU,YAClE,CAAE,MAAS,QAAS,KAAQ,eAAgB,MAAS,QAAS,OAAU,UAE3E,SACS,CACR,KAAQ,WACR,KAAQ,CACN,WAAc,UACd,WAAc,UACd,UAAa,aAGjBsL,EAAApS,EAAA,oBAGmB,UAAd4F,EAAqB,CAAAwM,EAAApS,EAAA,SACrB6G,EAAT,SAA2B+O,GACvB,OAAO,IAAIC,KAAKlB,KAAKmB,MAAyB,OAAlBF,EAAS,OAAiB,KAC1D,EAiDSS,EAAT,WAAoD,IAGxBC,EAHJC,EAAQ3S,UAAAzE,OAAA,QAAAlC,IAAA2G,UAAA,GAAAA,UAAA,GAAG,KAAM4S,EAAK5S,UAAAzE,OAAA,QAAAlC,IAAA2G,UAAA,GAAAA,UAAA,GAAG,EACvC6S,EAAU,GAC8BC,EAAAnU,EAAhC2E,EAAYrJ,IAAI0Y,IAAa,IACnB,IAAxB,IAAAG,EAAAhU,MAAA4T,EAAAI,EAAA1W,KAAAgB,MAA0B,KAAf2V,EAAIL,EAAArV,MACX0V,EAAKH,MAAQA,EACbC,EAAQtU,KAAKwU,GACbF,EAAQtU,KAAIuB,MAAZ+S,EAAO9T,EAAS0T,EAAeM,EAAKC,GAAIJ,EAAQ,IACpD,CAAC,OAAAK,GAAAH,EAAAxY,EAAA2Y,EAAA,SAAAH,EAAAlW,GAAA,CACD,OAAOiW,CACX,GAxDMxP,EAAYvB,EAAKmN,IAAI,SAAAC,GACvB,IAAMyD,EAAWzD,EAAI,IAAM,KACrB8D,EAAK9D,EAAI,GACT1P,EAAO0P,EAAI,IAAM,QAAJmC,OAAY2B,GAC/B,IAAKA,EAAI,OAAO,KAEhB,IAAME,EAA0B,iBAAXhE,EAAI,GAAkBjM,EAAkBiM,EAAI,IAAM,IAAI+C,KAAK/C,EAAI,IAC9EiE,EAAwB,iBAAXjE,EAAI,GAAkBjM,EAAkBiM,EAAI,IAAM,IAAI+C,KAAK/C,EAAI,IAClF,KAAMgE,aAAiBjB,OAASI,MAAMa,MAAYC,aAAelB,OAASI,MAAMc,GAAM,OAAO,KAE7F,IAAIC,EAAW,EAaf,OAZIlE,EAAI,KAEAkE,EADkB,iBAAXlE,EAAI,IAAmBA,EAAI,GAAGmE,SAAS,KACnC3B,WAAWxC,EAAI,IAAM,IACzBA,EAAI,GAAK,EACLA,EAAI,GAAK,IAETA,EAAI,IAMhB,CAAE8D,GAAAA,EAAIL,SAAAA,EAAUnT,KAAAA,EAAM8T,UAAWJ,EAAOK,QAASJ,EAAKC,SAAAA,EAAUI,aAFlDtE,EAAI,GAAK3O,OAAO2O,EAAI,IAAIuE,MAAM,KAAKxE,IAAI,SAAAvV,GAAC,OAAIA,EAAEga,MAAM,GAAI,GAGjF,GAAG9T,OAAO4S,UAGAvS,QAAQ,SAAA8S,GACd,IAAMY,EAAWZ,EAAKQ,QAAUR,EAAKO,UACrCP,EAAKa,YAAc,IAAI3B,KAAKc,EAAKO,UAAUhB,UAAYqB,EAAWZ,EAAKK,SAC3E,GAGM9P,EAAc,IAAIuQ,IACxBxQ,EAAUpD,QAAQ,SAAA8S,GACTzP,EAAYwQ,IAAIf,EAAKJ,WACtBrP,EAAYyQ,IAAIhB,EAAKJ,SAAU,IAEnCrP,EAAYrJ,IAAI8Y,EAAKJ,UAAUpU,KAAKwU,EACxC,GAEAxP,EAAA5E,EAC6B2E,EAAY0Q,WAAS,IAAlD,IAAAzQ,EAAAzE,MAAA0E,EAAAD,EAAAnH,KAAAgB,OAAoDqG,EAAAvF,EAAAsF,EAAAnG,MAAA,IAAvC,GAAWoG,EAAA,GACVwQ,KAAK,SAACjX,EAAGnB,GAAC,OAAKmB,EAAEsW,UAAYzX,EAAEyX,SAAS,EACrD,OAAAL,GAAA1P,EAAAjJ,EAAA2Y,EAAA,SAAA1P,EAAA3G,GAAA,CAcK8G,EAAe+O,EAAe,MAEpCxQ,EAAO,CACHoN,QAAS,kDACTC,YAAa,8BACb4E,MAAO,IACPC,OAAQpD,KAAKC,IAAI,IAA2B,GAAtBtN,EAAanI,QACnCwG,KAAM,CAAEH,OAAQ8B,GAChB0Q,MAAO,CACH,CACI1E,KAAM,CAAEC,KAAM,MAAOmB,QAAS,GAAKqD,OAAQ,IAC3CrE,SAAU,CACNjT,EAAG,CAAEmT,MAAO,OAAQL,KAAM,UAAWQ,KAAM,CAAEC,MAAO,KAAMC,cAAe,IAAM4D,KAAM,MACrFlE,EAAG,CAAEC,MAAO,YAAaL,KAAM,WAAYQ,KAAM,CAAEC,MAAO,WAAYiE,OAAQ,QAASxC,YAAa,KACpGyC,GAAI,CAAEtE,MAAO,UAAWL,KAAM,YAC9BY,MAAO,CAAEP,MAAO,QAASL,KAAM,UAAWM,MAAO,CAAE6B,OAAQ,cAAgBtB,OAAQ,CAAEJ,MAAO,UAC5FP,QAAS,CACL,CAAEG,MAAO,OAAQL,KAAM,UAAWS,MAAO,QACzC,CAAEJ,MAAO,YAAaL,KAAM,WAAYS,MAAO,QAASiE,OAAQ,YAChE,CAAErE,MAAO,UAAWL,KAAM,WAAYS,MAAO,MAAOiE,OAAQ,YAC5D,CAAErE,MAAO,WAAYL,KAAM,eAAgBS,MAAO,WAAYiE,OAAQ,UAIlF,CACI3E,KAAM,CAAEC,KAAM,MAAOmB,QAAS,GAAKqD,OAAQ,IAC3CrE,SAAU,CACNjT,EAAG,CAAEmT,MAAO,OAAQL,KAAM,UAAWsE,KAAM,MAC3ClE,EAAG,CAAEC,MAAO,YAAaL,KAAM,YAC/B2E,GAAI,CAAEtE,MAAO,cAAeL,KAAM,YAClCY,MAAO,CAAEP,MAAO,QAASL,KAAM,UAAWM,MAAO,CAAE6B,OAAQ,iBAGnE,CACIpC,KAAM,CAAEC,KAAM,OAAQ4E,MAAO,OAAQrP,SAAU,SAAUsP,GAAI,EAAGC,SAAU,IAC1E3E,SAAU,CACNjT,EAAG,CAAEmT,MAAO,OAAQL,KAAM,UAAWsE,KAAM,MAC3ClE,EAAG,CAAEC,MAAO,UAAWL,KAAM,YAC7B+E,KAAM,CAAE1E,MAAO,WAAYL,KAAM,eAAgB0E,OAAQ,OACzD9D,MAAO,CAAElT,MAAO,UAGxB,CACIqS,KAAM,CAAEC,KAAM,OAAQgF,WAAY,CAAC,EAAG,GAAI7D,QAAS,IACnD/O,KAAM,CAAEH,OAAQ,CAAC,CAAEuQ,MAAM,IAAIF,MAAOM,iBACpCzC,SAAU,CACNC,EAAG,CAAEC,MAAO,OAAQL,KAAM,YAC1BY,MAAO,CAAElT,MAAO,OAChBuS,KAAM,CAAEvS,MAAO,MAI3BmS,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,MAAQU,KAAM,CAAEyE,MAAM,EAAM/D,UAAW,aACjErC,EAAApS,EAAA,oBAGmB,aAAd4F,EAAwB,CAAAwM,EAAApS,EAAA,cAG7ByF,EAAQtG,OAAS,GAAC,CAAAiT,EAAApS,EAAA,SAC0D,OAA9E2S,QAAQC,KAAK,iEAAiER,EAAAxR,EAAA,WAK1E2G,EAAc,GAEpB5B,EAAK9B,QAAQ,SAAAiP,GACX,IAAM2F,EAAW3F,EAAIrN,EAAQ,IACvBiT,EAASpD,WAAWxC,EAAIrN,EAAQ,MAAQ,EACxCkT,EAASrD,WAAWxC,EAAIrN,EAAQ,MAAQ,EAG9C8B,EAAYpF,KAAK,CACfsW,SAAUA,EACVG,OAAQnT,EAAQ,GAChBxE,MAAOyX,IAGTnR,EAAYpF,KAAK,CACfsW,SAAUA,EACVG,OAAQnT,EAAQ,GAChBxE,MAAO0X,GAEX,GAGMnR,EAAU7E,EAAO,IAAIkW,IAAIlT,EAAKkN,IAAI,SAAAvV,GAAC,OAAIA,EAAEmI,EAAQ,GAAG,MACpDgC,EAAgBD,EAAWrI,SAKZ,GAEnBuI,EAAgBiN,KAAKC,IAAI,IAAqB,GAAhBnN,GAC9BE,EAAe,GACfC,EAAe,IACNH,GAAiB,GAE1BC,EAAgBiN,KAAKC,IAAI,IAAqB,GAAhBnN,GAC9BE,EAAe,GACfC,EAAe,KAGfF,EAAgBiN,KAAKC,IAAI,IAAKD,KAAKE,IAAI,IAAqB,GAAhBpN,IAC5CE,EAAe,GACfC,EAAe,KAGjB/B,EAAI/B,EAAA,CACFmP,QAAS,kDACTC,YAAa,sCACbC,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1ByE,MAAO,IACPC,OAAQrQ,EACR/B,KAAM,CAAEH,OAAQ+B,GAChBmM,SAAU,CACRC,EAAG,CACDC,MAAO,QACPL,KAAM,eACNS,MAAO,KACPH,MAAO,CAAEC,MAAM,GACfC,KAAM,CACJE,cAAe,GACfM,WAAY,UACZiE,MAAM,EACN/D,UAAW,UACXqE,WAAY,WAGhBrY,EAAG,CACDmT,MAAO,WACPL,KAAM,UACNS,MAAO,KACPH,MAAO,CAAElM,aAAcA,EAAcC,aAAcA,GACnDmM,KAAM,CACJgF,OAAQ,EACRC,OAAO,EACPC,UAAW,GACXC,QAAQ,EACRjF,cAAe,GACfM,WAAY,aAIlByD,MAAO,CACL,CACE1E,KAAM,OACNI,SAAU,CACRyF,OAAQ,CAAEvF,MAAO,WAAYL,KAAM,WACnCY,MAAO,CAAElT,MAAO,aAGpB,CACEqS,KAAM,CACJC,KAAM,QACNoC,QAAQ,EACRlC,SAAS,GAEXC,SAAU,CACRS,MAAO,CACLP,MAAO,SACPL,KAAM,UACNM,MAAO,CACLqF,OAAQ,CAACzT,EAAQ,GAAIA,EAAQ,IAC7BF,MAAO,CAAC,UAAW,YAErByO,MAAO,UACPI,OAAQ,CACNF,cAAe,GACfD,cAAe,GACfO,WAAY,UACZD,WAAY,YAGhBf,KAAM,CAAEvS,MAAO,KACfyT,QAAS,CAAEzT,MAAO,GAClBwS,QAAS,CACP,CAAEG,MAAO,WAAYL,KAAM,UAAWS,MAAO,YAC7C,CAAEJ,MAAO,SAAUL,KAAM,UAAWS,MAAO,WAC3C,CAAEJ,MAAO,QAASL,KAAM,eAAgBS,MAAO,QAASiE,OAAQ,aAIvE,SACO,CACN3D,KAAM,WACNP,KAAM,CACJQ,WAAY,UACZC,WAAY,UACZC,UAAW,WAEbL,OAAQ,CACNI,WAAY,UACZD,WAAY,aAGhBnC,EAAApS,EAAA,oBAGqB,UAAd4F,EAAqB,CAAAwM,EAAApS,EAAA,SACtB6H,EAAWlF,EAAO,IAAIkW,IAAIlT,EAAKkN,IAAI,SAAAvV,GAAC,OAAIA,EAAEmI,EAAQ,GAAG,KACrD+B,EAAU7E,EAAO,IAAIkW,IAAIlT,EAAKkN,IAAI,SAAAvV,GAAC,OAAIA,EAAEmI,EAAQ,GAAG,KAGpDsC,EAAcF,EAAY,GAC1BG,EAAaH,EAAYA,EAAY1I,OAAS,GAE9C8I,EAAYtC,EAAKnC,OAAO,SAAAlG,GAAC,OAC3BA,EAAEmI,EAAQ,MAAQsC,GAAezK,EAAEmI,EAAQ,MAAQuC,CAAU,GAI3DE,GAAYD,EAAU4K,IAAI,SAAAvV,GAAC,OAAIA,EAAEmI,EAAQ,GAAG,GAC5C0C,GAAeD,GAAUkR,MAAM,SAAAzY,GAAC,OAAIA,IAAM,GAAKA,GAAK,CAAC,GACrDyH,GAAeD,GAAe,MAAQ,OAGtCT,GAAgBiN,KAAKC,IAAI,IAAKD,KAAKE,IAAI,IAAyB,GAApBrN,EAAWrI,SAG7D0G,EAAI/B,EAAA,CACAmP,QAAS,kDACTC,YAAa,mCACbC,WAAY,QACZC,OAAQ,CACRrB,KAAM,CAAEsB,OAAQ,eAChBgG,SAAU,CAAE9F,KAAM,MAAO+F,SAAU,YAEnCxB,MAViB,IAWjBC,OAAQrQ,GACR/B,KAAM,CAAEH,OAAQyC,GAChByL,SAAU,CACVC,EAAG,CACCC,MAAOnO,EAAQ,GACf8N,KAAM,UACNQ,KAAM,CACNC,MAAO,KACPC,cAAe,GACfsF,gBAAiB,OACjBC,aAAc,GACdN,QAAQ,EACRF,OAAO,EACPzE,WAAY,WAEZV,MAAO,CAAE4F,QAAS,KAEtBhZ,EAAG,CACCmT,MAAOnO,EAAQ,GACf8N,KAAM,eACNQ,KAAM,KACNF,MAAO,CAAEC,MAAM,IAEnBK,MAAO,CACHP,MAAOnO,EAAQ,GACf8N,KAAM,UACNa,OAAQ,KACRP,MAAO,CAAE6B,OAAQ,gBAGrBsC,MAAO,CAEP,CACI1E,KAAM,CACNC,KAAM,OACNgF,WAAY,CAAC,EAAG,GAChB7D,QAAS,IAET/O,KAAM,CAAEH,OAAQ,CAAC,CAAC,IAClBkO,SAAU,CACVC,EAAG,CAAE+F,MAAO3R,GACZmQ,GAAI,CAAEwB,MAAO1R,GACbvH,EAAG,CAAEQ,MAAO,GACZkT,MAAO,CAAElT,MAAO,aAIpB,CACIqS,KAAM,CACNC,KAAM,OACNiC,YAAa,EACbd,QAAS,GACTjB,SAAS,GAETC,SAAU,CACVyF,OAAQ,CAAEvF,MAAOnO,EAAQ,GAAI8N,KAAM,WACnCE,QAAS,CACL,CAAEG,MAAOnO,EAAQ,GAAI8N,KAAM,UAAWS,MAAO,YAC7C,CAAEJ,MAAOnO,EAAQ,GAAI8N,KAAM,UAAWS,MAAO,UAC7C,CAAEJ,MAAOnO,EAAQ,GAAI8N,KAAM,eAAgBS,MAAO,QAASiE,OAAQ7P,OAK3E,CACIkL,KAAM,CACNC,KAAM,SACNC,KAAM,IACNkB,QAAS,EACTjB,SAAS,IAIb,CACIkG,UAAW,CACX,CAAEnW,OAAQ,UAAFyR,OAAYxP,EAAQ,GAAE,WAAAwP,OAAUlN,EAAW,OAEnDuL,KAAM,CACNC,KAAM,OACN4E,MAAO,QACPrP,SAAU,SACVsP,IAAK,EACLC,SAAU,GACVuB,WAAY,UAEZlG,SAAU,CACV4E,KAAM,CACF1E,MAAOnO,EAAQ,GACf8N,KAAM,eACN0E,OAAQ7P,MAKhB,CACIuR,UAAW,CACX,CAAEnW,OAAQ,UAAFyR,OAAYxP,EAAQ,GAAE,WAAAwP,OAAUlN,EAAW,MACnD,CACI5J,OAAQ,CAAC,CAAE0b,GAAI,OAAQC,GAAI,SAC3BjC,KAAM,CAAC,CAAEjE,MAAOnO,EAAQ,GAAIsU,MAAO,gBAEvC,CAAEvW,OAAQ,oBAEV8P,KAAM,CACNC,KAAM,OACN4E,MAAO,QACPrP,SAAU,SACVsP,IAAK,EACL4B,IAAK,GACL3B,SAAU,GACVuB,WAAY,OACZK,UAAW,UAEXvG,SAAU,CACV4E,KAAM,CAAE1E,MAAOnO,EAAQ,GAAI8N,KAAM,aAIrC,CACIoG,UAAW,CACX,CAAEnW,OAAQ,UAAFyR,OAAYxP,EAAQ,GAAE,WAAAwP,OAAUjN,EAAU,OAElDsL,KAAM,CACNC,KAAM,OACN4E,MAAO,OACPrP,SAAU,SACVsP,GAAI,EACJC,SAAU,GACVuB,WAAY,UAEZlG,SAAU,CACV4E,KAAM,CACF1E,MAAOnO,EAAQ,GACf8N,KAAM,eACN0E,OAAQ7P,MAKhB,CACIuR,UAAW,CACX,CAAEnW,OAAQ,UAAFyR,OAAYxP,EAAQ,GAAE,WAAAwP,OAAUjN,EAAU,OAElDsL,KAAM,CACNC,KAAM,OACN4E,MAAO,OACPrP,SAAU,SACVsP,GAAI,GACJC,SAAU,GACVuB,WAAY,QAEZlG,SAAU,CACV4E,KAAM,CAAE1E,MAAOnO,EAAQ,GAAI8N,KAAM,eAGpC,SACO,CACRxB,KAAM,CAAEsB,OAAQ,eAChBiB,KAAM,WACNgE,KAAM,CACFhE,KAAM,WACN+D,SAAU,GACV6B,KAAM,WAEVnG,KAAM,CACFQ,WAAY,UACZC,WAAY,UACZC,UAAW,aAGjBrC,EAAApS,EAAA,oBAGmB,WAAd4F,EAAsB,CAAAwM,EAAApS,EAAA,SACzB2F,GAAOD,EAAKmN,IAAI,SAAA/S,GAAC,MAAK,CAC1BkU,MAAOlU,EAAE,GACTqa,OAAQ,EAAEra,EAAE,IAAKA,EAAE,IAAKA,EAAE,IAC1Bsa,SAAU,EAAEta,EAAE,IAAKA,EAAE,IACrBua,QAAS,EAAEva,EAAE,IACd,GAED+F,EAAI/B,EAAA,CACF,QAAW,kDACXqP,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B,KAAQ,CAAE,OAAU1N,IACpB,MAAS,CACT,IAAO,CACH,MAAS,QAAS,KAAQ,UAC1B,OAAU,CAAE,WAAc,EAAG,MAAS,GAAI,WAAc,UAG5D,QAAW,GACX,KAAQ,CACR,SAAY,CACR,EAAK,CACL,KAAQ,eACR,MAAS,CAAE,MAAQ,GACnB,MAAS,OAGb,MAAS,CACL,CAAE,KAAQ,CAAE,KAAQ,MAAO,MAAS,QAAU,SAAY,CAAE,EAAK,CAAE,MAAS,eAC5E,CAAE,KAAQ,CAAE,KAAQ,MAAO,MAAS,QAAU,SAAY,CAAE,EAAK,CAAE,MAAS,eAC5E,CAAE,KAAQ,CAAE,KAAQ,MAAO,MAAS,QAAU,SAAY,CAAE,EAAK,CAAE,MAAS,eAC5E,CAAE,KAAQ,CAAE,KAAQ,MAAO,MAAS,iBAAkB,KAAQ,IAAM,SAAY,CAAE,EAAK,CAAE,MAAS,iBAClG,CAAE,KAAQ,CAAE,KAAQ,MAAO,MAAS,YAAa,KAAQ,IAAM,SAAY,CAAE,EAAK,CAAE,MAAS,iBAC7F,CAAE,KAAQ,CAAE,KAAQ,OAAQ,MAAS,SAAW,SAAY,CAAE,EAAK,CAAE,MAAS,kBAGlF,QAAW,CAAE,MAAS,CAAE,EAAK,iBAAiB,SACpC,CAAE,KAAQ,CAAE,UAAa,GAAK,MAAS,CAAE,oBAAuB,KAC1EyM,EAAApS,EAAA,oBAGqB,QAAd4F,EAAmB,CAAAwM,EAAApS,EAAA,SAEtB2F,GAAOD,EACVlC,OAAO,SAAA1D,GAAC,OAAIA,EAAE,KAAOmW,OAAOnW,EAAE,GAAG,GACjC+S,IAAI,SAAA/S,GAAC,MAAK,CACT2Y,SAAU3Y,EAAE,GACZmB,OAAQnB,EAAE,GACX,GAEH+F,EAAO,CACL,QAAW,kDACX,YAAe,gCACf,KAAQ,CAAE,OAAUF,IACpB,KAAQ,CACN,KAAQ,UACR,OAAU,WAEZ,SAAY,CACV,EAAK,CAAE,MAAS,WAAY,KAAQ,WACpC,EAAK,CACH,MAAS,QACT,KAAQ,eACR,MAAS,CAAE,MAAQ,IAErB,MAAS,CACP,MAAS,WACT,KAAQ,UACR,OAAU,QAGdyM,EAAApS,EAAA,oBAGqB,YAAd4F,EAAuB,CAAAwM,EAAApS,EAAA,SACxBwI,GAAc7C,EAAKkN,IAAI,SAACC,EAAKgC,GAAK,MAAM,CAC1CnB,EAAGb,EAAIrN,EAAQ,KAAOqP,EAAQ,EAC9BrU,EAAG6U,WAAWxC,EAAIrN,EAAQ,MAAQ,EACrC,GAGKgD,GAAUD,GAAYqK,IAAI,SAAAvV,GAAC,OAAIA,EAAEmD,CAAC,GAClCiI,GAAOiM,KAAKC,IAAGlR,MAARiR,KAAIhS,EAAQ8F,KACnBE,GAAOgM,KAAKE,IAAGnR,MAARiR,KAAIhS,EAAQ8F,KAKnBI,IAJAtD,GAAQmD,GAAOC,IAIM,EACrBG,GAAWH,GAAOpD,GAAQ,EAG1BwD,GAAaP,GAAYrJ,OACzBmb,GAAe3F,KAAKC,IAAI,IAAKD,KAAKE,IAAI,IAAkB,GAAb9L,KAEjDlD,EAAO,CACH,QAAW,kDACX,YAAe,uDACf,MAASyU,GACT,OAAU,GACV,WAAc,QACd,OAAU,CACV,KAAQ,CAAE,OAAU,eACpB,KAAQ,CAAC,YAAe,aAExB,KAAQ,CAAE,OAAU9R,IACpB,SAAY,CACZ,EAAK,CACD,MAAS,IACT,KAAQ/C,EAAQ,GAAG8U,cAActD,SAAS,QAAU,WAAa,eACjE,MAAS,CAAC,MAAQ,EAAO,MAAQ,GACjC,KAAQ,CACR,MAASxR,EAAQ,GACjB,cAAiB,GACjB,cAAiB,GACjB,WAAc,UACd,WAAc,UACd,KAAQ,aAGZ,EAAK,CACD,KAAQ,eACR,MAAS,CAAC,OAAU,CAAC,EAAGoD,KACxB,KAAQ,CACR,MAASpD,EAAQ,GACjB,OAAU,OACV,cAAiB,GACjB,cAAiB,GACjB,WAAc,UACd,WAAc,UACd,KAAQ,WACR,UAAa,KAIjB,MAAS,CAET,CACI,UAAa,CACb,CAAC,UAAa,wBAAFwP,OAA0BnM,GAAQ,MAAAmM,OAAKpM,GAAU,MAAM,GAAM,UAEzE,KAAQ,CACR,KAAQ,OACR,MAAQ,EACR,QAAW,GACX,MAAS,UACT,YAAe,YAEf,SAAY,CACZ,EAAK,CAAC,MAAS,WAInB,CACI,UAAa,CACb,CAAC,UAAa,wBAAFoM,OAA0BnM,GAAQ,OAAAmM,OAAMpM,GAAU,MAAAoM,OAAKpM,GAAU,MAAM,GAAM,UAEzF,KAAQ,CACR,KAAQ,OACR,MAAQ,EACR,QAAW,GACX,MAAS,UACT,YAAe,YAEf,SAAY,CACZ,EAAK,CAAC,MAAS,WAInB,CACI,UAAa,CACb,CAAC,UAAa,oBAAFoM,OAAsBnM,GAAQ,OAAAmM,OAAmB,EAAbpM,GAAc,KAAK,GAAM,UAEzE,KAAQ,CACR,KAAQ,OACR,MAAQ,EACR,QAAW,GACX,MAAS,UACT,YAAe,YAEf,SAAY,CACZ,EAAK,CAAC,MAAS,WAInB,CACI,UAAa,CACb,CAAC,UAAa,cAAFoM,OAAgBnM,GAAQ,gBAAAmM,OAAepM,GAAU,MAAM,GAAM,WAEzE,KAAQ,CACR,KAAQ,OACR,MAAQ,EACR,QAAW,GACX,MAAS,UACT,YAAe,YAEf,SAAY,CACZ,EAAK,CAAC,MAAS,YAInB,CACI,UAAa,CACb,CAAC,UAAa,cAAFoM,OAAgBnM,GAAQ,iBAAAmM,OAAgBpM,GAAU,MAAAoM,OAAKpM,GAAU,MAAM,GAAM,WAEzF,KAAQ,CACR,KAAQ,OACR,MAAQ,EACR,QAAW,GACX,MAAS,UACT,YAAe,YAEf,SAAY,CACZ,EAAK,CAAC,MAAS,YAInB,CACI,UAAa,CACb,CAAC,UAAa,UAAFoM,OAAYnM,GAAQ,iBAAAmM,OAA6B,EAAbpM,GAAc,KAAK,GAAM,WAEzE,KAAQ,CACR,KAAQ,OACR,MAAQ,EACR,QAAW,GACX,MAAS,UACT,YAAe,YAEf,SAAY,CACZ,EAAK,CAAC,MAAS,cAIrBuJ,EAAApS,EAAA,oBAGmB,SAAd4F,EAAoB,CAAAwM,EAAApS,EAAA,SACrBiJ,GAAQ,IAAIwO,IAElB9R,EAAK9B,QAAQ,SAACiP,EAAK1T,GACf,IAAMob,EAAS1H,EAAIrN,EAAQ,KAAO,GAC5BgV,EAAQ3H,EAAIrN,EAAQ,KAAO,QAAJwP,OAAY7V,GACnC6B,EAAQwE,EAAQtG,QAAU,GAAKmW,WAAWxC,EAAIrN,EAAQ,MAAa,EAazE,GAVI+U,IAAWvR,GAAMyO,IAAI8C,IACzBvR,GAAM0O,IAAI6C,EAAQ,CACd5D,GAAI4D,EACJA,OAAQ,GACRpX,KAAMoX,EACNvZ,MAAO,IAKNgI,GAAMyO,IAAI+C,GAOR,CAEP,IAAMC,EAAezR,GAAMpL,IAAI4c,GAC/BC,EAAaF,OAASA,EACtBE,EAAazZ,MAAQA,CACrB,MAXAgI,GAAM0O,IAAI8C,EAAO,CACb7D,GAAI6D,EACJD,OAAQA,EACRpX,KAAMqX,EACNxZ,MAAOA,GAQf,GAGMiI,GAAWnH,MAAMe,KAAKmG,GAAMzD,UAG5B2D,GAAS,IAAI0P,IAAI3P,GAAS2J,IAAI,SAAAvV,GAAC,OAAIA,EAAEsZ,EAAE,IAC7C1N,GAASrF,QAAQ,SAAA8W,GACTA,EAAKH,SAAWrR,GAAOuO,IAAIiD,EAAKH,UACpCG,EAAKH,OAAS,GAElB,GAGMpR,GAAYF,GAAS/J,OACrBmb,GAAe3F,KAAKC,IAAI,IAAKD,KAAKE,IAAI,KAAkB,GAAZzL,KAC5C1B,GAAgBiN,KAAKC,IAAI,IAAKD,KAAKE,IAAI,KAAkB,GAAZzL,KAEnDvD,EAAO,CACH,QAAW,6CACX,YAAe,oCACf,MAASyU,GACT,OAAU5S,GACV,QAAW,GACX,WAAc,QACd,OAAU,CAAE,KAAQ,CAAE,OAAU,gBAEhC,QAAW,CACX,CACI,KAAQ,SACR,MAAS,QAEb,CACI,KAAQ,QACR,MAAS,aAIb,KAAQ,CACR,CACI,KAAQ,OACR,OAAUwB,GACV,UAAa,CACb,CACI,KAAQ,WACR,IAAO,KACP,UAAa,UAEjB,CACI,KAAQ,OACR,OAAU,CAAC,OAAU,UACrB,KAAQ,CAAC,CAAC,OAAU,eAAgB,CAAC,OAAU,gBAC/C,GAAM,CAAC,IAAK,IAAK,QAAS,eAIlC,CACI,KAAQ,QACR,OAAU,OACV,UAAa,CACb,CAAE,KAAQ,aACV,CACI,KAAQ,WACR,OAAU,aACV,MAAS,CAAC,OAAU,aAM5B,OAAU,CACV,CACI,KAAQ,QACR,KAAQ,UACR,MAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC7G,OAAU,CAAC,KAAQ,OAAQ,MAAS,UAExC,CACI,KAAQ,OACR,KAAQ,SACR,MAAS,CAAC,IAAK,KACf,OAAU,CAAC,KAAQ,OAAQ,MAAS,WAIxC,MAAS,CACT,CACI,KAAQ,OACR,KAAQ,CAAC,KAAQ,SACjB,OAAU,CACV,OAAU,CACN,KAAQ,CAAC,MAAS,QAClB,OAAU,CAAC,MAAS,WACpB,YAAe,CAAC,MAAS,GACzB,cAAiB,CAAC,MAAS,OAInC,CACI,KAAQ,SACR,KAAQ,CAAC,KAAQ,QACjB,OAAU,CACV,MAAS,CACL,OAAU,CAAC,MAAS,WACpB,YAAe,CAAC,MAAS,IAE7B,OAAU,CACN,EAAK,CAAC,MAAS,KACf,EAAK,CAAC,MAAS,KACf,KAAQ,CAAC,MAAS,OAAQ,MAAS,SACnC,KAAQ,CAAC,MAAS,QAAS,MAAS,SACpC,YAAe,CAAC,MAAS,IACzB,QAAW,CACX,OAAU,6GAGd,MAAS,CACL,YAAe,CAAC,MAAS,GACzB,YAAe,CAAC,MAAS,MAIjC,CACI,KAAQ,OACR,KAAQ,CAAC,KAAQ,QACjB,OAAU,CACV,MAAS,CACL,SAAY,CAAC,MAAS,IACtB,SAAY,CAAC,MAAS,UACtB,KAAQ,CAAC,MAAS,YAClB,WAAc,CAAC,MAAS,SAE5B,OAAU,CACN,EAAK,CAAC,MAAS,KACf,EAAK,CAAC,MAAS,KACf,KAAQ,CAAC,MAAS,QAClB,GAAM,CAAC,OAAU,6BACjB,MAAS,CAAC,OAAU,qCACpB,KAAQ,CAAC,MAAS,gBAK5BkJ,EAAApS,EAAA,oBAGmB,aAAd4F,EAAwB,CAAAwM,EAAApS,EAAA,SACzBiJ,GAAQ,IAAIwO,IAClB9R,EAAK9B,QAAQ,SAACiP,EAAK1T,GACf,IAAMob,EAAS1H,EAAIrN,EAAQ,KAAO,GAC5BgV,EAAQ3H,EAAIrN,EAAQ,KAAO,QAAJwP,OAAY7V,GACnC6B,EAAQwE,EAAQtG,QAAU,GAAKmW,WAAWxC,EAAIrN,EAAQ,MAAa,EAazE,GAVI+U,IAAWvR,GAAMyO,IAAI8C,IACzBvR,GAAM0O,IAAI6C,EAAQ,CACd5D,GAAI4D,EACJA,OAAQ,GACRpX,KAAMoX,EACNhH,KAAM,IAKLvK,GAAMyO,IAAI+C,GAOR,CAEP,IAAMC,EAAezR,GAAMpL,IAAI4c,GAC/BC,EAAaF,OAASA,EACtBE,EAAalH,KAAOvS,CACpB,MAXAgI,GAAM0O,IAAI8C,EAAO,CACb7D,GAAI6D,EACJD,OAAQA,EACRpX,KAAMqX,EACNjH,KAAMvS,GAQd,GAGMuI,GAAmBzH,MAAMe,KAAKmG,GAAMzD,UAGpC2D,GAAS,IAAI0P,IAAIrP,GAAiBqJ,IAAI,SAAAvV,GAAC,OAAIA,EAAEsZ,EAAE,IACrDpN,GAAiB3F,QAAQ,SAAA8W,GACjBA,EAAKH,SAAWrR,GAAOuO,IAAIiD,EAAKH,UACpCG,EAAKH,OAAS,GAElB,GAGMpR,GAAYI,GAAiBrK,OAC7BwK,GAAYgL,KAAKC,IAAI,IAAKD,KAAKE,IAAI,IAAiB,GAAZzL,GAAiB,MAE/DvD,EAAO,CACH,QAAW,6CACX,YAAe,sCACf,MAAS8D,GACT,OAAUA,GACV,QAAW,GACX,SAAY,OACZ,WAAc,QACd,OAAU,CAAE,KAAQ,CAAE,OAAU,gBAEhC,QAAW,CACX,CACI,KAAQ,UACR,OAAU,aAEd,CACI,KAAQ,UACR,OAAU,cAEd,CACI,KAAQ,cACR,OAAU,gCAId,KAAQ,CACR,CACI,KAAQ,OACR,OAAUH,GACV,UAAa,CACb,CACI,KAAQ,WACR,IAAO,KACP,UAAa,UAEjB,CACI,KAAQ,YACR,MAAS,OACT,KAAQ,CAAC,MAAS,OAAQ,MAAS,cACnC,KAAQ,CAAC,CAAC,OAAU,UAAW,CAAC,OAAU,gBAC1C,GAAM,CAAC,KAAM,KAAM,KAAM,KAAM,QAAS,gBAMhD,OAAU,CACV,CACI,KAAQ,QACR,KAAQ,UACR,OAAU,CAAC,KAAQ,OAAQ,MAAS,SACpC,MAAS,CACT,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,YAGhD,CACI,KAAQ,UACR,KAAQ,SACR,OAAU,CAAC,KAAQ,OAAQ,MAAS,SACpC,MAAS,CAAC,GAAK,MAInB,MAAS,CACT,CACI,KAAQ,MACR,KAAQ,CAAC,KAAQ,QACjB,OAAU,CACV,MAAS,CACL,EAAK,CAAC,OAAU,WAChB,EAAK,CAAC,OAAU,WAChB,OAAU,CAAC,MAAS,SACpB,YAAe,CAAC,MAAS,IAE7B,OAAU,CACN,WAAc,CAAC,MAAS,MACxB,SAAY,CAAC,MAAS,MACtB,YAAe,CAAC,MAAS,MACzB,YAAe,CAAC,MAAS,MACzB,KAAQ,CAAC,MAAS,QAAS,MAAS,SACpC,YAAe,CAAC,MAAS,UAAW,MAAS,YAIrD,CACI,KAAQ,OACR,KAAQ,CAAC,KAAQ,QACjB,OAAU,CACV,MAAS,CACL,EAAK,CAAC,OAAU,WAChB,EAAK,CAAC,OAAU,WAChB,OAAU,CAAC,OAAU,6BACrB,MAAS,CAAC,OAAU,6BACpB,KAAQ,CAAC,MAAS,WAClB,KAAQ,CAAC,MAAS,YAClB,SAAY,CAAC,MAAS,IACtB,WAAc,CAAC,MAAS,QACxB,MAAS,CAAC,MAAS,UACnB,SAAY,CAAC,MAAS,WAE1B,OAAU,CACN,KAAQ,CACR,OAAU,+EAEV,QAAW,CACX,OAAU,0EAMpB4I,EAAApS,EAAA,oBAGmB,UAAd4F,EAAqB,CAAAwM,EAAApS,EAAA,SACtB4J,GAAY,GACZC,GAAapE,EAAQvC,MAAM,GAEjCyC,EAAK9B,QAAQ,SAACiP,EAAK8H,GACf,IAAMC,EAAa/H,EAAIrN,EAAQ,KAAO,UAAJwP,OAAc2F,EAAc,GAE9D/Q,GAAWhG,QAAQ,SAAAiX,GACnB,IAAM7Z,EAAQqU,WAAWxC,EAAIgI,KAAe,EAC5ClR,GAAUzH,KAAK,CACX4Y,OAAQF,EACRC,UAAWA,EACX7Z,MAAOA,EACPwX,SAAUmC,GAEd,EACJ,GAGM9Q,GAAgBnH,EAAO,IAAIkW,IAAIjP,GAAUiJ,IAAI,SAAAvV,GAAC,OAAIA,EAAEwd,SAAS,KAEnEjV,EAAO,CACH,QAAW,6CACX,YAAe,mCACf,MAAS,IACT,OAAU,IACV,QAAW,GACX,SAAY,CAAC,KAAQ,OAAQ,SAAY,WACzC,WAAc,QACd,OAAU,CAAE,KAAQ,CAAE,OAAU,gBAEhC,QAAW,CACX,CAAC,KAAQ,SAAU,OAAU,cAG7B,KAAQ,CACR,CACI,KAAQ,QACR,OAAU+D,IAEd,CACI,KAAQ,aACR,OAAUE,GAAiB+I,IAAI,SAAAvV,GAAC,MAAK,CAACwd,UAAWxd,EAAE,KAIvD,OAAU,CACV,CACI,KAAQ,UACR,KAAQ,QACR,MAAS,CAAC,OAAU,aACpB,QAAW,GACX,OAAUwM,IAEd,CACI,KAAQ,SACR,KAAQ,SACR,MAAS,CAAC,OAAU,eACpB,MAAQ,EACR,MAAQ,EACR,OAAU,CAAC,KAAQ,QAAS,MAAS,SACrC,UAAa,GAEjB,CACI,KAAQ,QACR,KAAQ,UACR,OAAU,CAAC,KAAQ,QAAS,MAAS,YACrC,MAAS,CACT,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,aAKhD,OAAU,CACV,MAAS,CACL,EAAK,CAAC,OAAU,UAChB,EAAK,CAAC,OAAU,YAIpB,MAAS,CACT,CACI,KAAQ,QACR,KAAQ,aACR,OAAU,EACV,KAAQ,CACR,MAAS,CAAC,KAAQ,QAAS,KAAQ,QAAS,QAAW,CAAC,WAAY,YAEpE,MAAS,CACT,CACI,KAAQ,OACR,KAAQ,gBACR,KAAQ,CAAC,KAAQ,SACjB,OAAU,CACV,MAAS,CACL,YAAe,CAAC,MAAS,iBACzB,EAAK,CAAC,OAAU,yEAChB,EAAK,CAAC,OAAU,yEAChB,OAAU,CAAC,MAAS,QAAS,MAAS,YACtC,YAAe,CAAC,MAAS,GACzB,KAAQ,CAAC,MAAS,QAAS,MAAS,YACpC,YAAe,CAAC,MAAS,IACzB,cAAiB,CAAC,MAAS,OAInC,CACI,KAAQ,SACR,KAAQ,kBACR,KAAQ,CAAC,KAAQ,SACjB,OAAU,CACV,MAAS,CACL,EAAK,CAAC,OAAU,yEAChB,EAAK,CAAC,OAAU,yEAChB,KAAQ,CAAC,MAAS,IAClB,KAAQ,CAAC,MAAS,QAAS,MAAS,YACpC,OAAU,CAAC,MAAS,SACpB,YAAe,CAAC,MAAS,QAMrC,CACI,KAAQ,OACR,KAAQ,cACR,KAAQ,CAAC,KAAQ,cACjB,OAAU,EACV,OAAU,CACV,MAAS,CACL,EAAK,CAAC,MAAS,GACf,EAAK,CAAC,MAAS,GACf,GAAM,CAAC,OAAU,mDACjB,GAAM,CAAC,OAAU,mDACjB,OAAU,CAAC,MAAS,WACpB,YAAe,CAAC,MAAS,MAIjC,CACI,KAAQ,OACR,KAAQ,kBACR,KAAQ,CAAC,KAAQ,cACjB,OAAU,EACV,OAAU,CACV,MAAS,CACL,EAAK,CAAC,OAAU,0DAChB,EAAK,CAAC,OAAU,0DAChB,KAAQ,CAAC,MAAS,aAClB,MAAS,CACT,CACI,KAAQ,kDACR,MAAS,SAEb,CACI,MAAS,SAGb,SAAY,CACZ,CACI,KAAQ,wCACR,MAAS,OAEb,CACI,KAAQ,yCACR,MAAS,UAEb,CACI,MAAS,WAGb,KAAQ,CAAC,MAAS,WAClB,WAAc,CAAC,MAAS,QACxB,KAAQ,CAAC,MAAS,YAClB,SAAY,CAAC,MAAS,OAI9B,CACI,KAAQ,OACR,KAAQ,aACR,KAAQ,CAAC,KAAQ,eACjB,OAAU,CACV,MAAS,CACL,YAAe,CAAC,MAAS,iBACzB,EAAK,CAAC,MAAS,MACf,EAAK,CAAC,MAAS,MACf,OAAU,CAAC,MAAS,WACpB,YAAe,CAAC,MAAS,GACzB,cAAiB,CAAC,MAAS,SAKrCsI,EAAApS,EAAA,oBAGmB,cAAd4F,EAAyB,CAAAwM,EAAApS,EAAA,UAE1B+J,GAAapH,EAAOgD,IACRxG,OAAS,IACvB4K,GAAcA,GAAc5K,OAAS,GAAEwE,EAAAA,EAAA,GACpCoG,GAAcA,GAAc5K,OAAS,IAAE,GAAA2E,EAAA,GACzC2B,EAAQ,GAAK,KAKZuE,GAAgBrE,EAAKxG,OACrBmb,GAAe3F,KAAKC,IAAI,IAAKD,KAAKE,IAAI,KAAsB,GAAhB7K,KAC5CE,GAAYyK,KAAKC,IAAGlR,MAARiR,KAAIhS,EAAQgD,EAAKkN,IAAI,SAAAvV,GAAC,OAAIqX,KAAKqG,IAAI1d,EAAEmI,EAAQ,IAAI,KAC7DiC,GAAgBiN,KAAKC,IAAI,IAAKD,KAAKE,IAAI,IAAK3K,GAAY,IAAM,MAEpErE,EAAI/B,EAAA,CACAmP,QAAS,kDACTC,YAAa,0CACbC,WAAY,QACZxN,KAAM,CAAEH,OAAQuE,IAChBqJ,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1ByE,MAAOwC,GACPvC,OAAQrQ,GACRiS,UAAW,CACX,CAAE,OAAU,CAAC,CAAE,GAAM,MAAO,MAASlU,EAAQ,GAAI,GAAM,SACvD,CAAE,OAAU,CAAC,CAAE,GAAM,OAAQ,MAASA,EAAQ,GAAI,GAAM,UACxD,CACI,UAAa,+BAAFwP,OAAiCxP,EAAQ,GAAE,iBACtD,GAAM,QAEV,CAEI,UAAa,SAAFwP,OAAWxP,EAAQ,GAAE,wCAAAwP,OAAuCxP,EAAQ,IAC/E,GAAM,gBAEV,CACI,UAAa,SAAFwP,OAAWxP,EAAQ,GAAE,oCAAAwP,OAAmCxP,EAAQ,IAC3E,GAAM,UAEV,CACI,UAAa,SAAFwP,OAAWxP,EAAQ,GAAE,wBAAAwP,OAAuBxP,EAAQ,GAAE,+CACjE,GAAM,UAEV,CACI,UAAa,SAAFwP,OAAWxP,EAAQ,GAAE,qCAAAwP,OAAoCxP,EAAQ,GAAE,6BAAAwP,OAA4BxP,EAAQ,IAClH,GAAM,eAEV,CAAE,UAAa,uCAAwC,GAAM,UAG7D,CACI,OAAU,CAAC,CAAE,GAAM,OAAQ,GAAM,gBACjC,MAAS,CAAC,KAAM,MAChB,QAAW,CAACA,EAAQ,KAIxB,CACI,UAAa,2BAAFwP,OACHxP,EAAQ,GAAE,6iBAYlB,GAAM,cAGViO,SAAU,CACVC,EAAG,CACCC,MAAOnO,EAAQ,GACf8N,KAAM,UACNsE,KAAM,KACN9D,KAAM,CAAE0B,YAAa,GAAIzB,MAAO,MAChCH,MAAO,CAAElM,aAAc,IAAMC,aAAc,QAG/CoQ,MAAO,CACP,CACI1E,KAAM,CAAEC,KAAM,MAAOC,KAAM,IAC3BE,SAAU,CACVjT,EAAG,CAAEmT,MAAO,eAAgBL,KAAM,eAAgBS,MAAO,MACzDiH,GAAI,CAAErH,MAAO,OACbO,MAAO,CAAEP,MAAO,YAAaL,KAAM,UAAWM,MAAO,QAGzD,CACIP,KAAM,CAAEC,KAAM,OAAQqG,WAAY,OAAQ9Q,SAAU,UACpD4K,SAAU,CACVjT,EAAG,CAAEmT,MAAO,SAAUL,KAAM,gBAC5B+E,KAAM,CAAE1E,MAAO,cAAeL,KAAM,WACpCY,MAAO,CACH+G,UAAW,CACX,CAAE7b,KAAM,SAAF4V,OAAWxP,EAAQ,GAAE,eAAexE,MAAO,YAEjDA,MAAO,aAId,SACO,CAAEqX,KAAM,CAAEsB,WAAY,OAAQzF,MAAO,aAC/C/B,EAAApS,EAAA,oBAGmB,UAAd4F,EAAqB,CAAAwM,EAAApS,EAAA,cAC1ByF,EAAQtG,OAAS,GAAC,CAAAiT,EAAApS,EAAA,SACqD,OAAzE2S,QAAQC,KAAK,4DAA4DR,EAAAxR,EAAA,WAKrEwJ,GAAWzE,EAAK,GAChB0E,GAAYiL,WAAWlL,GAAS3E,EAAQ,MAAQ,EAChD6E,GAAWgL,WAAWlL,GAAS3E,EAAQ,MAAQ,IAGrDI,EAAO,CACL,QAAW,6CACX,YAAe,mCACf,MAAS,IACT,OAAU,IACV,WAAc,QACd,OAAU,CAAE,KAAQ,CAAE,OAAU,gBAEhC,QAAW,CACT,CAAC,KAAQ,UAAW,OAAU,aAC9B,CAAC,KAAQ,UAAW,OAAU,eAC9B,CAAC,KAAQ,cAAe,OAAU,+BAClC,CAAC,KAAQ,cAAe,OAAU,oCAClC,CAAC,KAAQ,YAAa,MAASwE,IAC/B,CAAC,KAAQ,WAAY,MAhBR,GAiBb,CAAC,KAAQ,WAAY,MAASC,IAC9B,CAAC,KAAQ,YAAa,OAAU,2CAChC,CAAC,KAAQ,aAAc,OAAU,6BACjC,CAAC,KAAQ,kBAAmB,MAAS,WACrC,CAAC,KAAQ,YAAa,MAAS,WAC/B,CAAC,KAAQ,cAAe,MAAS,WACjC,CAAC,KAAQ,aAAc,OAAU,gBAGnC,OAAU,CACR,CACE,KAAQ,aACR,KAAQ,SACR,OAAU,CAAC,CAAC,OAAU,YAAa,CAAC,OAAU,aAC9C,MAAS,CAAC,CAAC,OAAU,SAAU,CAAC,OAAU,UAE5C,CACE,KAAQ,cACR,KAAQ,SACR,OAAU,CAAC,CAAC,OAAU,YAAa,CAAC,OAAU,aAC9C,MAAS,EAAE,GAAI,MAInB,MAAS,CACP,CACE,KAAQ,MACR,KAAQ,QACR,OAAU,CACR,MAAS,CACP,EAAK,CAAC,OAAU,WAChB,EAAK,CAAC,OAAU,WAChB,WAAc,CAAC,OAAU,SACzB,SAAY,CAAC,OAAU,QACvB,YAAe,CAAC,OAAU,eAC1B,YAAe,CAAC,OAAU,eAC1B,KAAQ,CAAC,OAAU,sBAIzB,CACE,KAAQ,MACR,OAAU,CACR,MAAS,CAAC,WAAc,CAAC,OAAU,UACnC,OAAU,CACR,EAAK,CAAC,OAAU,WAChB,EAAK,CAAC,OAAU,WAChB,YAAe,CAAC,OAAU,eAC1B,YAAe,CAAC,OAAU,eAC1B,SAAY,CAAC,MAAS,aAAc,OAAU,aAC9C,KAAQ,CAAC,OAAU,gBAIzB,CACE,KAAQ,OACR,YAAe,qCACf,OAAU,CACR,MAAS,CACP,EAAK,CAAC,OAAU,WAChB,EAAK,CAAC,OAAU,6BAChB,SAAY,CAAC,MAAS,UACtB,MAAS,CAAC,MAAS,UACnB,SAAY,CAAC,OAAU,kBACvB,KAAQ,CAAC,MAAS,YAClB,WAAc,CAAC,MAAS,SAE1B,OAAU,CACR,KAAQ,CAAC,OAAU,wEACnB,KAAQ,CAAC,OAAU,gBAIzB,CACE,KAAQ,SACR,KAAQ,SACR,OAAU,CACR,MAAS,CAAC,EAAK,CAAC,OAAU,WAAY,EAAK,CAAC,OAAU,YACtD,OAAU,CACR,MAAS,CACP,OAAU,oEAEZ,MAAS,CAAC,OAAU,YAAa,MAAS,eAC1C,KAAQ,CAAC,OAAU,KACnB,OAAU,CAAC,OAAU,eACrB,KAAQ,CAAC,OAAU,kBAIzB,CACE,KAAQ,SACR,YAAe,gBACf,OAAU,CACR,MAAS,CACP,EAAK,CAAC,OAAU,WAChB,EAAK,CAAC,OAAU,WAChB,MAAS,CAAC,MAAS,UACnB,KAAQ,CAAC,OAAU,0BACnB,KAAQ,CAAC,OAAU,eACnB,OAAU,CAAC,MAAS,SACpB,YAAe,CAAC,MAAS,QAKjC8H,EAAApS,EAAA,oBAGqB,QAAd4F,EAAmB,CAAAwM,EAAApS,EAAA,SAC1B6F,EAAO,CACPoN,QAAS,kDACTE,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1BH,YAAa,iCACbvN,KAAM,CAAEH,OAAQG,GAChB2N,KAAM,CAAEC,KAAM,MAAO4H,YAAa,KAClCzH,SAAU,CACR0H,MAAO,CAAExH,MAAOnO,EAAQ,GAAI8N,KAAM,gBAClCY,MAAO,CAAEP,MAAOnO,EAAQ,GAAI8N,KAAM,aAElCnB,EAAApS,EAAA,oBAGmB,UAAd4F,EAAqB,CAAAwM,EAAApS,EAAA,cACxByF,EAAQtG,OAAS,GAAC,CAAAiT,EAAApS,EAAA,eACZ,IAAIV,MAAM,mDAAkD,QAImB,IAAhEqG,EAAK0V,KAAK,SAAAvI,GAAG,OAAImD,MAAMnD,EAAIrN,EAAQ,MAAQqN,EAAIrN,EAAQ,KAAO,CAAC,GAClE,CAAF2M,EAAApS,EAAA,eACV,IAAIV,MAAM,+CAA8C,QAIlEuG,EAAI/B,EAAA,CACAmP,QAAS,kDACTE,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1BH,YAAa,mCACbvN,KAAM,CAAEH,OAAQG,GAChB2N,KAAM,CACNC,KAAM,MACNrG,YAAa,GACbiO,YAAa,IACb1H,SAAS,EACTJ,OAAQ,QACRmC,YAAa,GAEb9B,SAAU,CACV0H,MAAO,CACHxH,MAAOnO,EAAQ,GACf8N,KAAM,eACNM,MAAO,CAAEN,KAAM,SAAUhO,MAAO,CAAC,EAAG,QAExC4O,MAAO,CACHP,MAAOnO,EAAQ,GACf8N,KAAM,UACNM,MAAO,CAAE6B,OAAQ,cACjBtB,OAAQ,CACRJ,MAAOvO,EAAQ,GACfyO,cAAe,GACfD,cAAe,GACfqH,OAAQ,UAGZ7H,QAAS,CACL,CAAEG,MAAOnO,EAAQ,GAAI8N,KAAM,UAAWS,MAAO,YAC7C,CAAEJ,MAAOnO,EAAQ,GAAI8N,KAAM,eAAgBS,MAAO,QAASiE,OAAQ,WAEtE,SACO,CACR3D,KAAM,WACNF,OAAQ,CACJI,WAAY,UACZD,WAAY,aAGlBnC,EAAApS,EAAA,oBAGmB,cAAd4F,EAAyB,CAAAwM,EAAApS,EAAA,SAE1BuK,GAAc7E,EACjBlC,OAAO,SAAA1D,GAAC,OAAKmW,OAAOnW,EAAE,GAAG,GACzB+S,IAAI,SAAA/S,GAAC,MAAK,CAAEmB,OAAQnB,EAAE,GAAI,GAGvB0F,GAAS+E,GAAYsI,IAAI,SAAAvV,GAAC,OAAIA,EAAE2D,KAAK,GACrCwJ,GAASkK,KAAKE,IAAGnR,MAARiR,KAAIhS,EAAQ6C,KACrBkF,GAASiK,KAAKC,IAAGlR,MAARiR,KAAIhS,EAAQ6C,KAKrBmF,IAJQD,GAASD,IAGN,GAEXG,GAAU+J,KAAK4G,MAAM9Q,GAASE,IAAYA,GAC1CE,GAAU8J,KAAK6G,KAAK9Q,GAASC,IAAYA,GAE/C9E,EAAI/B,EAAA,CACF,QAAW,kDACX,YAAe,iCACf,WAAc,QACd,OAAU,CAAE,KAAQ,CAAE,OAAU,gBAChC,KAAQ,CAAE,OAAUyG,IACpB,KAAQ,CACN,KAAQ,MACR,SAAW,EACX,OAAU,QACV,YAAe,GAEjB,SAAY,CACV,EAAK,CACH,MAAS,QACT,IAAO,CACL,OAAU,CAACK,GAASC,IACpB,KAAQF,GACR,MAAQ,GAEV,KAAQ,eACR,KAAQ,CACN,MAAS,QACT,cAAiB,GACjB,cAAiB,GACjB,WAAc,UACd,WAAc,WAEhB,MAAS,CACP,OAAU,CAACC,GAASC,IACpB,MAAS,QACT,aAAgB,IAChB,aAAgB,MAGpB,EAAK,CACH,UAAa,QACb,KAAQ,eACR,KAAQ,CACN,MAAS,QACT,cAAiB,GACjB,cAAiB,GACjB,WAAc,UACd,WAAc,UACd,UAAa,YAGjB,MAAS,CACP,MAAS,aAEZ,SACS,CACR,KAAQ,WACR,KAAQ,CACN,WAAc,UACd,WAAc,UACd,UAAa,aAGjBuH,EAAApS,EAAA,oBAGmB,YAAd4F,EAAuB,CAAAwM,EAAApS,EAAA,cAC1ByF,EAAQtG,OAAS,GAAC,CAAAiT,EAAApS,EAAA,SAC6C,OAAjE2S,QAAQC,KAAK,oDAAoDR,EAAAxR,EAAA,WAKnEiF,EAAI/B,EAAA,CACFmP,QAAS,kDACTC,YAAa,oCACbC,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1ByE,MAAO,IACPC,OAAQ,IACRpS,KAAM,CAAEH,OAAQG,GAChBgU,UAAW,CAAC,CACV8B,QAAShW,EAAQ,GACjBiW,UAAW,KAEbpI,KAAM,OACNI,SAAU,CACRC,EAAG,CACDC,MAAO,QACPI,MAAOvO,EAAQ,GACf8N,KAAM,eACNQ,KAAM,CACJE,cAAe,GACfC,cAAe,GACfK,WAAY,UACZC,WAAY,UACZC,UAAW,YAGfhU,EAAG,CACDmT,MAAO,UACPL,KAAM,eACNS,MAAO,UACPD,KAAM,CACJE,cAAe,GACfC,cAAe,GACfK,WAAY,UACZC,WAAY,UACZC,UAAW,YAGfN,MAAO,CACLlT,MAAO,WAETwS,QAAS,CACP,CAAEG,MAAO,QAASL,KAAM,eAAgBS,MAAOvO,EAAQ,GAAIwS,OAAQ,OACnE,CAAErE,MAAO,UAAWL,KAAM,eAAgBS,MAAO,UAAWiE,OAAQ,UAEvE,SACO,CACN3D,KAAM,WACNP,KAAM,CACJQ,WAAY,UACZC,WAAY,UACZC,UAAW,aAGfrC,EAAApS,EAAA,oBAGmB,gBAAd4F,EAA2B,CAAAwM,EAAApS,EAAA,SAuCd,GArCX6G,GAAT,SAA2B+O,GACzB,MAAsB,iBAAXA,EACF,IAAIC,KAAKlB,KAAKmB,MAAyB,OAAlBF,EAAS,OAAiB,MAEjD,IAAIC,KAAKD,EAClB,EAkC+B,KA/BzB7K,GAAkBpF,EACrBkN,IAAI,SAACC,EAAKgC,GAET,IAAKhC,EAAIrN,EAAQ,KACM,MAAnBqN,EAAIrN,EAAQ,KAAmC,KAApBqN,EAAIrN,EAAQ,KACpB,MAAnBqN,EAAIrN,EAAQ,KAAmC,KAApBqN,EAAIrN,EAAQ,KACpB,MAAnBqN,EAAIrN,EAAQ,KAAmC,KAApBqN,EAAIrN,EAAQ,KACpB,MAAnBqN,EAAIrN,EAAQ,KAAmC,KAApBqN,EAAIrN,EAAQ,IACzC,OAAO,KAGT,IAAMsQ,EAAOlP,GAAkBiM,EAAIrN,EAAQ,KACrCkW,EAAOrG,WAAWxC,EAAIrN,EAAQ,KAC9BmW,EAAOtG,WAAWxC,EAAIrN,EAAQ,KAC9BoW,EAAMvG,WAAWxC,EAAIrN,EAAQ,KAC7BqW,EAAQxG,WAAWxC,EAAIrN,EAAQ,KAErC,OAAIwQ,MAAMF,EAAKG,YAAcD,MAAM0F,IAAS1F,MAAM2F,IAAS3F,MAAM4F,IAAQ5F,MAAM6F,GACtE,KAGF,CACL/F,KAAMA,EAAKI,cACXwF,KAAMA,EACNC,KAAMA,EACNC,IAAKA,EACLC,MAAOA,EAEX,GACCtY,OAAO4S,UAEUjX,OAAY,CAAAiT,EAAApS,EAAA,SACkB,OAAhD2S,QAAQC,KAAK,mCAAmCR,EAAAxR,EAAA,WAK5CmI,GAAagC,GAAgB5L,OAI7Bmb,GAAe3F,KAAKC,IAHT,IAGuBD,KAAKE,IAF5B,KACK,GACqC9L,KAGrDmC,GAAgBH,GAAgB8H,IAAI,SAAAvV,GAAC,OAAAqG,EAAAA,EAAA,GACtCrG,GAAC,IACJye,YAAa,IAAIlG,KAAKvY,EAAEyY,MAAMiG,mBAAmB,QAAS,CACxDC,MAAOlT,GAAa,GAAK,UAAY,QACrCmT,IAAK,UACLC,KAAMpT,GAAa,SAAM9L,EAAY,aACrC,GAGJ4I,EAAI/B,EAAA,CACF,QAAW,kDACX,MAASwW,GACT,OAAU,IACV,YAAe,4CACf,WAAc,QACd,QAAW,CAAC,KAAQ,GAAI,MAAS,GAAI,IAAO,GAAI,OAAU,IAC1D,OAAU,CAAE,KAAQ,CAAE,OAAU,gBAChC,KAAQ,CAAE,OAAUpP,IACpB,SAAY,CACV,EAAK,CACH,MAAS,cACT,KAAQ,UACR,MAAS,OACT,KAAQ,CACN,WAAcnC,GAAa,IAAM,GAAK,EACtC,cAAiB,GACjB,cAAiB,GACjB,WAAc,UACd,WAAc,UACd,KAAQ,WACR,WAAc,IACd,cAAgB,EAChB,aAAgB,EAChB,aAAgB,GAElB,MAAS,CACP,KAAQ,OACR,aAAgB,GAChB,aAAgB,MAGpB,EAAK,CACH,KAAQ,eACR,MAAS,CAAE,MAAQ,GACnB,KAAQ,CACN,MAAS,QACT,cAAiB,GACjB,cAAiB,GACjB,WAAc,UACd,WAAc,UACd,KAAQ,WACR,MAAQ,EACR,UAAa,UACb,aAAgB,EAChB,aAAgB,IAGpB,MAAS,CACP,UAAa,CACX,KAAQ,2BACR,MAAS,WAEX,MAAS,YAGb,MAAS,CACP,CACE,KAAQ,CACN,KAAQ,OACR,SAAW,EACX,YAAe,GAEjB,SAAY,CACV,EAAK,CAAE,MAAS,OAChB,GAAM,CAAE,MAAS,QACjB,QAAW,CACT,CAAE,MAAS,OAAQ,KAAQ,WAAY,MAAS,OAAQ,OAAU,YAClE,CAAE,MAAS,OAAQ,KAAQ,eAAgB,MAAS,OAAQ,OAAU,OACtE,CAAE,MAAS,OAAQ,KAAQ,eAAgB,MAAS,OAAQ,OAAU,OACtE,CAAE,MAAS,MAAO,KAAQ,eAAgB,MAAS,MAAO,OAAU,OACpE,CAAE,MAAS,QAAS,KAAQ,eAAgB,MAAS,QAAS,OAAU,UAI9E,CACE,KAAQ,CACN,KAAQ,MACR,SAAW,EACX,OAAU,QACV,YAAe,IAEjB,SAAY,CACV,EAAK,CAAE,MAAS,QAChB,GAAM,CAAE,MAAS,SACjB,QAAW,CACT,CAAE,MAAS,OAAQ,KAAQ,WAAY,MAAS,OAAQ,OAAU,YAClE,CAAE,MAAS,OAAQ,KAAQ,eAAgB,MAAS,OAAQ,OAAU,OACtE,CAAE,MAAS,OAAQ,KAAQ,eAAgB,MAAS,OAAQ,OAAU,OACtE,CAAE,MAAS,MAAO,KAAQ,eAAgB,MAAS,MAAO,OAAU,OACpE,CAAE,MAAS,QAAS,KAAQ,eAAgB,MAAS,QAAS,OAAU,YAI/E,SACS,CACR,KAAQ,WACR,KAAQ,CACN,WAAc,UACd,WAAc,UACd,UAAa,aAGjBqJ,EAAApS,EAAA,oBAGmB,QAAd4F,EAAmB,CAAAwM,EAAApS,EAAA,SAEtBmL,GAAU,CACdflC,OAAO,SAAA1D,GAAC,OAAIA,EAAE,KAAOmW,OAAOnW,EAAE,GAAG,GACjC+S,IAAI,SAAA/S,GACH,IAAMsc,GAAOtc,EAAE,IAAM,IAAIf,cAAcuY,OAEvC,MAAO,CACLV,GAFYzL,GAAQiR,GAGpBA,IAAKA,EACLC,MAAOvc,EAAE,GAEb,GACC0D,OAAO,SAAAlG,GAAC,OAAIA,EAAEsZ,EAAE,GAEnB/Q,EAAO,CACLoN,QAAS,kDACT6E,MAAO,IACPC,OAAQ,IACRpS,KAAM,CACJ2W,IAAK,iEACLrE,OAAQ,CAAE1E,KAAM,WAAYgJ,QAAS,cAEvC5C,UAAW,CACT,CACE6C,OAAQ,KACR1Z,KAAM,CACJ6C,KAAM,CAAEH,OAAQ4F,IAChB5N,IAAK,KACLif,OAAQ,CAAC,OAAQ,UAIvBC,WAAY,CAAEnJ,KAAM,cACpBD,KAAM,CAAEC,KAAM,WAAYF,OAAQ,QAASmC,YAAa,IACxD9B,SAAU,CACRS,MAAO,CACLP,MAAO,OACPL,KAAM,eACNM,MAAO,CAAE6B,OAAQ,UAEnBjC,QAAS,CACP,CAAEG,MAAO,MAAOL,KAAM,UAAWS,MAAO,kBACxC,CAAEJ,MAAO,OAAQL,KAAM,eAAgBS,MAAO,YAGlD5B,EAAApS,EAAA,oBAGqB,YAAd4F,EAAuB,CAAAwM,EAAApS,EAAA,cAG1ByF,EAAQtG,OAAS,GAAC,CAAAiT,EAAApS,EAAA,SACgF,OAApG2S,QAAQgK,MAAM,sFAAsFvK,EAAAxR,EAAA,WAQrG,GAE2B,KALtByK,GAAe1F,EAAKnC,OAAO,SAAAsP,GAAG,OACd,OAApBA,EAAIrN,EAAQ,UAAoCxI,IAApB6V,EAAIrN,EAAQ,KAAyC,KAApBqN,EAAIrN,EAAQ,KACrD,OAApBqN,EAAIrN,EAAQ,UAAoCxI,IAApB6V,EAAIrN,EAAQ,KAAyC,KAApBqN,EAAIrN,EAAQ,GAAU,IAGpEtG,OAAY,CAAAiT,EAAApS,EAAA,SAC4B,OAAvD2S,QAAQgK,MAAM,yCAAyCvK,EAAAxR,EAAA,WAKnD0K,GAAUD,GAAawH,IAAI,SAAAvV,GAAC,OAAIgY,WAAWhY,EAAEmI,EAAQ,IAAI,GACzDgD,GAAU4C,GAAawH,IAAI,SAAAvV,GAAC,OAAIgY,WAAWhY,EAAEmI,EAAQ,IAAI,GACzD+F,GAASmJ,KAAKC,IAAGlR,MAARiR,KAAIhS,EAAQ2I,KAAWqJ,KAAKE,IAAGnR,MAARiR,KAAIhS,EAAQ2I,KAC5CG,GAASkJ,KAAKC,IAAGlR,MAARiR,KAAIhS,EAAQ8F,KAAWkM,KAAKE,IAAGnR,MAARiR,KAAIhS,EAAQ8F,KAE5C6R,GAAe3F,KAAKC,IAAI,IAAKD,KAAKE,IAAI,IAAc,GAATrJ,KAC3C9D,GAAgBiN,KAAKC,IAAI,IAAKD,KAAKE,IAAI,IAAc,GAATpJ,KAG5CG,GAAcnG,EAAQtG,QAAU,EAEtC0G,EAAO,CACL,QAAW,6CACX,YAAe,+DACf,MAASyU,GACT,OAAU5S,GACV,QAAW,EACX,SAAY,MACZ,WAAc,QAEd,QAAW,CACT,CACE,KAAQ,YACR,OAAU,EACV,YAAe,kDAEjB,CACE,KAAQ,UACR,MAAS,SACT,YAAe,iCAEjB,CACE,KAAQ,SACR,OAAS,EACT,YAAe,0BAInB,KAAQ,CACN,CACE,KAAQ,SACR,OAAU2D,GACV,UAAa,CACX,CACE,KAAQ,SACR,KAAQ,UAAF4J,OAAYxP,EAAQ,GAAE,yBAAAwP,OAAwBxP,EAAQ,GAAE,iBAIpE,CACE,KAAQ,UACR,OAAU,SACV,UAAa,CAAA9B,EAAAA,EAAA,CAET,KAAQ,SACJiI,IAAe,CAAE,QAAW,CAACnG,EAAQ,MAAK,IAC9C,KAAQ,CAAC,CAAC,OAAU,SAAU,CAAC,OAAU,WACzC,EAAK,CAAC,KAAQ,qBAAFwP,OAAuBxP,EAAQ,GAAE,QAC7C,EAAK,CAAC,KAAQ,qBAAFwP,OAAuBxP,EAAQ,GAAE,QAC7C,UAAa,CAAC,OAAU,0BACxB,OAAU,CAAC,OAAU,cAI3B,CACE,KAAQ,WACR,OAAU,UACV,UAAa,CACX,CACE,KAAQ,aACR,MAAS,OACT,QAAW,CAAC,OAAU,WACtB,OAAU,MAMlB,OAAU,CACR,CACE,KAAQ,IACR,KAAQ,SACR,OAAS,EACT,MAAQ,EACR,MAAQ,EACR,OAAU,CAAC,KAAQ,SAAU,MAASA,EAAQ,IAC9C,MAAS,SAEX,CACE,KAAQ,IACR,KAAQ,SACR,OAAS,EACT,MAAQ,EACR,MAAQ,EACR,OAAU,CAAC,KAAQ,SAAU,MAASA,EAAQ,IAC9C,MAAS,WACVwP,OAAAtS,EACGiJ,GAAc,CAAC,CACjB,KAAQ,QACR,KAAQ,UACR,OAAU,CACR,KAAQ,SACR,MAASnG,EAAQ,GACjB,KAAQ,CAAC,MAAS,eAEpB,MAAS,aACN,CAAC,CACJ,KAAQ,QACR,KAAQ,UACR,OAAU,CAAC,QACX,MAAS,CAAC,eAId,KAAQ,CACN,CACE,MAAS,IACT,MAAQ,EACR,QAAU,EACV,OAAU,SACV,UAAa,EACb,MAASA,EAAQ,GACjB,cAAiB,GACjB,cAAiB,GACjB,UAAa,WACb,UAAa,WACb,WAAc,UACd,WAAc,UACd,UAAa,WAEf,CACE,MAAS,IACT,MAAQ,EACR,QAAU,EACV,OAAU,OACV,aAAgB,EAChB,MAASA,EAAQ,GACjB,cAAiB,GACjB,cAAiB,GACjB,UAAa,WACb,UAAa,WACb,WAAc,UACd,WAAc,UACd,UAAa,YAIjB,QAAWmG,GAAc,CACvB,CACE,OAAU,QACV,WAAc,SACd,MAASnG,EAAQ,GACjB,UAAa,WACb,cAAiB,GACjB,WAAc,UACd,UAAa,WACb,cAAiB,GACjB,WAAc,YAEd,GAEJ,MAAS,CACP,CACE,KAAQ,SACR,KAAQ,SACR,KAAQ,CAAC,KAAQ,UACjB,OAAU,CACR,OAAU,CACR,EAAK,CAAC,MAAS,IAAK,MAASA,EAAQ,IACrC,EAAK,CAAC,MAAS,IAAK,MAASA,EAAQ,IACrC,KAAQ,CAAC,MAAS,IAClB,KAAQ,CAAC,MAAS,WAClB,YAAe,CAAC,MAAS,IACzB,OAAU,CAAC,MAAS,WACpB,YAAe,CAAC,MAAS,OAI/B,CACE,KAAQ,QACR,KAAQ,CAAC,KAAQ,WACjB,OAAU,CACR,OAAU,CACR,EAAK,CAAC,MAAS,GACf,EAAK,CAAC,MAAS,GACf,MAAS,CAAC,OAAU,SACpB,OAAU,CAAC,OAAU,UACrB,OAAU,CAAC,OAAS,KAGxB,UAAa,CACX,CACE,KAAQ,UACR,MAAS,aACT,QAAW,CAAC,OAAU,WACtB,MAASmG,GACL,CAAC,KAAQ,+BAAFqJ,OAAiCxP,EAAQ,GAAE,QAClD,CAAC,KAAQ,6BAInB,CACE,KAAQ,OACR,MAAQ,EACR,KAAQ,CAAC,KAAQ,YACjB,OAAU,CACR,MAAS,CACP,YAAe,CAAC,MAAS,KACzB,cAAiB,CAAC,MAAS,IAC3B,OAAUmG,GACN,CAAC,MAAS,QAAS,MAASnG,EAAQ,IACpC,CAAC,MAAS,WACd,KAAQ,CAAC,MAAS,QAGtB,UAAa,CACX,CAAC,KAAQ,UAAW,MAAS,oBAKnC,OAAU,CACR,KAAQ,WACR,KAAQ,CAAC,OAAU,iBAErB2M,EAAApS,EAAA,oBAGmB,UAAd4F,EAAqB,CAAAwM,EAAApS,EAAA,SAC5B6F,EAAO,CACLoN,QAAS,6CACTC,YAAa,mCACb4E,MAAO,IACPC,OAAQ,IACR5E,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1BtB,KAAM,CAAEsB,OAAQ,MAChBoG,QAAS,CAAEmD,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,IACjDpX,KAAM,CACJ,CACEvC,KAAM,QACNoC,OAAQG,GAEV,CACEvC,KAAM,aACN4Z,OAAQ,QACRrD,UAAW,CACT,CACEpG,KAAM,YACNkJ,OAAQ,CAAChX,EAAQ,IACjBwX,IAAK,CAAC,OACNnD,GAAI,CAAC,iBACLoD,QAAS,CAACzX,EAAQ,KAEpB,CACE8N,KAAM,QACNwF,OAAQ,YACRlB,KAAM,CAAEjE,MAAO,gBAAiBmG,MAAO,cACvCnG,MAAO,gBACPkG,GAAI,CAAC,KAAM,OAEb,CACEvG,KAAM,UACNuG,GAAI,UACJqD,KAAM,qBAER,CACE5J,KAAM,UACNuG,GAAI,QACJqD,KAAM,SAAFlI,OAAWxP,EAAQ,GAAE,kDAI/B,CACErC,KAAM,aACN4Z,OAAQ,QACRrD,UAAW,CACT,CACEpG,KAAM,QACNwF,OAAQ,YACRmE,QAAS,CAACzX,EAAQ,IAClBoS,KAAM,CAAEjE,MAAOnO,EAAQ,GAAIsU,MAAO,cAClCnG,MAAOnO,EAAQ,GACfqU,GAAI,CAAC,KAAM,OAEb,CACEvG,KAAM,QACN2J,QAAS,CAACzX,EAAQ,IAClBoS,KAAM,CAAEjE,MAAOnO,EAAQ,GAAIsU,MAAO,cAClCnG,MAAOnO,EAAQ,GACfqU,GAAI,CAAC,KAAM,OAEb,CACEvG,KAAM,SACNzQ,KAAM,aACNtF,IAAKiI,EAAQ,GACbD,OAAQ,CAAC,KAAM,MACfiX,OAAQ,CAAChX,EAAQ,KAEnB,CACE8N,KAAM,UACNuG,GAAI,UACJqD,KAAM,qBAER,CACE5J,KAAM,UACNuG,GAAI,QACJqD,KAAM,UAAFlI,OAAYxP,EAAQ,GAAE,mBAAAwP,OAAkBxP,EAAQ,GAAE,0DAExD,CACE8N,KAAM,SACNsE,KAAM,CAAEjE,MAAO,KAAMmG,MAAO,aAC5BkD,IAAK,CAAC,cACNR,OAAQ,CAAC,MACT3C,GAAI,CAAC,QACLoD,QAAS,CAACzX,EAAQ,QAK1B2X,OAAQ,CACN,CACEha,KAAM,IACNmQ,KAAM,SACNhO,MAAO,QACP2T,OAAQ,CAAEvT,KAAM,aAAciO,MAAO,OAEvC,CACExQ,KAAM,IACNmQ,KAAM,SACNhO,MAAO,SACP8X,MAAM,EACNvJ,MAAM,EACNoF,OAAQ,CAAEvT,KAAM,aAAciO,MAAO,OAEvC,CACExQ,KAAM,UACNmQ,KAAM,SACNhO,MAAO,CAAC,EAAG,IACX2T,OAAQ,CAAEvT,KAAM,aAAciO,MAAO,SAEvC,CACExQ,KAAM,QACNmQ,KAAM,UACNhO,MAAO,CAAEmQ,OAAQ,cACjBwD,OAAQ,CACNvT,KAAM,aACNiO,MAAOnO,EAAQ,GACfoS,KAAM,CAAEjE,MAAO,KAAMmG,MAAO,YAAaF,GAAI,UAInDyD,KAAM,CACJ,CACEhC,OAAQ,OACRzH,MAAO,IACP0J,OAAQ,EACRtF,OAAQ,GACRuF,UAAW,EACXC,SAAU,GACVlJ,WAAY,CAAEtT,MAAO,WACrBsY,gBAAiB,CAAEtY,MAAO,UAC1BgT,cAAe,CAAEhT,MAAO,IACxByc,UAAW,CAAEzc,MAAO,YACpB8X,OAAQ,EACRG,QAAQ,EACRyE,OAAQ,CACNC,OAAQ,CACNC,OAAQ,CACNvF,KAAM,CAAEwF,OAAQ,mCAM1BC,MAAO,CACL,CACExK,KAAM,OACNnQ,KAAM,OACNN,KAAM,CAAE6C,KAAM,cACdgY,OAAQ,CACNE,OAAQ,CACNlK,EAAG,CAAEE,MAAO,IAAKD,MAAO,MACxBsE,GAAI,CAAErE,MAAO,IAAKD,MAAO,MACzBnT,EAAG,CAAEoT,MAAO,IAAKD,MAAO,MACxBqH,GAAI,CAAEpH,MAAO,IAAKD,MAAO,MACzBsG,KAAM,CAAErG,MAAO,QAASD,MAAOnO,EAAQ,IACvC4N,OAAQ,CAAEpS,MAAO,SACjBuU,YAAa,CAAEvU,MAAO,GACtB+c,YAAa,CAAEnK,MAAO,UAAWD,MAAO,QACxCH,QAAS,CAAEqK,OAAQ,YAIzB,CACEvK,KAAM,OACNnQ,KAAM,SACN6a,aAAa,EACbnb,KAAM,CAAE6C,KAAM,QACdgY,OAAQ,CACNE,OAAQ,CACNlK,EAAG,CAAEmK,OAAQ,sCACb3F,MAAO,CAAElX,MAAO,UAChBqX,KAAM,CAAE1E,MAAO,eACfnT,EAAG,CAAEqd,OAAQ,sCACb5D,KAAM,CAAEjZ,MAAO,SACfqT,KAAM,CAAErT,MAAO,YACfid,WAAY,CAAEjd,MAAO,IACrBoX,SAAU,CAAEpX,MAAO,IACnByT,QAAS,CAAEoJ,OAAQ,uEAIzB,CACEvK,KAAM,OACNnQ,KAAM,iBACNN,KAAM,CAAE6C,KAAM,cACdgY,OAAQ,CACNE,OAAQ,CACNlK,EAAG,CAAEE,MAAO,IAAKiK,OAAQ,oCACzBrd,EAAG,CAAEqd,OAAQ,OACbxF,KAAM,CAAE1E,MAAOnO,EAAQ,IACvB0S,MAAO,CAAElX,MAAO,UAChB6H,SAAU,CAAE7H,MAAO,UACnBiZ,KAAM,CAAEjZ,MAAO,WACf2Y,WAAY,CAAE3Y,MAAO,QACrBoX,SAAU,CAAEpX,MAAO,IACnBqT,KAAM,CAAErT,MAAO,eAIrB,CACEsS,KAAM,OACNnQ,KAAM,sBACNN,KAAM,CAAE6C,KAAM,cACdgY,OAAQ,CACNE,OAAQ,CACNlK,EAAG,CAAEE,MAAO,IAAKiK,OAAQ,oCACzBrd,EAAG,CAAEqd,OAAQ,eACbxF,KAAM,CAAE1E,MAAO,SACfuE,MAAO,CAAElX,MAAO,UAChB6H,SAAU,CAAE7H,MAAO,OACnBiZ,KAAM,CAAEjZ,MAAO,WACf2Y,WAAY,CAAE3Y,MAAO,UACrBoX,SAAU,CAAEpX,MAAO,IACnBqT,KAAM,CAAErT,MAAO,iBAKvBmR,EAAApS,EAAA,oBAGmB,cAAd4F,EAAyB,CAAAwM,EAAApS,EAAA,cAC9ByF,EAAQtG,OAAS,GAAC,CAAAiT,EAAApS,EAAA,SACsE,OAA1F2S,QAAQC,KAAK,6EAA6ER,EAAAxR,EAAA,WAI5FiF,EAAO,CACL,QAAW,6CACX,YAAe,uCACf,MAAS,IACT,OAAU,IACV,WAAc,QACd,OAAU,CAAE,KAAQ,CAAE,OAAU,gBAChC,QAAW,CAAE,IAAO,GAAI,OAAU,GAAI,KAAQ,GAAI,MAAS,IAC3D,KAAQ,CACN,CACE,KAAQ,QACR,OAAUF,EACV,UAAa,CACX,CACE,KAAQ,UACR,GAAM,WACN,KAAQ,UAAFsP,OAAYxP,EAAQ,GAAE,OAE9B,CACE,KAAQ,UACR,GAAM,cACN,KAAQ,UAAFwP,OAAYxP,EAAQ,GAAE,OAE9B,CACE,KAAQ,UACR,GAAM,QACN,KAAQ,UAAFwP,OAAYxP,EAAQ,GAAE,SAIlC,CACE,KAAQ,aACR,OAAU,QACV,UAAa,CACX,CACE,KAAQ,YACR,OAAU,CAAC,SACX,IAAO,CAAC,OACR,GAAM,CAAC,iBACP,QAAW,CAAC,aAEd,CACE,KAAQ,QACR,OAAU,YACV,KAAQ,CAAE,MAAS,gBAAiB,MAAS,cAC7C,MAAS,gBACT,GAAM,CAAC,KAAM,OAEf,CACE,KAAQ,UACR,GAAM,UACN,KAAQ,yBAId,CACE,KAAQ,aACR,OAAU,QACV,UAAa,CACX,CACE,KAAQ,QACR,OAAU,YACV,QAAW,CAAC,YACZ,KAAQ,CAAE,MAAS,QAAS,MAAS,cACrC,MAAS,QACT,GAAM,CAAC,KAAM,OAEf,CACE,KAAQ,SACR,KAAQ,aACR,IAAO,WACP,OAAU,CAAC,KAAM,MACjB,OAAU,CAAC,aAEb,CACE,KAAQ,UACR,GAAM,UACN,KAAQ,0BAKhB,OAAU,CACR,CACE,KAAQ,IACR,KAAQ,SACR,MAAS,QACT,OAAU,CAAE,KAAQ,aAAc,MAAS,OAE7C,CACE,KAAQ,IACR,KAAQ,SACR,MAAS,SACT,MAAQ,EACR,MAAQ,EACR,OAAU,CAAE,KAAQ,aAAc,MAAS,OAE7C,CACE,KAAQ,QACR,KAAQ,UACR,MAAS,CAAE,OAAU,cACrB,OAAU,CACR,KAAQ,aACR,MAAS,WACT,KAAQ,CAAE,MAAS,KAAM,MAAS,YAAa,GAAM,UAI3D,KAAQ,CACN,CACE,OAAU,OACV,MAAS,IACT,OAAU,IACV,UAAa,EACb,WAAc,UACd,cAAiB,GACjB,QAAU,GAEZ,CACE,OAAU,SACV,MAAS,IACT,OAAU,IACV,UAAa,EACb,WAAc,UACd,cAAiB,GACjB,QAAU,IAGd,MAAS,CACP,CACE,KAAQ,OACR,KAAQ,OACR,KAAQ,CAAE,KAAQ,cAClB,OAAU,CACR,OAAU,CACR,EAAK,CAAE,MAAS,IAAK,MAAS,MAC9B,GAAM,CAAE,MAAS,IAAK,MAAS,MAC/B,EAAK,CAAE,MAAS,IAAK,MAAS,MAC9B,GAAM,CAAE,MAAS,IAAK,MAAS,MAC/B,KAAQ,CAAE,MAAS,QAAS,MAAS,YACrC,OAAU,CAAE,MAAS,SACrB,YAAe,CAAE,MAAS,GAC1B,QAAW,CAAE,MAAS,IACtB,QAAW,CACT,OAAU,qIAGd,MAAS,CACP,QAAW,CAAE,MAAS,MAI5B,CACE,KAAQ,OACR,KAAQ,cACR,KAAQ,CAAE,KAAQ,cAClB,OAAU,CACR,OAAU,CACR,EAAK,CAAE,MAAS,IAAK,OAAU,sCAC/B,EAAK,CAAE,MAAS,IAAK,OAAU,sCAC/B,KAAQ,CACN,OAAU,6HAEZ,MAAS,CAAE,MAAS,UACpB,SAAY,CAAE,MAAS,UACvB,KAAQ,CAAE,MAAS,SACnB,SAAY,CAAE,MAAS,IACvB,WAAc,CAAE,MAAS,UACzB,KAAQ,CAAE,MAAS,YACnB,WAAc,CAAE,MAAS,IACzB,QAAW,CAAE,OAAU,sCAK/B2M,EAAApS,EAAA,oBAGqB,QAAd4F,EAAmB,CAAAwM,EAAApS,EAAA,SAEpB6L,GAAQlG,EAAKkN,IAAI,SAACC,EAAKgC,GAAK,MAAM,CACtCkI,OAAQlK,EAAIrN,EAAQ,IACpB0Y,OAAQrL,EAAIrN,EAAQ,IACpBxE,MAAOwE,EAAQtG,QAAU,GAAK2T,EAAIrN,EAAQ,IAAMqN,EAAIrN,EAAQ,IAAM,EAClE2Y,MAAO3Y,EAAQtG,QAAU,GAAK2T,EAAIrN,EAAQ,IAAMqN,EAAIrN,EAAQ,IAAM,UACnE,GAGKqG,GAAU,IAAI2L,IACpB5L,GAAMhI,QAAQ,SAAAwa,GACPvS,GAAQ4L,IAAI2G,EAAKrB,SACpBlR,GAAQ6L,IAAI0G,EAAKrB,OAAQ,CACvB5Z,KAAMib,EAAKrB,OACXoB,MAAOC,EAAKD,MACZtJ,MAAOhJ,GAAQ0H,OAGd1H,GAAQ4L,IAAI2G,EAAKF,SACpBrS,GAAQ6L,IAAI0G,EAAKF,OAAQ,CACvB/a,KAAMib,EAAKF,OACXC,MAAOC,EAAKD,MACZtJ,MAAOhJ,GAAQ0H,MAGrB,GAEMvK,GAAQlH,MAAMe,KAAKgJ,GAAQtG,UAG3BwG,GAAmBH,GAAMgH,IAAI,SAAAwL,GAAI,MAAK,CAC1CrB,OAAQlR,GAAQjO,IAAIwgB,EAAKrB,QAAQlI,MACjCqJ,OAAQrS,GAAQjO,IAAIwgB,EAAKF,QAAQrJ,MACjC7T,MAAOod,EAAKpd,MACb,GAED4E,EAAI/B,EAAA,CACFmP,QAAS,6CACTC,YAAa,mCACb4E,MAAOnD,KAAKC,IAAI,IAAoB,GAAf3L,GAAM9J,QAC3B4Y,OAAQ,IACR0B,QAAS,CAAEmD,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,IACjD5J,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B1N,KAAM,CACJ,CACEvC,KAAM,QACNoC,OAAQwG,IAEV,CACE5I,KAAM,eACN4Z,OAAQ,QACRrD,UAAW,CACT,CAAEpG,KAAM,YAAa2J,QAAS,CAAC,UAAWpD,GAAI,CAAC,YAGnD,CACE1W,KAAM,eACN4Z,OAAQ,QACRrD,UAAW,CACT,CAAEpG,KAAM,YAAa2J,QAAS,CAAC,UAAWpD,GAAI,CAAC,YAGnD,CACE1W,KAAM,QACNoC,OAAQyD,GACR0Q,UAAW,CACT,CAAEpG,KAAM,SAAU0J,IAAK,CAAC,QAASnD,GAAI,CAAC,UACtC,CACEvG,KAAM,SAAUzQ,KAAM,eAAgBtF,IAAK,SAC3Cif,OAAQ,CAAC,SAAU3C,GAAI,CAAC,gBACxBwE,QAAS,CAAEC,MAAO,IAEpB,CACEhL,KAAM,SAAUzQ,KAAM,eAAgBtF,IAAK,SAC3Cif,OAAQ,CAAC,SAAU3C,GAAI,CAAC,gBACxBwE,QAAS,CAAEC,MAAO,IAEpB,CACEhL,KAAM,UAAWuG,GAAI,SACrBqD,KAAM,wEAMdC,OAAQ,CACN,CACEha,KAAM,WACNmQ,KAAM,OACN2F,OAAQ,CAAEvT,KAAM,QAASiO,MAAO,QAASiE,MAAM,GAC/CtS,MAAO,SAET,CACEnC,KAAM,QACNmQ,KAAM,UACNhO,MAAO,CAAEmQ,OAAQ,cACjBwD,OAAQ,CAAEvT,KAAM,QAASiO,MAAO,WAIpCmK,MAAO,CACL,CACExK,KAAM,SACNnQ,KAAM,SACN6a,aAAa,EACbnb,KAAM,CAAE6C,KAAM,SACdgY,OAAQ,CACNa,MAAO,CAAE9J,QAAS,CAAEzT,MAAO,IAC3B4c,OAAQ,CACNlK,EAAG,CAAEE,MAAO,WAAYD,MAAO,SAC/BnT,EAAG,CAAEQ,MAAO,GACZuS,KAAM,CAAEI,MAAO,SAAU6K,KAAM,EAAG1F,OAAQ,IAC1CmB,KAAM,CAAErG,MAAO,QAASD,MAAO,YAIrC,CACEL,KAAM,OACNzQ,KAAM,CAAE6C,KAAM,SACdgY,OAAQ,CACNE,OAAQ,CACNxK,OAAQ,CAAEpS,MAAO,WACjByd,cAAe,CAAEzd,MAAO,IACxBuU,YAAa,CAAE5B,MAAO,QAAS6K,KAAM,EAAG1F,OAAQ,KAGpDY,UAAW,CACT,CACEpG,KAAM,SAAUzQ,KAAM,SAAUtF,IAAK,cACrCif,OAAQ,CAAC,eAAgB,gBACzB3C,GAAI,CAAC,aAAc,eAErB,CACEvG,KAAM,WACNoL,QAAS,CAAExB,KAAM,+CACjByB,QAAS,CAAEzB,KAAM,+CACjB0B,QAAS,CAAE1B,KAAM,KACjB2B,QAAS,CAAE3B,KAAM,KACjB9I,MAAO,SAIb,CACEd,KAAM,SACNzQ,KAAM,CAAE6C,KAAM,UACdgY,OAAQ,CACNE,OAAQ,CACNlK,EAAG,CAAEC,MAAO,KACZnT,EAAG,CAAEmT,MAAO,KACZsG,KAAM,CAAEtG,MAAO,QACfJ,KAAM,CAAEI,MAAO,QACfP,OAAQ,CAAEpS,MAAO,SACjBuU,YAAa,CAAEvU,MAAO,GACtBwS,QAAS,CACPqK,OAAQ,gGAKhB,CACEvK,KAAM,OACNzQ,KAAM,CAAE6C,KAAM,SACdgY,OAAQ,CACNE,OAAQ,CACNlK,EAAG,CAAEE,MAAO,WAAYD,MAAO,SAC/BnT,EAAG,CAAEQ,MAAO,IACZoX,SAAU,CAAEpX,MAAO,IACnBkX,MAAO,CAAElX,MAAO,UAChB6H,SAAU,CAAE7H,MAAO,OACnB8d,MAAO,CAAE9d,OAAQ,IACjBqX,KAAM,CAAE1E,MAAO,QACfsG,KAAM,CAAEjZ,MAAO,WACfqT,KAAM,CAAErT,MAAO,iBAItB,SAEO,CACN8Q,KAAM,CAAEsB,OAAQ,eAChBiB,KAAM,WACNgE,KAAM,CAAEhE,KAAM,WAAY+D,SAAU,GAAI6B,KAAM,aAEhD9H,EAAApS,EAAA,oBAGmB,aAAd4F,EAAwB,CAAAwM,EAAApS,EAAA,SAC/B6F,EAAI/B,EAAA,CACFmP,QAAS,kDACTC,YAAa,sCACbC,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B1N,KAAM,CAAEH,OAAQG,GAChB+N,SAAU,CACRjT,EAAG,CACDmT,MAAOnO,EAAQ,GACf8N,KAAM,UACNsE,KAAM,KACN9D,KAAM,CACJmF,QAAQ,EACRlF,MAAO,KACPgF,OAAO,EACP0E,UAAW,WACXzJ,cAAe,GACfuF,aAAc,GACdjF,WAAY,YAGhBZ,EAAG,CACDC,MAAOnO,EAAQ,GACf8N,KAAM,eACNQ,KAAM,CACJmF,QAAQ,EACRF,OAAO,EACPR,MAAM,EACN/D,UAAW,UACXiJ,UAAW,WACXzJ,cAAe,GACfM,WAAY,UACZP,MAAOvO,EAAQ,GACfuZ,UAAW,WACX9K,cAAe,GACfM,WAAY,YAGhBL,MAAO,CAAElT,MAAO,YAElB+W,MAAO,CACL,CACE1E,KAAM,CACJC,KAAM,OACNE,SAAS,EACT+B,YAAa,EACbd,QAAS,KAGb,CACEpB,KAAM,CACJC,KAAM,SACNE,SAAS,EACTD,KAAM,IACNkB,QAAS,IAEXhB,SAAU,CACRF,KAAM,CACJI,MAAOnO,EAAQ,GACf8N,KAAM,eACNM,MAAO,CACLtO,MAAO,CAAC,IAAK,MAEf6O,OAAQ,UAIf,SACO,CACNiF,SAAU,CACR9F,KAAM,MACN+F,SAAU,WAEZvH,KAAM,CAAEsB,OAAQ,eAChBiB,KAAM,WACNgE,KAAM,CAAEhE,KAAM,WAAY+D,SAAU,GAAI6B,KAAM,aAEhD9H,EAAApS,EAAA,oBAGmB,UAAd4F,EAAqB,CAAAwM,EAAApS,EAAA,SAE5B6F,EAAO,CACPoN,QAAS,kDACTC,YAAa,mDACbC,WAAY,QACZC,OAAQ,CACJrB,KAAM,CAAEsB,OAAQ,eAChBU,KAAM,CACNE,cAAe,GACfC,cAAe,GACfK,WAAY,UACZC,WAAY,YAGhB7O,KAAM,CAAEH,OAAQG,GAChB2N,KAAM,CACFC,KAAM,OACN0L,UAAW,EACXzL,KAAM,GACNW,MAAO,UACPO,QAAS,GACTjB,SAAS,GAEbC,SAAQ/P,EAAAA,EAAA,CACJlD,EAAG,CACHmT,MAAOnO,EAAQ,GACf8N,KAAM,UACNQ,KAAM,CACFC,MAAOvO,EAAQ,GACfgQ,WAAY,IAGhB9B,EAAG,CACHC,MAAOnO,EAAQ,GACf8N,KAAM,eACNQ,KAAM,CACFC,MAAOvO,EAAQ,GACf+S,MAAM,EACN/D,UAAW,UACXyK,YAAa,MAIbzZ,EAAQtG,OAAS,GAAK,CAC1BgV,MAAO,CACHP,MAAOnO,EAAQ,GACf8N,KAAM,UACNM,MAAO,CAAE6B,OAAQ,cACjBtB,OAAQ,CACRJ,MAAOvO,EAAQ,GACf6V,OAAQ,QACRpH,cAAe,GACfD,cAAe,OAGlB,IACDR,QAAShO,EAAQoN,IAAI,SAAAE,GAAC,MAAK,CAAEa,MAAOb,EAAGQ,KAAM,UAAW,MAE1DnB,EAAApS,EAAA,oBAGmB,YAAd4F,EAAuB,CAAAwM,EAAApS,EAAA,SAG1ByF,EAAQtG,QAAU,GAEpB+J,GAAWvD,EAAKkN,IAAI,SAACvV,EAAG8B,GAAC,MAAM,CAC7BwX,GAAI,GAAF3B,OAAK3X,EAAEmI,EAAQ,IAAG,KAAAwP,OAAI7V,GACxBgE,KAAM9F,EAAEmI,EAAQ,IAChB+U,OAAQld,EAAEmI,EAAQ,KAAO,OACzB+N,KAAM8B,WAAWhY,EAAEmI,EAAQ,MAAQ,EACpC,GAGY9C,EAAO,IAAIkW,IAAI3P,GAAS2J,IAAI,SAAAvV,GAAC,OAAIA,EAAEkd,MAAM,KAC9C3W,QAAQ,SAAA2W,GACC,SAAXA,GAAsBtR,GAASiW,KAAK,SAAA7hB,GAAC,OAAIA,EAAEsZ,KAAO4D,CAAM,IAC1DtR,GAAS/G,KAAK,CACZyU,GAAI4D,EACJpX,KAAMoX,EACNA,OAAQ,OACRhH,KAAM,GAGZ,GAGAtK,GAAS/G,KAAK,CACZyU,GAAI,OACJxT,KAAM,OACNoX,OAAQ,GACRhH,KAAM,KAIRtK,GAAW,CACT,CACE0N,GAAI,OACJxT,KAAM,OACNoX,OAAQ,GACRhH,KAAM,IACPyB,OAAAtS,EACEgD,EAAKkN,IAAI,SAACvV,EAAG8B,GAAC,MAAM,CACrBwX,GAAI,QAAF3B,OAAU7V,GACZgE,KAAM9F,EAAEmI,EAAQ,IAChB+U,OAAQ,OACRhH,KAAM8B,WAAWhY,EAAEmI,EAAQ,MAAQ,EACpC,KAILI,EAAO,CACLoN,QAAS,6CACTC,YAAa,wCACbC,WAAY,QACZ2E,MAAO,IACPC,OAAQ,IACR0B,QAAS,EACTJ,SAAU,MAEV1T,KAAM,CACJ,CACEvC,KAAM,OACNoC,OAAQ0D,GACRyQ,UAAW,CACT,CACEpG,KAAM,WACN/V,IAAK,KACL4hB,UAAW,UAEb,CACE7L,KAAM,UACNK,MAAO,OACPiE,KAAM,CAAEjE,MAAO,SACfkC,OAAO,EACPuJ,OAAQ,WACRC,MAAO,IACP9L,KAAM,CAAC,CAAEsK,OAAQ,SAAW,CAAEA,OAAQ,cAI5C,CACE1a,KAAM,QACN4Z,OAAQ,OACRrD,UAAW,CACT,CAAEpG,KAAM,SAAU4J,KAAM,oBAG5B,CACE/Z,KAAM,SACN4Z,OAAQ,OACRrD,UAAW,CACT,CAAEpG,KAAM,SAAU4J,KAAM,sBAK9BC,OAAQ,CACN,CACEha,KAAM,QACNmQ,KAAM,UACN2F,OAAQ,CAAEvT,KAAM,QAASiO,MAAO,QAChCrO,MAAO,CACL,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,YAGhD,CACEnC,KAAM,WACNmQ,KAAM,UACN2F,OAAQ,CAAC,EAAG,EAAG,EAAG,GAClB3T,MAAO,CAAC,GAAI,GAAI,GAAI,KAEtB,CACEnC,KAAM,UACNmQ,KAAM,UACN2F,OAAQ,CAAC,EAAG,EAAG,EAAG,GAClB3T,MAAO,CAAC,GAAK,GAAK,GAAK,KAI3BwY,MAAO,CACL,CACExK,KAAM,OACNzQ,KAAM,CAAE6C,KAAM,SACdsY,aAAa,EACbN,OAAQ,CACNa,MAAO,CACLtE,KAAM,CAAErG,MAAO,QAASD,MAAO,QAC/BoK,YAAa,CAAEnK,MAAO,UAAWD,MAAO,UAE1CiK,OAAQ,CACNlK,EAAG,CAAEC,MAAO,MACZnT,EAAG,CAAEmT,MAAO,MACZsE,GAAI,CAAEtE,MAAO,MACbqH,GAAI,CAAErH,MAAO,MACbP,OAAQ,CAAEpS,MAAO,WACjBuU,YAAa,CAAEvU,MAAO,MAI5B,CACEsS,KAAM,OACNzQ,KAAM,CAAE6C,KAAM,UACdgY,OAAQ,CACNa,MAAO,CACLnL,OAAQ,CAAEpS,MAAO,WACjBuU,YAAa,CAAEvU,MAAO,IAExB4c,OAAQ,CACNlK,EAAG,CAAEC,MAAO,MACZnT,EAAG,CAAEmT,MAAO,MACZsE,GAAI,CAAEtE,MAAO,MACbqH,GAAI,CAAErH,MAAO,MACbsG,KAAM,CAAEjZ,MAAO,eACfwS,QAAS,CACPqK,OAAQ,0EAGZyB,MAAO,CACLrF,KAAM,CAAEjZ,MAAO,WACf+c,YAAa,CAAE/c,MAAO,OAI5B,CACEsS,KAAM,OACNzQ,KAAM,CAAE6C,KAAM,UACdsY,aAAa,EACbN,OAAQ,CACNa,MAAO,CACLlK,KAAM,CAAErT,MAAO,+BACfkX,MAAO,CAAElX,MAAO,UAChB6H,SAAU,CAAE7H,MAAO,UACnBiZ,KAAM,CAAEjZ,MAAO,WACf2Y,WAAY,CAAE3Y,MAAO,QACrBqX,KAAM,CAAE1E,MAAO,QACfyE,SAAU,CAAExE,MAAO,WAAYD,MAAO,UAExCiK,OAAQ,CACNlK,EAAG,CAAEmK,OAAQ,+BACbrd,EAAG,CAAEqd,OAAQ,+BACbpJ,QAAS,CACPoJ,OAAQ,yEAMlB1L,EAAApS,EAAA,oBAGmB,WAAd4F,EAAsB,CAAAwM,EAAApS,EAAA,SAC7B6F,EAAI/B,EAAA,CACFmP,QAAS,kDACTC,YAAa,oCACbC,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B1N,KAAM,CAAEH,OAAQG,GAChBgU,UAAW,CACT,CACE6F,cAAe,CAAC,CAAC,GAAM,MAAO,MAAS/Z,EAAQ,GAAI,GAAM,gBAE3D,CACEga,UAAW,eAAFxK,OAAiBxP,EAAQ,GAAE,4BACpCqU,GAAI,kBAEN,CACE4F,UAAW,CAAC,CAAC,GAAM,MAAO,MAAS,iBAAkB,GAAM,YAC3DxC,QAAS,CAACzX,EAAQ,KAEpB,CAAC,UAAa,kBAAmB,GAAM,YACvC,CAAC,QAAW,CAAC,aACb,CACEga,UAAW,6CAAFxK,OAA+CxP,EAAQ,GAAE,cAClEqU,GAAI,QAEN,CAAC,UAAa,6BAA8B,GAAM,OAClD,CAAC,UAAa,kCAAmC,GAAM,QAEzD6F,MAAO,CAAC,OAAU,CAAC,MAASla,EAAQ,GAAI,OAAU,CAAC,YAAe,YAClEI,KAAM,CACJmS,MAAO,CACL,CACE1E,KAAM,CACJC,KAAM,SACNoC,QAAQ,EACRlC,SAAS,EACTJ,OAAQ,UACRmC,YAAa,IAEf9B,SAAU,CACRC,EAAG,CAAC,MAAS,MAAO,KAAQ,UAAW,KAAQ,MAC/ClT,EAAG,CAAC,MAAS,MAAO,KAAQ,UAAW,KAAQ,KAAM,KAAQ,MAC7D0T,MAAO,CACL+G,UAAW,CAAC,KAAQ,yBAA0B,MAAS,WACvDrH,MAAO,CAAC,OAAU,QAClBD,MAAO,OACPL,KAAM,UACNa,OAAQ,MAEVZ,KAAM,CAAC,MAAS,KAChBC,QAAS,CAAC,CAAC,MAAShO,EAAQ,GAAI,KAAQ,cAG5C,CACE6N,KAAM,CAAC,KAAQ,OAAQ,SAAY,GAAI,WAAc,QACrDI,SAAU,CACRjT,EAAG,CAAC,MAAS,IACb6X,KAAM,CACJ4C,UAAW,CACT7b,KAAM,sBACN4B,MAAO,CAAC,KAAQ,yBAGpBkT,MAAO,CAAC,MAAS,CAAC,OAAU,QAAS,MAAS,aAIrD,SACO,CACNpC,KAAM,CAAC,OAAU,eACjBuC,KAAM,WACNgE,KAAM,CAAC,KAAQ,WAAY,SAAY,GAAI,KAAQ,WACnDvE,KAAM,CACJiF,OAAO,EACPR,MAAM,EACNU,QAAQ,EACR3E,WAAY,UACZN,cAAe,IAEjB2L,OAAQ,CACNZ,UAAW,WACX9K,cAAe,GACfM,WAAY,UACZkJ,UAAW,WACXzJ,cAAe,GACfM,WAAY,WAEdH,OAAQ,CACN4K,UAAW,WACXa,gBAAiB,OACjBrL,WAAY,UACZkJ,UAAW,WACXzJ,cAAe,GACfM,WAAY,UACZuL,WAAY,SACZC,WAAY,MAGhB3N,EAAApS,EAAA,oBAGmB,WAAd4F,EAAsB,CAAAwM,EAAApS,EAAA,SAC7B6F,EAAO,CACLoN,QAAS,uDACTC,YAAa,oCACbC,WAAY,QACZC,OAAQ,CACNrB,KAAM,CAAEiO,gBAAiB,IAAKC,iBAAkB,IAAK5M,OAAQ,MAC7DsM,MAAO,CAAEO,QAAS,IAEpBva,KAAM,CAAEH,OAAQG,GAChB2N,KAAM,CAAEC,KAAM,OAAQ+H,OAAQ,cAC9B5H,SAAU,CACRS,MAAO,CAAEP,MAAOnO,EAAQ,GAAI8N,KAAM,WAClC4M,OAAQ,CACNvM,MAAOnO,EAAQ,GACfma,OAAQ,CACNQ,YAAa,SACb5G,aAAc,EACd6G,YAAa,UAEf9M,KAAM,WAERI,EAAG,CACDI,KAAM,CAAEyE,MAAM,EAAOoF,QAAQ,EAAO5E,OAAO,EAAMxT,OAAQ,CAAC,IAC1DoO,MAAO,UACP0M,OAAQ,KACRC,MAAO,SACPvM,MAAO,KACPT,KAAM,gBAER9S,EAAG,CAAEmT,MAAOnO,EAAQ,GAAI8N,KAAM,iBAEhCoG,UAAW,CACT,CACE8B,QAAShW,EAAQ,GACjByX,QAAS,CAACzX,EAAQ,IAClBqU,GAAI,CAACrU,EAAQ,GAAI,aAGrBqS,MAAO,KACP1F,EAAApS,EAAA,oBAGmB,YAAd4F,EAAuB,CAAAwM,EAAApS,EAAA,SAC9B6F,EAAO,CACLoN,QAAS,kDACTC,YAAa,+BACbC,WAAY,QACZxN,KAAM,CAAEH,OAAQG,GAChB2N,KAAM,CACJC,KAAM,OACNF,OAAQ,QACRI,SAAS,GAEXC,SAAU,CACRjT,EAAG,CACDmT,MAAOnO,EAAQ,GACf8N,KAAM,UACNS,MAAOvO,EAAQ,GACfsO,KAAM,CACJmF,QAAQ,EACRF,OAAO,EACP4E,QAAQ,EACRnI,WAAY,EACZ+D,aAAc,IAGlB7F,EAAG,CACDC,MAAOnO,EAAQ,GACf8N,KAAM,UACNS,MAAOvO,EAAQ,GACfsO,KAAM,CACJmF,QAAQ,EACRF,OAAO,EACP4E,QAAQ,EACRnI,WAAY,IAGhBtB,MAAO,CACLuL,UAAW,OACX9L,MAAOnO,EAAQ,GACf8N,KAAM,eACNS,MAAOvO,EAAQ,GACfoO,MAAO,CACL6B,OAAQ,SAEVtB,OAAQ,CACNoM,UAAW,WACXlF,OAAQ,QACRmF,WAAY,SACZ3H,WAAY,YAIlB1F,OAAQ,CACNrB,KAAM,CAAEsB,OAAQ,eAChBiB,KAAM,WACNgE,KAAM,CAAEhE,KAAM,WAAY+D,SAAU,GAAI6B,KAAM,WAC9CnG,KAAM,CACJiF,OAAO,EACPR,MAAM,EACNU,QAAQ,EACR3E,WAAY,UACZN,cAAe,GACfC,cAAe,GACfM,WAAY,WAEdJ,OAAQ,CACN4K,UAAW,WACXa,gBAAiB,OACjBrL,WAAY,UACZkJ,UAAW,WACXzJ,cAAe,GACfM,WAAY,UACZkM,WAAY,SACZ3H,WAAY,YAGhB1G,EAAApS,EAAA,oBAGmB,aAAd4F,EAAwB,CAAAwM,EAAApS,EAAA,cAC7ByF,EAAQtG,OAAS,GAAC,CAAAiT,EAAApS,EAAA,SAC0E,OAA9F2S,QAAQC,KAAK,iFAAiFR,EAAAxR,EAAA,WAIhGiF,EAAO,CACL,QAAW,kDACX,KAAQ,CAAE,OAAUF,GACpB,UAAa,CACX,CACE,UAAa,CACX,CAAC,GAAM,MAAO,MAASF,EAAQ,GAAI,GAAMA,EAAQ,IACjD,CAAC,GAAM,MAAO,MAASA,EAAQ,GAAI,GAAMA,EAAQ,KAEnD,QAAW,CAACA,EAAQ,KAEtB,CACE,UAAa,UAAFwP,OAAYxP,EAAQ,GAAE,gBAAAwP,OAAexP,EAAQ,GAAE,MAC1D,GAAM,qBAER,CACE,UAAa,UAAFwP,OAAYxP,EAAQ,GAAE,0BAAAwP,OAAyBxP,EAAQ,GAAE,cAAAwP,OAAaxP,EAAQ,GAAE,QAC3F,GAAM,qBAGV,QAAW,CACT,CACE,MAAS,IACT,OAAU,CAAC,KAAQ,IACnB,KAAQ,CAAC,OAAU,eACnB,SAAY,CACV,MAAS,CACP,KAAQ,UACR,MAAS,CACP,OAAU,CAACA,EAAQ,GAAIA,EAAQ,IAC/B,MAAS,CAAC,UAAW,WAEvB,OAAU,CAAC,MAAS,KAAM,OAAU,QAEtC,EAAK,CACH,MAASA,EAAQ,GACjB,KAAQ,UACR,KAAQ,KACR,KAAQ,CAAC,QAAU,EAAO,OAAU,EAAG,OAAS,EAAO,MAAS,GAAI,aAAgB,KAEtF,EAAK,CACH,KAAQ,eACR,KAAQ,CACN,QAAU,EACV,QAAU,EACV,MAAS,KACT,OAAS,EACT,MAAQ,EACR,UAAa,CACX,UAAa,CAAC,KAAQ,oBAAqB,MAAS,WACpD,MAAS,kBAKjB,MAAS,CACP,CACE,KAAQ,CACN,KAAQ,MACR,SAAW,EACX,aAAgB,EAChB,QAAW,GACX,OAAU,CAAC,KAAQ,KAErB,SAAY,CACV,EAAK,CAAC,MAASA,EAAQ,IACvB,MAAS,CAAC,MAASA,EAAQ,MAG/B,CACE,KAAQ,CACN,KAAQ,MACR,SAAW,EACX,aAAgB,EAChB,QAAW,EACX,OAAU,CAAC,KAAQ,KAErB,SAAY,CACV,EAAK,CAAC,MAASA,EAAQ,IACvB,MAAS,CAAC,MAASA,EAAQ,MAG/B,CACE,KAAQ,CACN,KAAQ,OACR,MAAS,CACP,KAAQ,UAAFwP,OAAYxP,EAAQ,GAAE,8BAE9B,GAAM,CAAC,KAAQ,UAAFwP,OAAYxP,EAAQ,GAAE,oBACnC,MAAS,QACT,SAAY,IAEd,SAAY,CACV,EAAK,CAAC,MAASA,EAAQ,GAAI,KAAQ,gBACnC,KAAQ,CAAC,MAASA,EAAQ,GAAI,KAAQ,eAAgB,OAAU,SAKxE,CACE,MAAS,IACT,OAAU,CAAC,KAAQ,IACnB,KAAQ,CAAC,OAAU,eACnB,SAAY,CACV,EAAK,CACH,MAASA,EAAQ,GACjB,KAAQ,UACR,KAAQ,KACR,KAAQ,MAEV,EAAK,CACH,MAAS,oBACT,KAAQ,eACR,KAAQ,CACN,QAAU,EACV,QAAU,EACV,MAAS,KACT,OAAS,EACT,MAAQ,EACR,UAAa,EACb,UAAa,CACX,UAAa,CAAC,KAAQ,oBAAqB,MAAS,WACpD,MAAS,kBAKjB,MAAS,CACP,CACE,KAAQ,CACN,KAAQ,MACR,SAAW,EACX,aAAgB,EAChB,QAAW,EACX,OAAU,CAAC,KAAQ,KAErB,SAAY,CACV,KAAQ,CACN,UAAa,CACX,KAAQ,iCACR,MAAS,WAEX,MAAS,aAIf,CACE,KAAQ,CACN,KAAQ,OACR,MAAS,CACP,KAAQ,qDAEV,GAAM,CAAC,KAAQ,4CAEjB,SAAY,CACV,KAAQ,CACN,MAAS,oBACT,KAAQ,eACR,OAAU,UAMpB,CACE,MAAS,IACT,OAAU,CAAC,KAAQ,IACnB,KAAQ,CAAC,OAAU,eACnB,UAAa,CACX,CACE,UAAa,UAAFwP,OAAYxP,EAAQ,GAAE,gEACjC,GAAM,mBAGV,SAAY,CACV,EAAK,CACH,MAASA,EAAQ,GACjB,KAAQ,UACR,KAAQ,KACR,KAAQ,MAEV,EAAK,CACH,MAAS,mBACT,KAAQ,eACR,KAAQ,CACN,QAAU,EACV,QAAU,EACV,MAAS,KACT,OAAS,EACT,MAAQ,EACR,UAAa,CACX,UAAa,CAAC,KAAQ,oBAAqB,MAAS,WACpD,MAAS,kBAKjB,MAAS,CACP,CACE,KAAQ,CAAC,KAAQ,OAAQ,SAAW,GACpC,SAAY,CACV,YAAe,CAAC,MAAS,GACzB,OAAU,CACR,UAAa,CACX,KAAQ,iCACR,MAAS,WAEX,MAAS,aAIf,CACE,KAAQ,CAAC,KAAQ,SAAU,SAAW,GACtC,SAAY,CACV,KAAQ,CAAC,MAAS,KAClB,MAAS,CACP,UAAa,CACX,KAAQ,iCACR,MAAS,WAEX,MAAS,aAIf,CACE,KAAQ,CACN,KAAQ,OACR,MAAS,CACP,KAAQ,qDAEV,GAAM,CAAC,KAAQ,8CAEjB,SAAY,CACV,KAAQ,CACN,MAAS,iBACT,KAAQ,gBAOpB,OAAU,CACR,KAAQ,CAAC,OAAU,eACnB,QAAW,CAAC,KAAQ,EAAG,IAAO,GAAI,MAAS,EAAG,OAAU,GACxD,KAAQ,WACR,KAAQ,CACN,cAAiB,GACjB,aAAgB,GAChB,OAAU,EACV,UAAa,WACb,WAAc,WAEhB,KAAQ,CAAC,SAAY,GAAI,KAAQ,WAAY,MAAS,WACtD,OAAU,CAAC,QAAW,IACtB,OAAU,CACR,cAAiB,GACjB,UAAa,WACb,WAAc,aAGlB2M,EAAApS,EAAA,oBAGqB,cAAd4F,EAAyB,CAAAwM,EAAApS,EAAA,SAClC6F,EAAI/B,EAAA,CACFmP,QAAS,kDACTC,YAAa,uCACbC,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B1N,KAAM,CAAEH,OAAQG,GAChBqS,MAAO,CACP,CACI1E,KAAM,CAAEC,KAAM,OAAQE,SAAS,EAAMU,MAAO,QAC5CT,SAAU,CACVC,EAAG,CAAEC,MAAOnO,EAAQ,GAAI8N,KAAM,WAC9B9S,EAAG,CAAEmT,MAAOnO,EAAQ,GAAI8N,KAAM,kBAGlC,CACID,KAAM,CAAEC,KAAM,SAAUC,KAAM,GAAIW,MAAO,OAAQV,SAAS,GAC1DC,SAAU,CACVC,EAAG,CAAEC,MAAOnO,EAAQ,GAAI8N,KAAM,WAC9B9S,EAAG,CAAEmT,MAAOnO,EAAQ,GAAI8N,KAAM,kBAGlC,CACID,KAAM,CAAEC,KAAM,OAAQiC,YAAa,EAAG/B,SAAS,GAC/CC,SAAU,CACVC,EAAG,CAAEC,MAAOnO,EAAQ,GAAI8N,KAAM,WAC9B9S,EAAG,CAAEmT,MAAOnO,EAAQ,GAAI8N,KAAM,gBAC9B0H,GAAI,CAAErH,MAAOnO,EAAQ,IACrB0O,MAAO,CACH+G,UAAW,CAAE7b,KAAM,UAAF4V,OAAYxP,EAAQ,GAAE,gBAAAwP,OAAexP,EAAQ,GAAE,MAAMxE,MAAO,OAC7EA,MAAO,WAIf,CACIqS,KAAM,CAAEC,KAAM,SAAUC,KAAM,GAAIC,SAAS,GAC3CC,SAAU,CACVC,EAAG,CAAEC,MAAOnO,EAAQ,GAAI8N,KAAM,WAC9B9S,EAAG,CAAEmT,MAAOnO,EAAQ,GAAI8N,KAAM,gBAC9BY,MAAO,CACH+G,UAAW,CAAE7b,KAAM,UAAF4V,OAAYxP,EAAQ,GAAE,gBAAAwP,OAAexP,EAAQ,GAAE,MAAMxE,MAAO,OAC7EA,MAAO,YAKfyS,SAAU,CACVC,EAAG,CACCC,MAAOnO,EAAQ,GACf8N,KAAM,UACNQ,KAAM,CACFC,MAAO,KACPyB,WAAY,IAGpBhV,EAAG,CAAE8S,KAAM,eAAgBQ,KAAM,CAAEC,MAAO,OACzC,SACO,CACRjC,KAAM,CAAEsB,OAAQ,eAChBqN,KAAM,CAAElL,YAAa,EAAGmL,UAAW,QAASC,WAAY,SACxD7M,KAAM,CACFiF,OAAO,EACPR,MAAM,EACNU,QAAQ,EACR3E,WAAY,UACZN,cAAe,MAGnB7B,EAAApS,EAAA,oBAGqB,WAAd4F,EAAsB,CAAAwM,EAAApS,EAAA,SAC7B6F,EAAO,CACHoN,QAAS,kDACTC,YAAa,oCACbC,WAAY,QACZC,OAAQ,CACRrB,KAAM,CAAEsB,OAAQ,eAChBiB,KAAM,WACNF,OAAQ,CACJI,WAAY,UACZD,WAAY,YAGhB5O,KAAM,CAAEH,OAAQG,GAChBgU,UAAW,CACX,CACIxb,OAAQ,CAAC,CAAE0b,GAAI,OAAQC,GAAI,cAC3BjC,KAAM,CAAC,CAAEjE,MAAOnO,EAAQ,GAAIsU,MAAO,iBAGvC/B,MAAO,CAAC,CACR1E,KAAM,CAAEC,KAAM,MAAOrG,YAAa,GAAImG,OAAQ,SAC3C,CACHC,KAAM,CAAEC,KAAM,OAAQsN,aAAc,IACpCnN,SAAU,CACN4E,KAAM,CAAE1E,MAAOnO,EAAQ,GAAI8N,KAAM,mBAGrCG,SAAU,CACV0H,MAAO,CAAExH,MAAOnO,EAAQ,GAAI8N,KAAM,eAAgBgN,OAAO,GACzDO,OAAQ,CACJlN,MAAOnO,EAAQ,GACfoO,MAAO,CAAEN,KAAM,OAAQO,MAAM,EAAMiN,SAAU,KAEjD5M,MAAO,CACHP,MAAOnO,EAAQ,GACf8N,KAAM,UACNa,OAAQ,CACRJ,MAAOvO,EAAQ,GACfyO,cAAe,GACfD,cAAe,GACfqH,OAAQ,UAGZvB,MAAO,CAAEnG,MAAO,YAAaL,KAAM,kBAErCnB,EAAApS,EAAA,oBAGmB,UAAd4F,EAAqB,CAAAwM,EAAApS,EAAA,YAGL,IAAnByF,EAAQtG,OAAY,CAAAiT,EAAApS,EAAA,SACsD,OAA5EghB,MAAM,sEAAsE5O,EAAAxR,EAAA,WAoC9E,IA/BMsL,GAAU,IAAI2M,IACpBlT,EAAK9B,QAAQ,SAAAiP,GACX5G,GAAQ+U,IAAInO,EAAIrN,EAAQ,KACxByG,GAAQ+U,IAAInO,EAAIrN,EAAQ,IAC1B,GACM0G,GAAapK,MAAMe,KAAKoJ,IACxBlM,GAAImM,GAAWhN,OAGfiN,GAAY,CAAC,EACnBD,GAAWtI,QAAQ,SAACqd,EAAO9hB,GACzBgN,GAAU8U,GAAS9hB,CACrB,GAGMiN,GAAStK,MAAM/B,IAAGka,KAAK,GAAGrH,IAAI,kBAAM9Q,MAAM/B,IAAGka,KAAK,EAAE,GAC1DvU,EAAK9B,QAAQ,SAAAiP,GACX,IAAMkK,EAASlK,EAAIrN,EAAQ,IACrB0b,EAAOrO,EAAIrN,EAAQ,IACnBxE,EAAQqU,WAAWxC,EAAIrN,EAAQ,MAAQ,EAEvC2b,EAAYhV,GAAU4Q,GACtBqE,EAAUjV,GAAU+U,QAERlkB,IAAdmkB,QAAuCnkB,IAAZokB,IAC7BhV,GAAO+U,GAAWC,GAAWpgB,EAEjC,GAGMqL,GAAa,IAAIvK,MAAM/B,IAAGka,KAAK,GAC5B9a,GAAI,EAAGA,GAAIY,GAAGZ,KACrB,IAASoN,GAAI,EAAGA,GAAIxM,GAAGwM,KACrBF,GAAWlN,KAAMiN,GAAOjN,IAAGoN,IAC3BF,GAAWlN,KAAMiN,GAAOG,IAAGpN,IAM+B,GAE7C,KAFXqN,GAAWH,GAAWgV,OAAO,SAACC,EAAKC,GAAG,OAAKD,EAAMC,CAAG,EAAE,IAE1C,CAAApP,EAAApS,EAAA,SAC8C,OAA9DghB,MAAM,wDAAwD5O,EAAAxR,EAAA,WAWhE,IANM8L,GAAS,GACXC,GAAe,EAEbC,GADU,IACe5M,GACzB6M,GAAkB,EAAI8H,KAAKO,GAAMtI,GAE9BxN,GAAI,EAAGA,GAAIY,GAAGZ,KACf2N,GAAaT,GAAWlN,IAAKqN,GAAYI,GAC/CH,GAAOvK,KAAK,CACV2S,MAAO1V,GACP8hB,MAAO/U,GAAW/M,IAClBqiB,WAAY9U,GACZ+U,SAAU/U,GAAeI,GACzB9L,MAAOqL,GAAWlN,MAEpBuN,IAAgBI,GAbF,IA2BhB,IAVMC,GAAaN,GAAOmG,IAAI,SAAA1S,GAAC,MAAK,CAClC2W,MAAO3W,EAAEshB,WACT1K,IAAK5W,EAAEshB,WACR,GAGKxU,GAAe,GACfC,GAAc,IAGX9N,GAAI,EAAGA,GAAIY,GAAGZ,KACrB,IAASoN,GAAI,EAAGA,GAAIxM,GAAGwM,MACfvL,GAAQoL,GAAOjN,IAAGoN,KACZ,IACJa,GAAcX,GAAOtN,IACrBkO,GAAcZ,GAAOF,IAGrBe,GAAmBtM,GAAQqL,GAAWlN,KAAOiO,GAAYqU,SAAWrU,GAAYoU,YAChFjU,GAAcR,GAAW5N,IAAG2X,IAC5BtJ,GAAYD,GAAcD,GAChCP,GAAW5N,IAAG2X,IAAMtJ,GAGdC,GAAmBzM,GAAQqL,GAAWE,KAAOc,GAAYoU,SAAWpU,GAAYmU,YAChF9T,GAAcX,GAAWR,IAAGuK,IAC5BnJ,GAAYD,GAAcD,GAChCV,GAAWR,IAAGuK,IAAMnJ,GAGdC,GAAMX,GAAcyH,KAAKgN,IAAInU,GAAcmH,KAAKO,GAAK,GACrDpH,GAAMZ,GAAcyH,KAAKiN,IAAIpU,GAAcmH,KAAKO,GAAK,GACrDnH,GAAMb,GAAcyH,KAAKgN,IAAIlU,GAAYkH,KAAKO,GAAK,GACnDlH,GAAMd,GAAcyH,KAAKiN,IAAInU,GAAYkH,KAAKO,GAAK,GACnDjH,GAAMf,GAAcyH,KAAKgN,IAAIhU,GAAcgH,KAAKO,GAAK,GACrDhH,GAAMhB,GAAcyH,KAAKiN,IAAIjU,GAAcgH,KAAKO,GAAK,GACrD/G,GAAMjB,GAAcyH,KAAKgN,IAAI/T,GAAY+G,KAAKO,GAAK,GACnD9G,GAAMlB,GAAcyH,KAAKiN,IAAIhU,GAAY+G,KAAKO,GAAK,GAGnD7G,GAAkBZ,GAAYD,GAAemH,KAAKO,GAAK,EAAI,EAC3D5G,GAAkBV,GAAYD,GAAegH,KAAKO,GAAK,EAAI,EAG3D3G,GAAO,IAAH0G,OAAOpH,GAAG,KAAAoH,OAAInH,GAAG,KAAAmH,OAAI/H,GAAW,KAAA+H,OAAI/H,GAAW,OAAA+H,OAAM5G,GAAc,OAAA4G,OAAMlH,GAAG,KAAAkH,OAAIjH,GAAG,SAAAiH,OAAQhH,GAAG,KAAAgH,OAAI/G,GAAG,KAAA+G,OAAI/H,GAAW,KAAA+H,OAAI/H,GAAW,OAAA+H,OAAM3G,GAAc,OAAA2G,OAAM9G,GAAG,KAAA8G,OAAI7G,GAAG,SAAA6G,OAAQpH,GAAG,KAAAoH,OAAInH,GAAG,KAEnMb,GAAa9K,KAAK,CAChBoM,KAAMA,GACNyO,OAAQ5d,GACR+e,OAAQ3R,GACRqV,YAAa1V,GAAW/M,IACxB0iB,YAAa3V,GAAWK,IACxBvL,MAAOA,MAOf4E,EAAO,CACL,QAAW,6CACX,YAAe,gCACf,MAAS,IACT,OAAU,IACV,QAAW,EACX,WAAc,QACd,OAAU,CACR,KAAQ,CAAE,OAAU,gBAEtB,QAAW,CACT,CAAE,KAAQ,UAAW,MAAS,GAC9B,CAAE,KAAQ,UAAW,MAAS,GAC9B,CAAE,KAAQ,eAAgB,MAAS,KACnC,CAAE,KAAQ,eAAgB,MAAS,MAErC,OAAU,CACR,CACE,KAAQ,QACR,KAAQ,UACR,OAAU,CAAE,KAAQ,SAAU,MAAS,SACvC,MAAS,CAAE,OAAU,gBAGzB,KAAQ,CACN,CACE,KAAQ,SACR,OAAU6G,GACV,UAAa,CACX,CACE,KAAQ,UACR,KAAQ,8DACR,GAAM,iBAER,CACE,KAAQ,UACR,KAAQ,iCACR,GAAM,WAER,CACE,KAAQ,UACR,KAAQ,0CACR,GAAM,YAER,CACE,KAAQ,UACR,KAAQ,8CACR,GAAM,KAER,CACE,KAAQ,UACR,KAAQ,8CACR,GAAM,OAIZ,CACE,KAAQ,eACR,OAAUO,KAGd,MAAS,CACP,CACE,KAAQ,MACR,KAAQ,CAAE,KAAQ,UAClB,OAAU,CACR,MAAS,CACP,KAAQ,CAAE,MAAS,QAAS,MAAS,SACrC,EAAK,CAAE,OAAU,aACjB,EAAK,CAAE,OAAU,eAEnB,OAAU,CACR,WAAc,CAAE,MAAS,cACzB,SAAY,CAAE,MAAS,YACvB,SAAY,CAAE,MAAS,GACvB,YAAe,CAAE,OAAU,gBAC3B,YAAe,CAAE,OAAU,gBAC3B,QAAW,CAAE,MAAS,IACtB,QAAW,CACT,OAAU,0EAGd,MAAS,CACP,QAAW,CAAE,MAAS,MAI5B,CACE,KAAQ,OACR,KAAQ,CAAE,KAAQ,UAClB,OAAU,CACR,MAAS,CACP,KAAQ,CAAE,MAAS,SACnB,SAAY,CAAE,MAAS,IACvB,KAAQ,CAAE,MAAS,YACnB,KAAQ,CAAE,MAAS,WACnB,WAAc,CAAE,MAAS,WAE3B,OAAU,CACR,EAAK,CAAE,OAAU,uBACjB,EAAK,CAAE,OAAU,wBACjB,GAAM,CAAE,OAAU,iCAClB,MAAS,CAAE,OAAU,oEACrB,MAAS,CAAE,OAAU,qCACrB,SAAY,CAAE,MAAS,aAI7B,CACE,KAAQ,OACR,KAAQ,CAAE,KAAQ,gBAClB,OAAU,CACR,MAAS,CACP,EAAK,CAAE,OAAU,aACjB,EAAK,CAAE,OAAU,eAEnB,OAAU,CACR,KAAQ,CAAE,MAAS,QACnB,KAAQ,CAAE,MAAS,QAAS,MAAS,UACrC,QAAW,CAAE,MAAS,IACtB,OAAU,CAAE,MAAS,SACrB,YAAe,CAAE,MAAS,IAC1B,QAAW,CACT,OAAU,+FAGd,MAAS,CACP,QAAW,CAAE,MAAS,SAK9BmF,EAAApS,EAAA,oBAGmB,SAAd4F,EAAoB,CAAAwM,EAAApS,EAAA,SAErBwO,GAAO7L,EAAO,IAAIkW,IAAIlT,EAAKkN,IAAI,SAAAvV,GAAC,OAAIA,EAAEmI,EAAQ,GAAG,KACjD6U,GAAe3F,KAAKC,IAAI,IAAsB,GAAjBpG,GAAQrP,QAC3C0G,EAAI/B,EAAA,CACFmP,QAAS,kDACTC,YAAa,kCACbC,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B1N,KAAM,CAAEH,OAAQG,GAChBmS,MAAOwC,GACPvC,OAAQ,IACRsB,SAAU,CACR9F,KAAM,MACN+F,SAAU,WAEZG,QAAS,CAAEqD,KAAM,GAAIC,MAAO,GAAIH,IAAK,EAAGC,OAAQ,GAChDnJ,SAAU,CACRC,EAAG,CACDC,MAAOnO,EAAQ,GACf8N,KAAM,UACNQ,KAAM,CAAEC,MAAO,IACfH,MAAO,CAAEN,KAAM,QAASkG,QAAS,KAEnChZ,EAAG,CACDmT,MAAOnO,EAAQ,GACf8N,KAAM,UACNQ,MAAM,IAGViE,MAAO,CACL,CACE1E,KAAM,CAAEC,KAAM,OAAQwO,YAAa,YACnCrO,SAAU,CACRS,MAAO,CACLP,MAAOnO,EAAQ,GACf8N,KAAM,UACNa,QAAQ,KAId,CACEd,KAAM,CAAEC,KAAM,SAAUC,KAAM,IAAKC,SAAS,GAC5CC,SAAU,CACRS,MAAO,CACLP,MAAOnO,EAAQ,GACf8N,KAAM,UACNa,QAAQ,KAId,CACEd,KAAM,CAAEC,KAAM,OAAQY,MAAO,SAC7BT,SAAU,CACR4E,KAAM,CAAE1E,MAAOnO,EAAQ,MAG3B,CAEEkU,UAAW,CACT,CAAExb,OAAQ,CAAC,CAAE0b,GAAI,OAAQC,GAAI,SAAWjC,KAAM,CAAC,CAAEjE,MAAOnO,EAAQ,GAAIsU,MAAO,gBAC3E,CAAEvW,OAAQ,qBAEZ8P,KAAM,CACJC,KAAM,OACN4E,MAAO,OACPrP,SAAU,SACVsP,GAAI,GACJwB,WAAY,OACZvB,SAAU,IAEZ3E,SAAU,CACR4E,KAAM,CAAE1E,MAAOnO,EAAQ,GAAI8N,KAAM,WACjCY,MAAO,CAAEP,MAAOnO,EAAQ,GAAI8N,KAAM,UAAWa,QAAQ,KAGzD,CAEEuF,UAAW,CACT,CAAExb,OAAQ,CAAC,CAAE0b,GAAI,OAAQC,GAAI,SAAWjC,KAAM,CAAC,CAAEjE,MAAOnO,EAAQ,GAAIsU,MAAO,eAC3E,CAAEvW,OAAQ,qBAEZ8P,KAAM,CACJC,KAAM,OACN4E,MAAO,QACPrP,SAAU,SACVsP,IAAK,GACLwB,WAAY,OACZvB,SAAU,IAEZ3E,SAAU,CACR4E,KAAM,CAAE1E,MAAOnO,EAAQ,GAAI8N,KAAM,WACjCY,MAAO,CAAEP,MAAOnO,EAAQ,GAAI8N,KAAM,UAAWa,QAAQ,OAG1D,SACO,CACNrC,KAAM,CAAEsB,OAAQ,eAChBqN,KAAM,CAAElL,YAAa,EAAGmL,UAAW,QAASC,WAAY,SACxD7M,KAAM,CACJiF,OAAO,EACPR,MAAM,EACNU,QAAQ,EACR3E,WAAY,UACZN,cAAe,MAGnB7B,EAAApS,EAAA,oBAGmB,WAAd4F,EAAsB,CAAAwM,EAAApS,EAAA,SAQ1B,GANC0O,GAAQ/I,EACXnC,OAAO,SAAA1D,GAAC,OAAIA,EAAE2F,EAAQ,KAAO3F,EAAE2F,EAAQ,MAAQwQ,OAAOnW,EAAE2F,EAAQ,IAAI,GACpEoN,IAAI,SAAA/S,GAAC,MAAK,CACTkd,OAAQ7Y,OAAOrE,EAAE2F,EAAQ,KAAK6R,OAC9B0K,YAAa7d,OAAOrE,EAAE2F,EAAQ,KAAK6R,OACnCrW,OAAQnB,EAAE2F,EAAQ,IACnB,GAEkB,IAAjBiJ,GAAMvP,OAAY,CAAAiT,EAAApS,EAAA,SAC8B,OAAlDiiB,UAAU,wCAAwC7P,EAAAxR,EAAA,WAK9C+N,GAAmB,SAACD,GACxB,IAAME,EAAa,IAAI6I,IACjByK,EAAW,IAAIzK,IACf0K,EAAW,IAAI1K,IAGf5I,EAAW,IAAIgK,IACrBnK,EAAM7K,QAAQ,SAAAue,GACZvT,EAASoS,IAAImB,EAAKpF,QAClBnO,EAASoS,IAAImB,EAAKJ,aAEbG,EAASzK,IAAI0K,EAAKpF,SACrBmF,EAASxK,IAAIyK,EAAKpF,OAAQ,IAE5BmF,EAAStkB,IAAIukB,EAAKpF,QAAQ7a,KAAKigB,EAAKJ,aAEpCE,EAASvK,IAAIyK,EAAKJ,aAAcE,EAASrkB,IAAIukB,EAAKJ,cAAgB,GAAK,EACzE,GAGA,IAAMK,EAAQ,GASd,GARAxT,EAAShL,QAAQ,SAAA8W,GACVuH,EAASxK,IAAIiD,IAAgC,IAAvBuH,EAASrkB,IAAI8c,KACtC0H,EAAMlgB,KAAKwY,GACX/L,EAAW+I,IAAIgD,EAAM,GAEzB,GAGqB,IAAjB0H,EAAMljB,QAAgB0P,EAAS2E,KAAO,EAAG,CAC3C,IAAM8O,EAAYvgB,MAAMe,KAAK+L,GAAU,GACvCwT,EAAMlgB,KAAKmgB,GACX1T,EAAW+I,IAAI2K,EAAW,EAC5B,CAIA,IADA,IAAMC,EAAY,IAAI1J,IAAM2J,EAAA,WAE1B,IAAMC,EAAUJ,EAAMK,QACtB,GAAIH,EAAU7K,IAAI+K,GAAU,OAAF,EAC1BF,EAAUtB,IAAIwB,GAEd,IAAME,EAAe/T,EAAW/Q,IAAI4kB,IAAY,GAC9BN,EAAStkB,IAAI4kB,IAAY,IAEjC5e,QAAQ,SAAA+e,GAChB,IAAMC,EAAWF,EAAe,EAC1BG,EAAgBlU,EAAW/Q,IAAI+kB,SAEf3lB,IAAlB6lB,GAA+BD,EAAWC,IAC5ClU,EAAW+I,IAAIiL,EAAUC,GAGtBN,EAAU7K,IAAIkL,IACjBP,EAAMlgB,KAAKygB,EAEf,EACF,EApBOP,EAAMljB,OAAS,GAACqjB,IA6BvB,OANA3T,EAAShL,QAAQ,SAAA8W,GACV/L,EAAW8I,IAAIiD,IAClB/L,EAAW+I,IAAIgD,EAAM,EAEzB,GAEO/L,CACT,EAGMA,GAAaD,GAAiBD,IAG9BG,GAAW,IAAIgK,IACrBnK,GAAM7K,QAAQ,SAAAue,GACZvT,GAASoS,IAAImB,EAAKpF,QAClBnO,GAASoS,IAAImB,EAAKJ,YACpB,GAGMxa,GAAa,GACbuH,GAAc,IAAI0I,IAExB5I,GAAShL,QAAQ,SAAA8W,GACf,IAAMoI,EAAQnU,GAAW/Q,IAAI8c,GACxB5L,GAAY2I,IAAIqL,IACnBhU,GAAY4I,IAAIoL,EAAO,IAEzBhU,GAAYlR,IAAIklB,GAAO5gB,KAAKwY,EAC9B,GAGM3L,GAAejN,MAAMe,KAAKiM,GAAYzL,QAAQuU,KAAK,SAACjX,EAAGnB,GAAC,OAAKmB,EAAInB,CAAC,GACxEuP,GAAanL,QAAQ,SAACkf,EAAOC,GAC3B,IAAMC,EAAelU,GAAYlR,IAAIklB,GACrCE,EAAapL,OAEboL,EAAapf,QAAQ,SAAC8W,EAAMvO,GAC1B,IAAM8W,EAAcF,EAAa,EAEjCxb,GAAWrF,KAAK,CACdsW,SAAUkC,EACV4F,MAAO2C,EACPrL,KAAMzL,EAAY,EAClBwR,OAAuB,IAAfoF,EAAmB,OAAS,MAExC,EACF,GAGM/T,GAAY,GAAHgG,OAAOzN,GAAU7E,EAAK+L,KAGrC7I,EAAO,CACLoN,QAAS,6CACTC,YAAa,iBACb4E,MAAO,IACPC,OAAQ,IACR0B,QAAS,CAAEoD,OAAQ,GAAIC,KAAM,GAAIC,MAAO,GAAIH,IAAK,IACjDzJ,WAAY,QACZgQ,QAAS,CACP,CACE/f,KAAM,cACNnC,MAAO,GACPiS,YAAa,sCAEf,CACE9P,KAAM,OACNnC,MAAO,SACPiS,YAAa,kCAGjBvN,KAAM,CACJ,CACEvC,KAAM,QACNoC,OAAQyJ,IAEV,CACE7L,KAAM,SACN4Z,OAAQ,QACRrD,UAAW,CACT,CAAEpG,KAAM,SAAU4J,KAAM,wBACxB,CAAE5J,KAAM,UAAWuG,GAAI,MAAOqD,KAAM,4BACpC,CAAE5J,KAAM,UAAWuG,GAAI,OAAQqD,KAAM,qCACrC,CAAE5J,KAAM,UAAWkJ,OAAQ,CAAC,MAAO,OAAQ,UAC3C,CAAElJ,KAAM,UAAWkJ,OAAQ,CAAC,MAAO,SACnC,CACElJ,KAAM,SACNzQ,KAAM,QACNtF,IAAK,WACLgI,OAAQ,CAAC,QAAS,OAAQ,MAAO,UACjCiX,OAAQ,CAAC,QACT3C,GAAI,CAAC,QAAS,OAAQ,MAAO,WAE/B,CACEvG,KAAM,YACNkJ,OAAQ,CAAC,QAAS,QAAS,OAAQ,MAAO,UAC1CS,QAAS,CAAC,MAAO,QACjBD,IAAK,CAAC,MAAO,MAAO,MAAO,MAAO,OAClCnD,GAAI,CAAC,QAAS,QAAS,OAAQ,MAAO,WAExC,CACEvG,KAAM,YACNkJ,OAAQ,CAAC,QAAS,QAAS,OAAQ,MAAO,UAC1CS,QAAS,CAAC,QACVD,IAAK,CAAC,MAAO,MAAO,MAAO,MAAO,OAClCnD,GAAI,CAAC,QAAS,QAAS,OAAQ,MAAO,WAExC,CAAEvG,KAAM,UAAWuG,GAAI,MAAOqD,KAAM,+BAGxC,CACE/Z,KAAM,WACN4Z,OAAQ,CAAC,UACTrD,UAAW,CACT,CACEpG,KAAM,YACNkJ,OAAQ,CAAC,SACTS,QAAS,CAAC,SACVD,IAAK,CAAC,OACNnD,GAAI,CAAC,UAEP,CACEvG,KAAM,YACNkJ,OAAQ,CAAC,SACTQ,IAAK,CAAC,OACNnD,GAAI,CAAC,YAIX,CACE1W,KAAM,gBACN4Z,OAAQ,CAAC,UACTrD,UAAW,CACT,CACEpG,KAAM,UACNuG,GAAI,SACJqD,KAAM,2DAER,CAAE5J,KAAM,UAAWuG,GAAI,OAAQqD,KAAM,qBACrC,CAAE5J,KAAM,UAAWuG,GAAI,cAAeqD,KAAM,+BAC5C,CAAE5J,KAAM,UAAWkJ,OAAQ,CAAC,OAAQ,gBACpC,CACElJ,KAAM,QACN2J,QAAS,CAAC,SACVrF,KAAM,CAAEjE,MAAO,OAAQmG,MAAO,cAC9BnG,MAAO,cACPmF,OAAQ,CAAE+E,OAAQ,SAEpB,CAAEvK,KAAM,UAAW4J,KAAM,6BAA8BrD,GAAI,QAG/D,CACE1W,KAAM,aACN4Z,OAAQ,CAAC,iBACTrD,UAAW,CAAC,CAAEpG,KAAM,SAAU4J,KAAM,0BAEtC,CACE/Z,KAAM,YACN4Z,OAAQ,CAAC,SACTrD,UAAW,CACT,CAAEpG,KAAM,SAAU4J,KAAM,wBACxB,CACE5J,KAAM,SACNzQ,KAAM,aACNtF,IAAK,OACLgI,OAAQ,CAAC,KAAM,KAAM,QAAS,QAC9BiX,OAAQ,CAAC,UACT3C,GAAI,CAAC,gBAAiB,gBAAiB,cAAe,eAExD,CACEvG,KAAM,SACNzQ,KAAM,aACNtF,IAAK,OACLgI,OAAQ,CAAC,KAAM,KAAM,QAAS,QAC9BiX,OAAQ,CAAC,eACT3C,GAAI,CAAC,qBAAsB,qBAAsB,mBAAoB,oBAEvE,CACEvG,KAAM,QACN2J,QAAS,CAAC,UACVrF,KAAM,CAAEjE,MAAO,kBAAmBmG,MAAO,cACzCnG,MAAO,QACPmF,OAAQ,OACRe,GAAI,CAAC,OAAQ,SAEf,CAAEvG,KAAM,UAAW4J,KAAM,iCAAkCrD,GAAI,OAC/D,CAAEvG,KAAM,UAAW4J,KAAM,wBAAyBrD,GAAI,OACtD,CACEvG,KAAM,QACN2J,QAAS,CAAC,eACVrF,KAAM,CAAEjE,MAAO,aAAcmG,MAAO,cACpCnG,MAAO,QACPmF,OAAQ,OACRe,GAAI,CAAC,OAAQ,SAEf,CAAEvG,KAAM,UAAW4J,KAAM,sCAAuCrD,GAAI,OACpE,CAAEvG,KAAM,UAAW4J,KAAM,wBAAyBrD,GAAI,OACtD,CAAEvG,KAAM,UAAW4J,KAAM,8BAA+BrD,GAAI,OAC5D,CAAEvG,KAAM,UAAW4J,KAAM,8BAA+BrD,GAAI,OAC5D,CACEvG,KAAM,WACN+H,OAAQ,aACRjH,MAAO,WACPwK,QAAS,CAAE1B,KAAM,yBACjBwB,QAAS,CAAExB,KAAM,4DACjB2B,QAAS,CAAE3B,KAAM,yBACjByB,QAAS,CAAEzB,KAAM,uCAEnB,CAAE5J,KAAM,UAAW4J,KAAM,wCAAyCrD,GAAI,kBAI5EsD,OAAQ,CACN,CACEha,KAAM,IACNmQ,KAAM,OACNhO,MAAO,QACP2T,OAAQ,CAAEvT,KAAM,aAAciO,MAAO,SACrCjM,aAAc,KAEhB,CACEvE,KAAM,IACNmQ,KAAM,SACNhO,MAAO,SACP2T,OAAQ,CAAEvT,KAAM,aAAciO,MAAO,MACrCwP,SAAS,GAEX,CACEhgB,KAAM,QACNmQ,KAAM,UACNhO,MAAO,CACL,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,WAE9C2T,OAAQ,CAAEvT,KAAM,SAAUiO,MAAO,UAGrCmK,MAAO,CACL,CACExK,KAAM,OACNzQ,KAAM,CAAE6C,KAAM,cACdgY,OAAQ,CACNE,OAAQ,CACNlK,EAAG,CAAEE,MAAO,IAAKD,MAAO,SACxBkE,MAAO,CAAEjE,MAAO,IAAKwP,KAAM,GAC3B5iB,EAAG,CAAEoT,MAAO,IAAKD,MAAO,MACxBqH,GAAI,CAAEpH,MAAO,IAAKD,MAAO,MACzBsG,KAAM,CAAErG,MAAO,QAASD,MAAO,QAC/BoK,YAAa,CAAE/c,MAAO,KACtBuU,YAAa,CAAEvU,MAAO,GACtBoS,OAAQ,CAAEQ,MAAO,QAASD,MAAO,SAEnC2L,MAAO,CACL9L,QAAS,CAAEqK,OAAQ,8DACnBE,YAAa,CAAE/c,MAAO,MAI5B,CACEsS,KAAM,OACNnQ,KAAM,QACNN,KAAM,CAAE6C,KAAM,aACd2d,MAAM,EACN3F,OAAQ,CACNE,OAAQ,CACNrI,YAAa,CAAE5B,MAAO,eACtBrF,KAAM,CAAEqF,MAAO,QACf8K,cAAe,CAAEZ,OAAQ,OACzBzK,OAAQ,CAAEO,MAAO,cAAeC,MAAO,UAEzC0L,MAAO,CACLb,cAAe,CAAEzd,MAAO,IACxBwS,QAAS,CACPqK,OAAQ,uGAKhB,CACEvK,KAAM,QACNnQ,KAAM,YACNma,OAAQ,EACRza,KAAM,CACJ6c,MAAO,CACLha,KAAM,aACNvC,KAAM,aACN8Z,QAAS,CAAC,OAAQ,QAAS,KAAM,QAAS,YAG9CoG,MAAM,EACN3F,OAAQ,CACNE,OAAQ,CACNlK,EAAG,CACDmK,OAAQ,mGAEVyF,GAAI,CAAE1P,MAAO,IAAKiK,OAAQ,YAC1BhG,MAAO,CAAEgG,OAAQ,KACjB/F,OAAQ,CAAE+F,OAAQ,OAGtBC,MAAO,CACL,CACExK,KAAM,OACNnQ,KAAM,UACNN,KAAM,CAAE6C,KAAM,cACdgY,OAAQ,CACNE,OAAQ,CACNlK,EAAG,CAAE1S,MAAO,GACZR,EAAG,CAAEQ,OAAQ,GACbqX,KAAM,CAAE1E,MAAO,QACfuE,MAAO,CAAE2F,OAAQ,2CACjBlE,WAAY,CAAE3Y,MAAO,QACrBoX,SAAU,CAAEpX,MAAO,OAIzB,CACEsS,KAAM,OACNnQ,KAAM,SACNN,KAAM,CAAE6C,KAAM,cACdgY,OAAQ,CACNE,OAAQ,CACNlK,EAAG,CAAE1S,MAAO,GACZR,EAAG,CAAEQ,MAAO,IACZqX,KAAM,CAAEwF,OAAQ,+BAChB3F,MAAO,CAAE2F,OAAQ,2CACjBzF,SAAU,CAAEpX,MAAO,SAM7B,CACEsS,KAAM,OACNzQ,KAAM,CAAE6C,KAAM,aACdgY,OAAQ,CACNE,OAAQ,CACNlK,EAAG,CAAEC,MAAO,YAAamF,QAAS,GAClCb,GAAI,CAAEtE,MAAO,YAAamF,OAAQ,GAClCtY,EAAG,CAAEmT,MAAO,YAAamF,QAAS,GAClCkC,GAAI,CAAErH,MAAO,YAAamF,OAAQ,GAClCmB,KAAM,CAAEjZ,MAAO,SACfyT,QAAS,CAAEzT,MAAO,IAClBuiB,aAAc,CAAEviB,MAAO,OAK/BmS,OAAQ,CACNrB,KAAM,CAAEsB,OAAQ,eAChBiF,KAAM,CAAED,SAAU,GAAI6B,KAAM,aAE9B9H,EAAApS,EAAA,oBAGqB,gBAAd4F,EAA2B,CAAAwM,EAAApS,EAAA,cAE9ByF,EAAQtG,OAAS,GAAC,CAAAiT,EAAApS,EAAA,eACZ,IAAIV,MAAM,sEAAqE,QAIrF4P,GAAY,UACVnF,GAAgBpE,EAAKkN,IAAI,SAAAC,GAC3B,IAAI2Q,EAAY9f,EAAA,GAAQmP,GAGlB4Q,EAAgB5Q,EAAIrN,EAAQ,IAClC,GAA6B,iBAAlBie,GAA8BA,EAAgB,MAEzDD,EAAahe,EAAQ,IAAM,IAAIoQ,KAA+B,OAAzB6N,EAAgB,OAAiB,KACtExU,GAAY,gBACL,GAA6B,iBAAlBwU,GAA8BA,EAAczM,SAAS,KAAM,CAE7E,IAAM0M,EAAa,IAAI9N,KAAK6N,GACvBzN,MAAM0N,EAAWzN,aAClBuN,EAAahe,EAAQ,IAAMke,EAC3BzU,GAAY,WAEhB,CAGA,OAAOuU,CACX,GAGMrU,GAA4B,aAAdF,GAA2B,CAC3C0E,MAAOnO,EAAQ,GACf8N,KAAM,WACNQ,KAAM,CACNmF,QAAQ,EACRjB,OAAQ,QACRwF,SAAU,EACVzJ,MAAOvO,EAAQ,GACfwO,cAAe,GACfC,cAAe,GACfK,WAAY,UACZC,WAAY,UACZiB,YAAa,KAEb,CACA7B,MAAOnO,EAAQ,GACf8N,KAAM,UACNQ,KAAM,CACNmF,QAAQ,EACRuE,SAAU,EACVzJ,MAAOvO,EAAQ,GACfwO,cAAe,GACfC,cAAe,GACfK,WAAY,UACZC,WAAY,YAKhB3O,EAAI/B,EAAA,CACAmP,QAAS,kDACT6E,MAAO,IACPC,OAAQ,IACR5E,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1BH,YAAa,mCACbvN,KAAM,CAAEH,OAAQuE,IAChBuJ,KAAM,CACNC,KAAM,OACNE,SAAS,EACTsO,YAAa,QACbrN,QAAS,IAEThB,SAAU,CACVC,EAAGvE,GACH3O,EAAG,CACCif,UAAW,MACX9L,MAAOnO,EAAQ,GACf8N,KAAM,eACNQ,KAAM,KACNwM,MAAO,UAEXpM,MAAO,CACHP,MAAOnO,EAAQ,GACf8N,KAAM,UACNM,MAAO,CAAE6B,OAAQ,eACjBtB,OAAQ,CACRJ,MAAOvO,EAAQ,GACfyO,cAAe,GACfD,cAAe,GACfqH,OAAQ,UAGZ7H,QAAS,CACL,CACAG,MAAOnO,EAAQ,GACf8N,KAAoB,aAAdrE,GAA2B,WAAa,UAC9C8E,MAAO,SACPiE,OAAsB,aAAd/I,GAA2B,gBAAajS,GAEhD,CAAE2W,MAAOnO,EAAQ,GAAI8N,KAAM,UAAWS,MAAO,UAC7C,CAAEJ,MAAOnO,EAAQ,GAAI8N,KAAM,eAAgBS,MAAO,QAASiE,OAAQ,WAEtE,SACO,CACR3D,KAAM,WACNF,OAAQ,CACJI,WAAY,UACZD,WAAY,aAGlBnC,EAAApS,EAAA,oBAGmB,WAAd4F,EAAsB,CAAAwM,EAAApS,EAAA,SAEvBqP,GAAa1M,EAAO,IAAIkW,IAAIlT,EAAKkN,IAAI,SAAAvV,GAAC,OAAIA,EAAEmI,EAAQ,GAAG,KACvD6U,GAAe3F,KAAKC,IAAI,IAA4B,IAAvBvF,GAAclQ,QAGjD0G,EAAI/B,EAAA,CACAmP,QAAS,kDACTC,YAAa,oCACbC,WAAY,QACZ2E,MAAOwC,GACPvC,OAPkB,IAQlB3E,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B1N,KAAM,CAAEH,OAAQG,GAChBqS,MAAO,CACP,CACI1E,KAAM,CACNC,KAAM,OACNwO,YAAa,WACbtO,SAAS,EACTiB,QAAS,IAEThB,SAAU,CACVC,EAAG,CACCC,MAAOnO,EAAQ,GACf8N,KAAM,UACNM,MAAO,CACPN,KAAM,QACNkG,QAAS,IAET1F,KAAM,CACNC,MAAOvO,EAAQ,GACfgQ,YAAa,GACbxB,cAAe,GACfC,cAAe,GACfsF,aAAc,GACdoK,aAAc,KAGlBnjB,EAAG,CACCif,UAAW,MACX9L,MAAOnO,EAAQ,GACf8N,KAAM,eACNQ,KAAM,CACNC,MAAOvO,EAAQ,GACfwO,cAAe,GACfC,cAAe,GACfsE,MAAM,EACN0G,YAAa,IAEbqB,MAAO,UAEXpM,MAAO,CACHP,MAAOnO,EAAQ,GACf8N,KAAM,UACNa,OAAQ,CACRJ,MAAOvO,EAAQ,GACfyO,cAAe,GACfD,cAAe,GACfqH,OAAQ,UAGZvB,MAAO,CACH2F,UAAW,MACX9L,MAAOnO,EAAQ,GACf8N,KAAM,oBAIb,SACO,CACRxB,KAAM,CAAEsB,OAAQ,eAChBiB,KAAM,WACNP,KAAM,CACFiF,OAAO,EACPR,MAAM,EACN/D,UAAW,UACXyK,YAAa,GACb2E,UAAW,EACX3K,QAAQ,EACR3E,WAAY,UACZC,WAAY,WAEhBJ,OAAQ,CACJ4K,UAAW,WACXa,gBAAiB,OACjBrL,WAAY,UACZkJ,UAAW,WACXnJ,WAAY,UACZuL,WAAY,SACZC,WAAY,MAGlB3N,EAAApS,EAAA,oBAGmB,cAAd4F,EAAyB,CAAAwM,EAAApS,EAAA,SAClC6F,EAAI/B,EAAA,CACFmP,QAAS,kDACTC,YAAa,iDACbC,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B1N,KAAM,CAAEH,OAAQG,GAChB2N,KAAM,CACNC,KAAM,OACNyK,YAAa,GACbU,cAAe,EACflJ,YAAa,EACbuM,YAAa,YAEbjK,MAAO,IACPC,OAAQ,GACRrE,SAAU,CACVC,EAAG,CACCC,MAAOnO,EAAQ,GACf8N,KAAM,UACNS,MAAOvO,EAAQ,IAEnBhF,EAAG,CACCif,UAAW,MACX9L,MAAOnO,EAAQ,GACf8N,KAAM,eACNM,MAAO,CAAEtO,MAAO,CAAC,IAAK,KACtBwO,KAAM,CACNC,MAAO,KACPxO,OAAQ,CAAC,GACT0T,QAAQ,EACR0E,QAAQ,EACR5E,OAAO,IAGXlG,IAAK,CACDc,MAAOnO,EAAQ,GACf8N,KAAM,UACNS,MAAOvO,EAAQ,GACfma,OAAQ,CACR5L,MAAO,KACPyB,WAAY,EACZ2K,YAAa,OACbtH,WAAY,OACZU,aAAc,GAEd3B,KAAM,CAAEjE,MAAOnO,EAAQ,GAAIoU,GAAI,MAAOE,MAAO,cAEjDG,KAAM,CACFtG,MAAOnO,EAAQ,GACf8N,KAAM,UACNa,OAAQ,KACRP,MAAO,CAAE6B,OAAQ,YAGrBlR,QAAS,CAAEqP,MAAO,CAAEpT,EAAG,iBAAiB,SAChC,CACRsR,KAAM,CAAEsB,OAAQ,eAChBsM,MAAO,CAAEO,QAAS,IAClBN,OAAQ,CACJ3L,cAAe,GACfsF,gBAAiB,IACjB9D,WAAY,EACZqO,YAAa,MACb1D,YAAa,MACb5G,cAAe,IAEnBzF,KAAM,CACFmF,QAAQ,EACRV,MAAM,EACNQ,OAAO,EACPwE,UAAW,EACXvJ,cAAe,GACfC,cAAe,GACf2L,gBAAiB,IACjBrL,WAAY,aAGhBpC,EAAApS,EAAA,oBAGqB,cAAd4F,EAAyB,CAAAwM,EAAApS,EAAA,SAClC6F,EAAO,CACLoN,QAAS,6CACTC,YAAa,kCACb4E,MAAO,IACPC,OAAQ,IACR0B,QAAS,EACTtG,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B1N,KAAM,CACN,CACIvC,KAAM,QACNoC,OAAQG,EACRgU,UAAW,CACX,CACIpG,KAAM,eACNK,MAAOnO,EAAQ,GACfse,KAAM,QACNC,QAAS,aACTC,UAAW,0+BAEf,CACI1Q,KAAM,UACNuG,GAAI,QACJqD,KAAM,kCAEV,CACI5J,KAAM,UACNuG,GAAI,SACJqD,KAAM,qCAMdC,OAAQ,CACR,CACIha,KAAM,QACNmQ,KAAM,UACN2F,OAAQ,CAAEvT,KAAM,QAASiO,MAAO,QAChCrO,MAAO,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,aAInEwY,MAAO,CACP,CACIxK,KAAM,OACNzQ,KAAM,CAAE6C,KAAM,SACdgY,OAAQ,CACRa,MAAO,CACHlG,KAAM,CAAE1E,MAAO,QACfuE,MAAO,CAAElX,MAAO,UAChB6H,SAAU,CAAE7H,MAAO,cACnBiZ,KAAM,CAAErG,MAAO,QAASD,MAAO,SAEnCiK,OAAQ,CACJG,YAAa,CAAE/c,MAAO,IAE1Bse,MAAO,CACHvB,YAAa,CAAE/c,MAAO,MAG1B0Y,UAAW,CACX,CACIpG,KAAM,YACNC,KAAM,CAAC,IAAK,KACZ8E,KAAM,CAAE1E,MAAO,QACfsQ,OAAQ,CAAEtQ,MAAO,eACjBU,KAAM,wBACN+D,SAAU,CAAEzE,MAAO,eACnBgG,WAAY,CAAEhG,MAAO,gBACrBuQ,cAAe,CAAC,GAAI,IACpB1K,QAAS,OAKjBrH,EAAApS,EAAA,oBAGqB,SAAd4F,EAAoB,CAAAwM,EAAApS,EAAA,SAC3B6F,EAAO,CACLoN,QAAS,kDACTC,YAAa,kCACbC,WAAY,QACZxN,KAAM,CAAEH,OAAQG,GAChB2N,KAAM,CACJC,KAAM,OACNE,SAAS,EACTiN,KAAM,CACJvM,MAAO,WAETA,MAAO,CACLiQ,GAAI,EACJC,GAAI,EACJnM,GAAI,EACJ+C,GAAI,EACJqJ,SAAU,SACVC,MAAO,CACL,CACExL,OAAQ,EACR5E,MAAO,SAET,CACE4E,OAAQ,EACR5E,MAAO,cAKfT,SAAQ/P,EAAA,CACNgQ,EAAG,CACDC,MAAOnO,EAAQ,GACf8N,KAAM,UACNQ,KAAM,CACJC,MAAOvO,EAAQ,GACfwO,cAAe,GACfC,cAAe,KAGnBzT,EAAG,CACDmT,MAAOnO,EAAQ,GACf8N,KAAM,eACNQ,KAAM,CACJC,MAAOvO,EAAQ,GACfwO,cAAe,GACfC,cAAe,MAIfzO,EAAQtG,QAAU,GAAK,CACzBgV,MAAO,CACLP,MAAOnO,EAAQ,GACf8N,KAAM,UACNa,OAAQ,CACNJ,MAAOvO,EAAQ,GACfyO,cAAe,GACfD,cAAe,OAKvBb,OAAQ,CACNrB,KAAM,CAAEsB,OAAQ,eAChBiB,KAAM,WACNP,KAAM,CACJQ,WAAY,UACZC,WAAY,UACZC,UAAW,WAEbL,OAAQ,CACNI,WAAY,UACZD,WAAY,aAGhBnC,EAAApS,EAAA,oBAGmB,QAAd4F,EAAmB,CAAAwM,EAAApS,EAAA,SACpBuP,GAAgB9J,EAAQ,GACxB+J,GAAa/J,EAAQ,GACrBgK,GAAahK,EAAQtG,QAAU,EAAIsG,EAAQ,GAAK,KAGlDiK,GAAiB,CAAC,EAClBD,IACF9J,EAAK9B,QAAQ,SAAAvG,GACX,IAAMknB,EAAMlnB,EAAEiS,IACRkV,EAAMnnB,EAAEmS,IACTC,GAAe8U,KAAM9U,GAAe8U,GAAO,IAAI3L,KACpDnJ,GAAe8U,GAAKvD,IAAIwD,EAC1B,GAEI9U,GAAgBF,IAAc/R,OAAO8H,OAAOkK,IAAgB2L,KAAK,SAAAqJ,GAAM,OAAIA,EAAOlR,KAAO,CAAC,GAG5F5D,GAAe,CAAC,EACdC,GAAalK,EAAKkN,IAAI,SAAAvV,GAC1B,IAAME,EAAM,GAAHyX,OAAM3X,EAAEiS,IAAc,KAAA0F,OAAIxF,GAAanS,EAAEmS,IAAc,QAC1D+G,EAAS5G,GAAapS,IAAQ,EAEpC,OADAoS,GAAapS,GAAOgZ,EAAQ,EAC5B7S,EAAAA,EAAA,GAAYrG,GAAC,IAAEqnB,WAAYnO,GAC7B,GAEA3Q,EAAI/B,EAAA,CACFmP,QAAS,kDACTC,YAAa,iCACbC,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B1N,KAAM,CAAEH,OAAQqK,IAChByD,KAAM,CAAEC,KAAM,MAAOE,SAAS,GAC9BC,SAAQ/P,EAAAA,EAAA,CACNlD,EAAG,CACDmT,MAAOrE,GACPgE,KAAM,UACNQ,KAAM,CACJC,MAAOzE,GACP0E,cAAe,GACfC,cAAe,KAGnBP,EAAG,CACDC,MAAOpE,GACP+D,KAAM,eACNQ,KAAM,CACJC,MAAOxE,GACPyE,cAAe,GACfC,cAAe,IAEjBqM,MAAO,SAEL5Q,IAAiB,CAAEiV,QAAS,CAAEhR,MAAOnE,MACrCA,IAAc,CAChB0E,MAAO,CACLP,MAAOnE,GACP8D,KAAM,UACNa,OAAQ,CACNJ,MAAOvE,GACPyE,cAAe,GACfD,cAAe,IAEjBJ,MAAO,CAAE6B,OAAQ,eAEnBsI,YAAa,CACXpK,MAAO,aACPL,KAAM,eACNM,MAAO,CAAEqF,OAAQ,CAAC,EAAG,GAAI3T,MAAO,CAAC,EAAG,SAGzC,SACO,CACN+O,KAAM,WACNP,KAAM,CACJQ,WAAY,UACZC,WAAY,UACZC,UAAW,WAEbL,OAAQ,CACNI,WAAY,UACZD,WAAY,aAGhBnC,EAAApS,EAAA,oBAGmB,WAAd4F,EAAsB,CAAAwM,EAAApS,EAAA,SACvBuP,GAAgB9J,EAAQ,GACxB+J,GAAa/J,EAAQ,GACrBgK,GAAahK,EAAQtG,QAAU,EAAIsG,EAAQ,GAAK,KAGlDiK,GAAiB,CAAC,EAClBD,IACF9J,EAAK9B,QAAQ,SAAAvG,GACX,IAAMknB,EAAMlnB,EAAEiS,IACRkV,EAAMnnB,EAAEmS,IACTC,GAAe8U,KAAM9U,GAAe8U,GAAO,IAAI3L,KACpDnJ,GAAe8U,GAAKvD,IAAIwD,EAC1B,GAEI9U,GAAgBF,IAAc/R,OAAO8H,OAAOkK,IAAgB2L,KAAK,SAAAqJ,GAAM,OAAIA,EAAOlR,KAAO,CAAC,GAG5F5D,GAAe,CAAC,EACdC,GAAalK,EAAKkN,IAAI,SAAAvV,GAC1B,IAAME,EAAM,GAAHyX,OAAM3X,EAAEiS,IAAc,KAAA0F,OAAIxF,GAAanS,EAAEmS,IAAc,QAC1D+G,EAAS5G,GAAapS,IAAQ,EAEpC,OADAoS,GAAapS,GAAOgZ,EAAQ,EAC5B7S,EAAAA,EAAA,GAAYrG,GAAC,IAAEqnB,WAAYnO,GAC7B,GAEA3Q,EAAI/B,EAAA,CACFmP,QAAS,kDACTC,YAAa,oCACbC,WAAY,QACZC,OAAQ,CAAErB,KAAM,CAAEsB,OAAQ,gBAC1B1N,KAAM,CAAEH,OAAQqK,IAChByD,KAAM,CAAEC,KAAM,MAAOE,SAAS,GAC9BC,SAAQ/P,EAAAA,EAAA,CACNgQ,EAAG,CACDC,MAAOrE,GACPgE,KAAM,UACNQ,KAAM,CACJC,MAAOzE,GACP0E,cAAe,GACfC,cAAe,KAGnBzT,EAAG,CACDmT,MAAOpE,GACP+D,KAAM,eACNQ,KAAM,CACJC,MAAOxE,GACPyE,cAAe,GACfC,cAAe,IAEjBqM,MAAO,SAEL5Q,IAAiB,CAAEkV,QAAS,CAAEjR,MAAOnE,MACrCA,IAAc,CAChB0E,MAAO,CACLP,MAAOnE,GACP8D,KAAM,UACNa,OAAQ,CACNJ,MAAOvE,GACPyE,cAAe,GACfD,cAAe,IAEjBJ,MAAO,CAAE6B,OAAQ,eAEnBsI,YAAa,CACXpK,MAAO,aACPL,KAAM,eACNM,MAAO,CAAEqF,OAAQ,CAAC,EAAG,GAAI3T,MAAO,CAAC,EAAG,SAGzC,SACO,CACN+O,KAAM,WACNP,KAAM,CACJQ,WAAY,UACZC,WAAY,UACZC,UAAW,WAEbL,OAAQ,CACNI,WAAY,UACZD,WAAY,aAGhBnC,EAAApS,EAAA,oBAGmB,cAAd4F,EAAyB,CAAAwM,EAAApS,EAAA,cAE5ByF,EAAQtG,OAAS,GAAC,CAAAiT,EAAApS,EAAA,SACsE,OAA1F2S,QAAQgK,MAAM,4EAA4EvK,EAAAxR,EAAA,WAKtFyP,GAAUsE,KAAKC,IAAGlR,MAARiR,KAAIhS,EAAQgD,EAAKkN,IAAI,SAAAvV,GAAC,OAAIqX,KAAKqG,IAAI1d,EAAEmI,EAAQ,KAAO,EAAE,KAChE6K,GAAWqE,KAAKC,IAAGlR,MAARiR,KAAIhS,EAAQgD,EAAKkN,IAAI,SAAAvV,GAAC,OAAIqX,KAAKqG,IAAI1d,EAAEmI,EAAQ,KAAO,EAAE,KACjE6E,GAAWqK,KAAKC,IAAIvE,GAASC,IAEnCzK,EAAO,CACLoN,QAAS,kDACTC,YAAa,uCACbC,WAAY,QACZC,OAAQ,CACNrB,KAAM,CAAEsB,OAAQ,MAChBU,KAAM,CAAEyE,MAAM,IAEhB7S,KAAM,CAAEH,OAAQG,GAChBua,QAAS,EACT4E,QAAS,CACP,CACEnL,UAAW,CAAC,CAAEnW,OAAQ,CAAEoQ,MAAOnO,EAAQ,GAAIsf,OAAO,KAClD/Q,MAAOvO,EAAQ,GACf6N,KAAM,MACNI,SAAU,CACRjT,EAAG,CACDmT,MAAOnO,EAAQ,GACfsO,KAAM,KACN8D,KAAM,cAERlE,EAAG,CACD+L,UAAW,MACX9L,MAAOnO,EAAQ,GACfuO,MAAO,KACPD,KAAM,CAAEkE,OAAQ,KAChBpE,MAAO,CAAEqF,OAAQ,CAAC,EAAG5O,KACrBuN,KAAM,cAER1D,MAAO,CACLlT,MAAO,aAIb,CACE6W,MAAO,GACP/F,KAAM,CAAEsB,OAAQ,MAChBC,KAAM,CACJC,KAAM,OACN4E,MAAO,UAETzE,SAAU,CACRjT,EAAG,CACDmT,MAAOnO,EAAQ,GACf8N,KAAM,UACNQ,KAAM,KACN8D,KAAM,cAERS,KAAM,CAAE1E,MAAOnO,EAAQ,GAAI8N,KAAM,aAGrC,CACEoG,UAAW,CAAC,CAAEnW,OAAQ,CAAEoQ,MAAOnO,EAAQ,GAAIsf,OAAO,KAClD/Q,MAAOvO,EAAQ,GACf6N,KAAM,MACNI,SAAU,CACRjT,EAAG,CACDmT,MAAOnO,EAAQ,GACfuO,MAAO,KACPD,KAAM,KACN8D,KAAM,cAERlE,EAAG,CACD+L,UAAW,MACX9L,MAAOnO,EAAQ,GACfuO,MAAO,KACPD,KAAM,CAAEkE,OAAQ,KAChBpE,MAAO,CAAEqF,OAAQ,CAAC,EAAG5O,MAEvB6J,MAAO,CACLlT,MAAO,eAKfmR,EAAApS,EAAA,oBAGmB,aAAd4F,EAAwB,CAAAwM,EAAApS,EAAA,cAC3ByF,EAAQtG,OAAS,GAAC,CAAAiT,EAAApS,EAAA,SACsD,OAA1EiiB,UAAU,gEAAgE7P,EAAAxR,EAAA,WAKtEmJ,GAAgBpE,EAAKkN,IAAI,SAACC,EAAKgC,GAAK,MAAM,CAC9CsJ,MAAOtL,EAAIrN,EAAQ,IACnBxE,MAAOqU,WAAWxC,EAAIrN,EAAQ,MAAQ,EACtCmR,GAAI9B,EACJ1R,KAAMqC,EAAQtG,QAAU,EAAI2T,EAAIrN,EAAQ,IAAM,QAAHwP,OAAWH,EAAQ,GAC/D,GAGKrE,GAAY9N,EAAO,IAAIkW,IAAI9O,GAAc8I,IAAI,SAAAvV,GAAC,OAAIA,EAAE8gB,KAAK,KACzD9D,GAAe3F,KAAKC,IAAI,IAA2B,IAAtBnE,GAAatR,QAIhD0G,EAAO,CACLoN,QAAS,6CACTC,YAAa,kEACb4E,MAAOwC,GACPvC,OAPoB,IAQpB0B,QAAS,CAAEqD,KAAM,EAAGC,MAAO,EAAGH,IAAK,GAAIC,OAAQ,IAC/CxD,SAAU,OACVlG,WAAY,QAEZgQ,QAAS,CACP,CAAE/f,KAAM,KAAMya,OAAQ,aACtB,CAAEza,KAAM,KAAMya,OAAQ,cACtB,CAAEza,KAAM,SAAUnC,MAAO,GACzB,CAAEmC,KAAM,UAAWnC,MAAO,GAC1B,CAAEmC,KAAM,WAAYnC,MAAO,IAC3B,CAAEmC,KAAM,WAAYnC,MAAO,IAC3B,CAAEmC,KAAM,SAAUnC,OAAO,IAG3B0E,KAAM,CACJ,CACEvC,KAAM,SACNoC,OAAQuE,KAIZqT,OAAQ,CACN,CACEha,KAAM,SACNmQ,KAAM,OACN2F,OAAQ,CACNvT,KAAM,SACNiO,MAAO,QACPiE,MAAM,GAERtS,MAAO,SAET,CACEnC,KAAM,QACNmQ,KAAM,UACN2F,OAAQ,CAAEvT,KAAM,SAAUiO,MAAO,SACjCrO,MAAO,CAAEmQ,OAAQ,eAIrB4H,KAAM,CACJ,CACEhC,OAAQ,SACRzH,MAAO,SACP4B,YAAa,GACbqD,WAAY,QACZkM,cAAe,SACftH,UAAW,WACXzJ,cAAe,GACfM,WAAY,UACZyK,UAAW,WACX9K,cAAe,GACfM,WAAY,UACZ0E,QAAQ,EACR+L,YAAa,UACbjM,OAAO,EACPkM,UAAW,YAIfnH,MAAO,CACL,CACE3a,KAAM,QACNmQ,KAAM,SACNzQ,KAAM,CAAE6C,KAAM,UACdgY,OAAQ,CACNa,MAAO,CACLtE,KAAM,CAAErG,MAAO,QAASD,MAAO,SAC/BuR,OAAQ,CAAEtR,MAAO,SAAUD,MAAO,QAASyP,KAAM,IACjD+B,OAAQ,CAAEtH,OAAQ,OAEpBD,OAAQ,CACNrK,KAAM,CAAEsK,OAAQ,sBAChBzK,OAAQ,CAAEpS,MAAO,SACjBuU,YAAa,CAAEvU,MAAO,KACtBsc,OAAQ,CAAEtc,MAAO,GACjBwS,QAAS,CACPqK,OAAQ,qEAGZyB,MAAO,CACLlM,OAAQ,CAAEpS,MAAO,WACjBuU,YAAa,CAAEvU,MAAO,GACtBsc,OAAQ,CAAEtc,MAAO,KAGrB0Y,UAAW,CACT,CACEpG,KAAM,QACN8R,WAAY,IACZC,OAAQ,CAAExH,OAAQ,UAClByH,OAAQ,CACN,CACEC,MAAO,UACPH,WAAY,CAAEvH,OAAQ,WACtBgD,OAAQ,CAAEhD,OAAQ,eAEpB,CACE0H,MAAO,IACP7R,EAAG,SACH8R,SAAU,CAAE3H,OAAQ,aAEtB,CACE0H,MAAO,IACP/kB,EAAG,SACHglB,SAAU,CAAE3H,OAAQ,kBAQhC1K,OAAQ,CACNrB,KAAM,CAAEsB,OAAQ,eAChBiB,KAAM,aAERlC,EAAApS,EAAA,oBAGmB,WAAd4F,EAAsB,CAAAwM,EAAApS,EAAA,SA4B7B,IA1BA2F,EAAKkS,KAAK,SAACjX,EAAGnB,GAAC,OAAKA,EAAEgG,EAAQ,IAAM7E,EAAE6E,EAAQ,GAAG,GAE3CkL,GAAQhL,EAAK2b,OAAO,SAACC,EAAKjkB,GAAC,OAAKikB,EAAMjkB,EAAEmI,EAAQ,GAAG,EAAE,GAErD0C,GAAexC,EAAKyT,MAAM,SAAA9b,GAC9B,IAAMkkB,EAAMlkB,EAAEmI,EAAQ,IACtB,OAAQ+b,GAAO,GAAKA,GAAO,GAAOA,EAAM,GAAKA,GAAO,KAAOkE,OAAOC,UAAUnE,EAC9E,GAGM3Q,GAAsBlL,EAAKkN,IAAI,SAAAvV,GACnC,IAAM2D,EAAQ3D,EAAEmI,EAAQ,IAClByb,EAAQ/Y,IACTlH,GAAS,GAAa,IAARA,GAAa2kB,QAAQ,GAAK3kB,EAAM2kB,QAAQ,IAAM,IAC7D3kB,EAAM4kB,iBAEV,OAAA/hB,EAAAA,EAAAA,EAAAA,EAAA,GACG2B,EAAQ,GAAKnI,EAAEmI,EAAQ,KACvBA,EAAQ,GAAKxE,GAAK,cACLA,EAAQ0P,GAAS,KAAKiV,QAAQ,GAAK,KAAG,QAC7C1E,EAEX,GAEMpQ,GAAUnL,EAAKxG,OACf4R,GAAa,GACV3R,GAAI,EAAGA,GAAI0R,GAAS1R,KACrB6R,GAAU,EAAK7R,IAAK0R,GAAU,GAAM,GAEpChR,GAAI6U,KAAKmB,MADD,EACe,KAAiB,EAAI7E,KAC5CnT,GAAI6W,KAAKmB,MAFU,IAEI,KAAiB,EAAI7E,KAC5CxR,GAAIkV,KAAKmB,MAHuB,IAGT,IAAiB,EAAI7E,KAClDF,GAAW5O,KAAK,OAAD8S,OAAQnV,GAAC,MAAAmV,OAAKnX,GAAC,MAAAmX,OAAKxV,GAAC,MAGtCoG,EAAO,CACLoN,QAAS,kDACTC,YAAa,wBACbC,WAAY,QACZ2E,MAAO,IACPC,OAAQ,IACR3E,OAAQ,CACNrB,KAAM,CAAEsB,OAAQ,eAChBiB,KAAM,YAGR3O,KAAM,CAAEH,OAAQqL,IAEhB6C,SAAU,CACRjT,EAAG,CACD8S,KAAM,UACNK,MAAOnO,EAAQ,GACfoS,KAAM,KACN9D,KAAM,CACJE,cAAe,GACfM,WAAY,UACZP,MAAO,KACPwF,aAAc,KAKpBxB,MAAO,CACL,CACE1E,KAAM,CACJC,KAAM,MACNE,SAAS,EACT6H,OAAQ,cAEV5H,SAAU,CACRC,EAAG,CACDC,MAAOnO,EAAQ,GACf8N,KAAM,eACNgN,MAAO,SACPxM,KAAM,MAERI,MAAO,CACLP,MAAOnO,EAAQ,GACf8N,KAAM,UACNa,OAAQ,KACRP,MAAO,CAAEtO,MAAOwL,KAElB0C,QAAS,CACP,CAAEG,MAAOnO,EAAQ,GAAI8N,KAAM,UAAWS,MAAO,SAC7C,CAAEJ,MAAOnO,EAAQ,GAAI8N,KAAM,eAAgBS,MAAO,QAASiE,OAAQ,QACnE,CAAErE,MAAO,aAAcL,KAAM,UAAWS,MAAO,iBAIrD,CACEV,KAAM,CACJC,KAAM,OACN4E,MAAO,OACPC,GAAI,EACJC,SAAU,GACVuB,WAAY,UACZzF,MAAO,WAETT,SAAU,CACR4E,KAAM,CAAE1E,MAAO,QAASL,KAAM,WAC9BI,EAAG,CACDC,MAAOnO,EAAQ,GACf8N,KAAM,eACNgN,MAAO,SAEPb,UAAW,MAEbjf,EAAG,CAAEmT,MAAOnO,EAAQ,GAAI8N,KAAM,eAIpCnB,EAAApS,EAAA,oBAGmB,QAAd4F,EAAmB,CAAAwM,EAAApS,EAAA,YACH,IAAnByF,EAAQtG,QAAmC,IAAnBsG,EAAQtG,OAAY,CAAAiT,EAAApS,EAAA,SACqB,OAAnE2S,QAAQC,KAAK,sDAAsDR,EAAAxR,EAAA,WAG/DsQ,GAAUvL,EAAKkN,IAAI,SAAAC,GACvB,IAAM1U,EAAG0F,EAAA,GAAM2B,EAAQ,GAAKqN,EAAIrN,EAAQ,KAiBxC,OAdArH,EAAI0nB,OAAWhT,EAAIrN,EAAQ,IAAM6P,WAAWxC,EAAIrN,EAAQ,KAAO,KAC/DrH,EAAI2nB,IAAWjT,EAAIrN,EAAQ,IAAM6P,WAAWxC,EAAIrN,EAAQ,KAAO,KAC/DrH,EAAI4nB,QAAWlT,EAAIrN,EAAQ,IAAM6P,WAAWxC,EAAIrN,EAAQ,KAAO,KAC/DrH,EAAI6nB,SAAWnT,EAAIrN,EAAQ,IAAM6P,WAAWxC,EAAIrN,EAAQ,KAAO,KAGxC,IAAnBA,EAAQtG,QACVf,EAAI8nB,QAAWpT,EAAIrN,EAAQ,IAAM6P,WAAWxC,EAAIrN,EAAQ,KAAO,KAC/DrH,EAAI+nB,SAAWrT,EAAIrN,EAAQ,IAAM6P,WAAWxC,EAAIrN,EAAQ,KAAO,OAG/DrH,EAAI8nB,QAAW,KACf9nB,EAAI+nB,SAAW,MAEV/nB,CACT,GAGI+S,GAAY,KACP/R,GAAI,EAAC,aAAEA,GAAI8R,GAAQ/R,QAAM,CAAAiT,EAAApS,EAAA,YACL,MAAtBkR,GAAQ9R,IAAG4mB,SAA2C,MAAtB9U,GAAQ9R,IAAG8mB,QAAgB,CAAA9T,EAAApS,EAAA,SAC3B,OAAnCmR,GAAYD,GAAQ9R,IAAGqG,EAAQ,IAAI2M,EAAAxR,EAAA,cAFHxB,KAAGgT,EAAApS,EAAA,iBAQjCqR,GAAc5L,EAAQ,GAAG8U,cAActD,SAAS,SAClCxR,EAAQ,GAAG8U,cAActD,SAAS,QAEhD3F,GAAY,CAChBsC,MAAOnO,EAAQ,GACf8N,KAAMlC,GAAc,WAAa,UACjC2C,MAAOvO,EAAQ,GACfoS,KAAM3G,GAAQ2B,IAAI,SAAAvV,GAAC,OAAIA,EAAEmI,EAAQ,GAAG,GACpCsO,KAAM,CACJ0B,WAAYpE,IAAe,GAAK,EAChC4C,cAAe,GACfC,cAAe,GACf+D,OAAQ,IACRzS,OAAQ0L,GAAQ2B,IAAI,SAAAvV,GAAC,OAAIA,EAAEmI,EAAQ,GAAG,KAIpC8L,GAAc,CAClByC,MAAO,QACPC,cAAe,GACfC,cAAe,GACfsE,MAAM,EACN/D,UAAW,WAGb5O,EAAO,CACLoN,QAAS,kDACTC,YAAa,0CACb4E,MAAO,IACPC,OAAQ,IACR5E,WAAY,QACZxN,KAAM,CAAEH,OAAQ0L,IAChBwC,SAAU,CAAEC,EAAGrC,IACf0G,MAAO,GAAF/C,OAAAtS,EACCuO,GAAQmK,KAAK,SAAA/d,GAAC,OAAiB,MAAbA,EAAE4oB,OAAe,GAAI,CAAC,CAC1CvM,UAAW,CAAC,CAAEnW,OAAQ,UAAFyR,OAAYxP,EAAQ,GAAE,UAAAwP,OAAS9D,MACnDmC,KAAM,CAAEC,KAAM,OAAQmB,QAAS,GAAKP,MAAO,aAC3CT,SAAU,CACRjT,EAAG,CAAEmT,MAAO,WAAYL,KAAM,eAAgBQ,KAAMxC,IACpD0J,GAAI,CAAErH,MAAO,UAAWL,KAAM,mBAE7B,IAAE,CACP,CACEoG,UAAW,CAAC,CAAEnW,OAAQ,UAAFyR,OAAYxP,EAAQ,GAAE,UAAAwP,OAAS9D,MACnDmC,KAAM,CAAEC,KAAM,OAAQmB,QAAS,IAAMP,MAAO,aAC5CT,SAAU,CACRjT,EAAG,CAAEmT,MAAO,WAAYL,KAAM,eAAgBQ,KAAMxC,IACpD0J,GAAI,CAAErH,MAAO,UAAWL,KAAM,kBAGlC,CACEoG,UAAW,CAAC,CAAEnW,OAAQ,UAAFyR,OAAYxP,EAAQ,GAAE,UAAAwP,OAAS9D,MACnDmC,KAAM,CAAEC,KAAM,OAAQY,MAAO,YAAaoE,WAAY,CAAC,EAAG,GAAI/C,YAAa,GAC3E9B,SAAU,CACRjT,EAAG,CAAEmT,MAAO,MAAOL,KAAM,eAAgBQ,KAAMxC,MAGnD,CACEoI,UAAW,CAAC,CAAEnW,OAAQ2N,GAAY,UAAH8D,OAAaxP,EAAQ,GAAE,UAAAwP,OAAS9D,IAAc,0BAC7EmC,KAAM,CAAEC,KAAM,OAAQY,MAAO,YAAaqB,YAAa,GACvD9B,SAAU,CACRjT,EAAG,CAAEmT,MAAO,SAAUL,KAAM,eAAgBQ,KAAMxC,MAGtD,CACEoI,UAAW,CAAC,CAAEnW,OAAQ2N,GAAY,UAAH8D,OAAaxP,EAAQ,GAAE,UAAAwP,OAAS9D,IAAc,0BAC7EmC,KAAM,CAAEC,KAAM,SAAUY,MAAO,YAAaX,KAAM,IAClDE,SAAU,CACRjT,EAAG,CAAEmT,MAAO,SAAUL,KAAM,gBAC5BE,QAAS,CACP,CAAEG,MAAOnO,EAAQ,GAAIuO,MAAOvO,EAAQ,IACpC,CAAEmO,MAAO,SAAUI,MAAO,eAAgBiE,OAAQ,YAK1D7E,OAAQ,CACNkB,KAAM,WACNP,KAAM,CAAEQ,WAAY,UAAWC,WAAY,aAE7CpC,EAAApS,EAAA,iBAGmB,kBAAd4F,IAEDqD,GAAQ,IAAIwO,IAElB9R,EAAK9B,QAAQ,SAACiP,EAAK1T,GACjB,IAAMob,EAAS1H,EAAIrN,EAAQ,KAAO,GAC5BgV,EAAQ3H,EAAIrN,EAAQ,KAAO,QAAJwP,OAAY7V,GACnCoU,EAAO/N,EAAQtG,QAAU,GAAKmW,WAAWxC,EAAIrN,EAAQ,MAAa,EAaxE,GAVI+U,IAAWvR,GAAMyO,IAAI8C,IACvBvR,GAAM0O,IAAI6C,EAAQ,CAChB5D,GAAI4D,EACJA,OAAQ,GACRpX,KAAMoX,EACNhH,KAAM,IAKLvK,GAAMyO,IAAI+C,GAOR,CACL,IAAMC,EAAezR,GAAMpL,IAAI4c,GAC/BC,EAAaF,OAASA,EACtBE,EAAalH,KAAOA,CACtB,MAVEvK,GAAM0O,IAAI8C,EAAO,CACf7D,GAAI6D,EACJD,OAAQA,EACRpX,KAAMqX,EACNjH,KAAMA,GAOZ,GAGMhK,GAAmBzH,MAAMe,KAAKmG,GAAMzD,UAGpC2D,GAAS,IAAI0P,IAAIrP,GAAiBqJ,IAAI,SAAAvV,GAAC,OAAIA,EAAEsZ,EAAE,IACrDpN,GAAiB3F,QAAQ,SAAA8W,GACnBA,EAAKH,SAAWrR,GAAOuO,IAAIiD,EAAKH,UAClCG,EAAKH,OAAS,GAElB,GAGMpR,GAAYI,GAAiBrK,OAC7BwK,GAAYgL,KAAKC,IAAI,IAAKD,KAAKE,IAAI,IAAiB,GAAZzL,GAAiB,MAG/DvD,EAAO,CACL,QAAW,6CACX,YAAe,4CACf,MAAS8D,GACT,OAAUA,GACV,QAAW,EACX,SAAY,OACZ,WAAc,QAEd,KAAQ,CACN,CACE,KAAQ,OACR,OAAUH,GACV,UAAa,CACX,CACE,KAAQ,WACR,IAAO,KACP,UAAa,UAEf,CACE,KAAQ,OACR,MAAS,OACT,KAAQ,CAAC,MAAS,SAClB,KAAQ,CAAC,CAAC,OAAU,SAAU,CAAC,OAAU,eAMjD,OAAU,CACR,CACE,KAAQ,QACR,KAAQ,UACR,OAAU,CAAC,KAAQ,OAAQ,MAAS,SACpC,MAAS,CAAC,OAAU,gBAIxB,MAAS,CACP,CACE,KAAQ,SACR,KAAQ,CAAC,KAAQ,QACjB,OAAU,CACR,MAAS,CACP,MAAS,CAAC,MAAS,UACnB,KAAQ,CAAC,MAAS,QAAS,MAAS,SACpC,QAAW,CACT,OAAU,uEAGd,OAAU,CACR,EAAK,CAAC,MAAS,KACf,EAAK,CAAC,MAAS,KACf,KAAQ,CAAC,OAAU,yBACnB,OAAU,CAAC,MAAS,SACpB,YAAe,CAAC,MAAS,IACzB,QAAW,CAAC,MAAS,KAEvB,MAAS,CACP,OAAU,CAAC,MAAS,WACpB,YAAe,CAAC,MAAS,GACzB,QAAW,CAAC,MAAS,MAI3B,CACE,KAAQ,OACR,KAAQ,CAAC,KAAQ,QACjB,OAAU,CACR,MAAS,CACP,MAAS,CAAC,MAAS,UACnB,SAAY,CAAC,MAAS,UACtB,KAAQ,CAAC,MAAS,WAClB,KAAQ,CAAC,MAAS,YAClB,WAAc,CAAC,MAAS,QAE1B,OAAU,CACR,EAAK,CAAC,MAAS,KACf,EAAK,CAAC,MAAS,KACf,KAAQ,CAAC,OAAU,kCACnB,SAAY,CAAC,OAAU,6CACvB,QAAW,CAAC,OAAU,8BAMjC,QAKoC,OAF/BqI,GAAYjT,SAASwnB,cAAc,QAC/BC,MAAMC,QAAU,OAC1B1nB,SAAS2nB,KAAKC,YAAY3U,IAAWO,EAAApS,EAAA,GAEhBymB,UAAU5U,GAAWhM,EAAM,CAAE6gB,SAAS,IAAQ,QAGnE,OAHM5U,GAAMM,EAAAzR,EACNoR,GAAOD,GAAOC,KAEpBK,EAAApS,EAAA,GACqB+R,GAAK4U,WAAW,OAAM,QAA/B,OAAN3U,GAAMI,EAAAzR,EAAAyR,EAAApS,EAAG,GACQ4mB,MAAM5U,IAAO,QAAtB,OAARC,GAAQG,EAAAzR,EAAAyR,EAAApS,EAAG,GACEiS,GAASC,OAAM,QAA5BA,GAAIE,EAAAzR,GAEJwR,GAAS,IAAI0U,YACZC,UAASpiB,EAAAjD,IAAApE,EAAG,SAAA0pB,IAAA,IAAAC,EAAAC,EAAA,OAAAxlB,IAAAC,EAAA,SAAAwlB,GAAA,cAAAA,EAAAlnB,GAAA,OAOW,OANxBgnB,EAAa7U,GAAOL,OAAOuF,MAAM,KAAK,IAGtC4P,EAAQ3hB,EAAM6hB,OAAOC,SAASJ,IAC9BlK,KAAOvX,EAAMuX,KACnBmK,EAAMrK,IAAMrX,EAAMqX,IAClBqK,EAAMI,iBAAkB,EAAMH,EAAAlnB,EAAA,EAExBqF,EAAQqN,OAAM,cAAAwU,EAAAtmB,EAAA,KAAAmmB,EAAA,IAGpB5U,GAAOmV,cAAcpV,IAGrBtT,SAAS2nB,KAAKgB,YAAY1V,IAAW,eAAAO,EAAAxR,EAAA,KAAAwE,EAAA,IACtC,gBAAAoiB,GAAA,OAAAriB,EAAAzB,MAAA,KAAAE,UAAA,EA13Mc,IA03Mb,OAAAqB,EAAAjF,EAAA,eAAAiF,EAAAzF,EAAA,EAAAwF,EAAAC,EAAAtE,EAEFgS,QAAQgK,MAAK3X,GAAQ,cAAAC,EAAArE,EAAA,KAAAmE,EAAA,iBAExBD,EAAApB,MAAA,KAAAE,UAAA,CAp4MD6jB,OAAOC,QAAQ,WACb9oB,SAASoU,eAAe,aAAa2U,QAAU9iB,CACjD,E,ICHiC,IAAI+iB,IAAI,a","sources":["webpack://excel-custom-functions-js/webpack/bootstrap","webpack://excel-custom-functions-js/webpack/runtime/define property getters","webpack://excel-custom-functions-js/webpack/runtime/global","webpack://excel-custom-functions-js/webpack/runtime/hasOwnProperty shorthand","webpack://excel-custom-functions-js/webpack/runtime/publicPath","webpack://excel-custom-functions-js/webpack/runtime/jsonp chunk loading","webpack://excel-custom-functions-js/./src/taskpane/taskpane.js","webpack://excel-custom-functions-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/* global console, document, Excel, Office */\n\nOffice.onReady(() => {\n  document.getElementById(\"drawChart\").onclick = run;\n});\n\nexport async function run() {\n  try {\n    await Excel.run(async (context) => {\n      const sheet = context.workbook.worksheets.getActiveWorksheet();\n\n      // Get current selection\n      const range = context.workbook.getSelectedRange();\n      range.load(\"values, left, top\");\n      await context.sync();\n\n      const values = range.values;\n      if (values.length < 2) {\n        console.warn(\"Need at least header row + one data row\");\n        return;\n      }\n\n      // First row is header\n      const headers = values[0];\n      const rows = values.slice(1);\n\n      // Convert rows -> objects\n      const data = rows.map(row => {\n        let obj = {};\n        headers.forEach((h, i) => {\n          obj[h] = row[i];\n        });\n        return obj;\n      });\n\n      // Get chart type from dropdown\n      const chartType = document.getElementById(\"chartType\").value;\n\n      let spec;\n\n      if (chartType === \"point\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n          description: \"Colored scatter plot from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          mark: { type: \"point\", size: 100, tooltip: true },\n          encoding: {\n            x: { \n              field: headers[0], \n              type: \"quantitative\",\n              scale: { zero: false },\n              axis: {\n                title: headers[0],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            y: { \n              field: headers[1], \n              type: \"quantitative\",\n              scale: { zero: false },\n              axis: {\n                title: headers[1],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            // Add color encoding if 3rd column exists\n            ...(headers.length >= 3 && {\n              color: { \n                field: headers[2], \n                type: \"nominal\",\n                legend: {\n                  title: headers[2],\n                  titleFontSize: 12,\n                  labelFontSize: 11\n                }\n              }\n            }),\n            // Add shape encoding if 4th column exists\n            ...(headers.length >= 4 && {\n              shape: { \n                field: headers[3], \n                type: \"nominal\",\n                legend: {\n                  title: headers[3],\n                  titleFontSize: 12,\n                  labelFontSize: 11\n                }\n              }\n            })\n          },\n          config: {\n            font: \"Segoe UI\",\n            axis: {\n              labelColor: \"#605e5c\",\n              titleColor: \"#323130\",\n              gridColor: \"#f3f2f1\"\n            },\n            legend: {\n              titleColor: \"#323130\",\n              labelColor: \"#605e5c\"\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"bubble\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n          description: \"Bubble chart from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          mark: { type: \"circle\", tooltip: true, opacity: 0.7 },\n          encoding: {\n            x: { \n              field: headers[0], \n              type: \"quantitative\",\n              scale: { zero: false },\n              axis: {\n                title: headers[0],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            y: { \n              field: headers[1], \n              type: \"quantitative\",\n              scale: { zero: false },\n              axis: {\n                title: headers[1],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            size: {\n              field: headers[2],\n              type: \"quantitative\",\n              scale: {\n                type: \"linear\",\n                range: [100, 1000]\n              },\n              legend: {\n                title: headers[2],\n                titleFontSize: 12,\n                labelFontSize: 11\n              }\n            },\n            // Add color encoding if 4th column exists\n            ...(headers.length >= 4 && {\n              color: { \n                field: headers[3], \n                type: \"nominal\",\n                legend: {\n                  title: headers[3],\n                  titleFontSize: 12,\n                  labelFontSize: 11\n                }\n              }\n            })\n          },\n          config: {\n            font: \"Segoe UI\",\n            axis: {\n              labelColor: \"#605e5c\",\n              titleColor: \"#323130\",\n              gridColor: \"#f3f2f1\"\n            },\n            legend: {\n              titleColor: \"#323130\",\n              labelColor: \"#605e5c\"\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"ring\") {\n        // Ring chart requires 2 columns: Category, Value\n        if (headers.length < 2) {\n          throw new Error(\"Ring chart requires 2 columns: Category, Value\");\n        }\n\n        const numRings = data.length;\n        if (numRings === 0) {\n          throw new Error(\"Ring chart requires at least one data row\");\n        }\n\n        // Dynamic ring parameters based on number of rings\n        const ringWidth = Math.max(15, Math.min(25, 120 / numRings));\n        const ringGap = Math.max(3, Math.min(8, 40 / numRings));\n        const maxRadius = 150 + (numRings * 5);\n\n        // Generate colors dynamically\n        const generateRingColor = (index, total) => {\n          const baseHue = 210; // Blue base\n          const saturation = Math.max(50, 80 - (index * 5));\n          const lightness = Math.max(25, 60 - (index * 8));\n          return `hsl(${baseHue}, ${saturation}%, ${lightness}%)`;\n        };\n\n        // Transform data for the chart\n        const transformedData = data.map((d, index) => ({\n          [`__${index}__`]: d[headers[0]], // Category\n          [`__${index + 100}__`]: d[headers[1]], // Value\n          [`Ring${index + 1}_Theta2`]: 2 * Math.PI * d[headers[1]] / 100,\n          [`Ring${index + 1}_Percent_Label`]: d[headers[1]] + '%'\n        }));\n\n        // Flatten into single object\n        const chartData = [Object.assign({}, ...transformedData)];\n\n        // Calculate ring positions\n        const ringPositions = [];\n        let currentOuter = maxRadius;\n        for (let i = 0; i < numRings; i++) {\n          const outer = currentOuter;\n          const inner = outer - ringWidth;\n          const middle = (outer + inner) / 2;\n          ringPositions.push({ outer, inner, middle });\n          currentOuter = inner - ringGap;\n        }\n\n        // Calculate legend dimensions and positioning\n        const legendWidth = 100; // Fixed width for legend area\n        const legendItemHeight = 25; // Height per legend item\n        const totalLegendHeight = numRings * legendItemHeight;\n        const chartCenterY = maxRadius + 50; // Y center of the chart\n        const legendStartY = chartCenterY - (totalLegendHeight / 2); // Center legend relative to chart center\n\n        spec = {\n          \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n          \"config\": {\n            \"autosize\": {\n              \"type\": \"pad\",\n              \"resize\": true\n            },\n            \"concat\": {\"spacing\": 20} // Increased spacing between chart and legend\n          },\n          \"description\": `Dynamic ring chart with ${numRings} concentric rings`,\n          \"background\": \"white\",\n          \"data\": {\"values\": chartData},\n          \"hconcat\": [\n            {\n              \"description\": \"RINGS - Main Chart\",\n              \"width\": (maxRadius + 50) * 2,\n              \"height\": (maxRadius + 50) * 2,\n              \"view\": {\"stroke\": null},\n              \"layer\": [\n                // Background rings (full circles) - centered\n                ...data.map((d, index) => ({\n                  \"description\": `RING ${index + 1} BACKGROUND`,\n                  \"mark\": {\n                    \"type\": \"arc\",\n                    \"radius\": ringPositions[index].outer,\n                    \"radius2\": ringPositions[index].inner,\n                    \"theta\": 0,\n                    \"theta2\": 6.283185307179586, // 2π\n                    \"opacity\": 0.25,\n                    \"x\": maxRadius + 50,\n                    \"y\": maxRadius + 50\n                  },\n                  \"encoding\": {\n                    \"color\": {\"value\": generateRingColor(index, numRings)}\n                  }\n                })),\n                // Progress rings - centered\n                ...data.map((d, index) => ({\n                  \"description\": `RING ${index + 1} PROGRESS`,\n                  \"mark\": {\n                    \"type\": \"arc\",\n                    \"radius\": ringPositions[index].outer,\n                    \"radius2\": ringPositions[index].inner,\n                    \"theta\": 0,\n                    \"theta2\": {\"expr\": `datum['Ring${index + 1}_Theta2']`},\n                    \"cornerRadius\": Math.min(8, ringWidth / 2),\n                    \"tooltip\": true,\n                    \"x\": maxRadius + 50,\n                    \"y\": maxRadius + 50\n                  },\n                  \"encoding\": {\n                    \"color\": {\"value\": generateRingColor(index, numRings)},\n                    \"tooltip\": [\n                      {\"value\": d[headers[0]], \"title\": \"Category\"},\n                      {\"value\": d[headers[1]] + \"%\", \"title\": \"Progress\"}\n                    ]\n                  }\n                })),\n                // White percentage labels slightly to the right - centered\n                ...data.map((d, index) => ({\n                  \"description\": `RING ${index + 1} LABEL`,\n                  \"mark\": {\n                    \"type\": \"text\",\n                    \"align\": \"center\",\n                    \"baseline\": \"middle\",\n                    \"x\": maxRadius + 50 + 15, // Center + offset to right\n                    \"y\": maxRadius + 50 - ringPositions[index].middle, // Center + offset up\n                    \"fontSize\": Math.max(10, Math.min(14, 180 / numRings)),\n                    \"font\": \"Segoe UI\",\n                    \"fontWeight\": \"bold\",\n                    \"color\": \"white\"\n                  },\n                  \"encoding\": {\n                    \"text\": {\"value\": d[headers[1]] + \"%\"},\n                    \"opacity\": {\n                      \"condition\": {\n                        \"test\": `datum['Ring${index + 1}_Theta2'] > 0`,\n                        \"value\": 1\n                      },\n                      \"value\": 0\n                    }\n                  }\n                }))\n              ]\n            },\n            {\n              \"description\": \"LEGEND - Right Side\",\n              \"width\": legendWidth,\n              \"height\": (maxRadius + 50) * 2, // Match chart height exactly\n              \"view\": {\"stroke\": null},\n              \"layer\": data.map((d, index) => [\n                {\n                  \"description\": `LEGEND CIRCLE ${index + 1}`,\n                  \"mark\": {\n                    \"type\": \"circle\",\n                    \"size\": 150,\n                    \"x\": 15, // Fixed position from left edge\n                    \"y\": legendStartY + (index * legendItemHeight),\n                    \"color\": generateRingColor(index, numRings)\n                  }\n                },\n                {\n                  \"description\": `LEGEND LABEL ${index + 1}`,\n                  \"mark\": {\n                    \"type\": \"text\",\n                    \"x\": 35, // Positioned to the right of the circle\n                    \"y\": legendStartY + (index * legendItemHeight),\n                    \"align\": \"left\",\n                    \"baseline\": \"middle\",\n                    \"fontSize\": 11,\n                    \"font\": \"Segoe UI\"\n                  },\n                  \"encoding\": {\n                    \"text\": {\"value\": d[headers[0]]}\n                  }\n                }\n              ]).flat()\n            }\n          ],\n          \"view\": {\"stroke\": null}\n        };\n      }\n\n      else if (chartType === \"line\") {\n        const transformedData = [];\n        const valueColumns = headers.slice(1);\n        data.forEach(row => {\n            valueColumns.forEach(colName => {\n            if (row[colName] !== null && row[colName] !== undefined && row[colName] !== \"\") {\n                transformedData.push({\n                [headers[0]]: row[headers[0]], // x-axis value (first column)\n                series: colName,               // series name (column header)\n                value: parseFloat(row[colName]) || 0  // y-axis value\n                });\n            }\n            });\n        });\n\n        spec = {\n            $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n            description: \"Multi-series line chart from Excel selection\",\n            background: \"white\",\n            config: { view: { stroke: \"transparent\" }},\n            data: { values: transformedData },\n            mark: { \n            type: \"line\", \n            point: false,\n            tooltip: true,\n            strokeWidth: 2\n            },\n            encoding: {\n            x: { \n                field: headers[0], \n                type: \"ordinal\",\n                axis: {\n                title: headers[0],\n                labelFontSize: 12,\n                titleFontSize: 14,\n                labelAngle: 0\n                }\n            },\n            y: { \n                field: \"value\", \n                type: \"quantitative\",\n                axis: {\n                title: \"Value\",\n                labelFontSize: 12,\n                titleFontSize: 14\n                }\n            },\n            color: { \n                field: \"series\", \n                type: \"nominal\",\n                scale: {\n                scheme: \"category10\"\n                },\n                legend: {\n                title: \"Series\",\n                titleFontSize: 12,\n                labelFontSize: 11\n                }\n            }\n            },\n            config: {\n            font: \"Segoe UI\",\n            axis: {\n                labelColor: \"#605e5c\",\n                titleColor: \"#323130\",\n                gridColor: \"#f3f2f1\"\n            },\n            legend: {\n                titleColor: \"#323130\",\n                labelColor: \"#605e5c\"\n            },\n            point: {\n                size: 60,\n                filled: true\n            }\n            }\n        };\n      }\n\n      else if (chartType === \"step\") {\n        // Step chart requires at least 2 columns: Date/Time (X-axis), Values (Y-axis)\n        if (headers.length < 2) {\n          throw new Error(\"Step chart requires at least 2 columns: Date/Time (X-axis), Values (Y-axis)\");\n        }\n\n        // Helper function to convert Excel dates to JS dates (same as candlestick)\n        function excelDateToJSDate(serial) {\n          if (typeof serial === 'number') {\n            return new Date(Math.round((serial - 25569) * 86400 * 1000));\n          }\n          return new Date(serial);\n        }\n\n        // Process and validate data (same method as candlestick)\n        const stepData = data\n          .map((row, index) => {\n            // Skip if any required value is missing/null/empty\n            if (!row[headers[0]] || \n                row[headers[1]] == null || row[headers[1]] === \"\") {\n              return null;\n            }\n\n            const date = excelDateToJSDate(row[headers[0]]);\n            const price = parseFloat(row[headers[1]]);\n            \n            if (isNaN(date.getTime()) || isNaN(price)) {\n              return null;\n            }\n            \n            return {\n              date: date.toISOString(),\n              price: price\n            };\n          })\n          .filter(Boolean); // Remove null entries\n\n        if (stepData.length === 0) {\n          console.warn(\"No valid step chart data found\");\n          return;\n        }\n\n        // Create step chart specification (using candlestick's structure)\n        spec = {\n          \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",\n          \"width\": 600,\n          \"description\": \"Step chart from Excel selection\",\n          \"background\": \"white\",\n          \"config\": { \"view\": { \"stroke\": \"transparent\" }},\n          \"data\": { \"values\": stepData },\n          \"mark\": { \n            \"type\": \"line\", \n            \"interpolate\": \"step-after\",\n            \"strokeWidth\": 2\n          },\n          \"encoding\": {\n            \"x\": {\n              \"field\": \"date\",\n              \"type\": \"temporal\",\n              \"axis\": {\n                \"title\": null,\n                \"format\": \"%m/%d\",\n                \"labelAngle\": -45,\n                \"labelFontSize\": 11,\n                \"labelColor\": \"#605e5c\",\n                \"font\": \"Segoe UI\"\n              }\n            },\n            \"y\": {\n              \"field\": \"price\",\n              \"type\": \"quantitative\",\n              \"scale\": { \"zero\": false },\n              \"axis\": {\n                \"title\": null,\n                \"labelFontSize\": 11,\n                \"labelColor\": \"#605e5c\",\n                \"font\": \"Segoe UI\",\n                \"grid\": true,\n                \"gridColor\": \"#f3f2f1\"\n              }\n            },\n            \"tooltip\": [\n              { \"field\": \"date\", \"type\": \"temporal\", \"title\": \"Date\", \"format\": \"%Y-%m-%d\" },\n              { \"field\": \"price\", \"type\": \"quantitative\", \"title\": \"Price\", \"format\": \".2f\" }\n            ]\n          },\n          \"config\": {\n            \"font\": \"Segoe UI\",\n            \"axis\": {\n              \"labelColor\": \"#605e5c\",\n              \"titleColor\": \"#323130\",\n              \"gridColor\": \"#f3f2f1\"\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"gantt\") {\n      function excelDateToJSDate(serial) {\n          return new Date(Math.round((serial - 25569) * 86400 * 1000));\n      }\n\n      const ganttData = rows.map(row => {\n          const parentId = row[0] || null;   // col 1 = parent id\n          const id = row[1];                 // col 2 = task id\n          const name = row[2] || `Task ${id}`;\n          if (!id) return null;\n\n          const start = typeof row[3] === \"number\" ? excelDateToJSDate(row[3]) : new Date(row[3]);\n          const end = typeof row[4] === \"number\" ? excelDateToJSDate(row[4]) : new Date(row[4]);\n          if (!(start instanceof Date) || isNaN(start) || !(end instanceof Date) || isNaN(end)) return null;\n\n          let progress = 0;\n          if (row[5]) {\n              if (typeof row[5] === \"string\" && row[5].includes(\"%\")) {\n                  progress = parseFloat(row[5]) / 100;\n              } else if (row[5] > 1) {\n                  progress = row[5] / 100;\n              } else {\n                  progress = row[5];\n              }\n          }\n\n          const dependencies = row[6] ? String(row[6]).split(\",\").map(d => d.trim()) : [];\n\n          return { id, parentId, name, startDate: start, endDate: end, progress, dependencies };\n      }).filter(Boolean);\n\n      // Precompute progressEnd\n      ganttData.forEach(task => {\n          const duration = task.endDate - task.startDate;\n          task.progressEnd = new Date(task.startDate.getTime() + duration * task.progress);\n      });\n\n      // Build parent->children map\n      const childrenMap = new Map();\n      ganttData.forEach(task => {\n          if (!childrenMap.has(task.parentId)) {\n              childrenMap.set(task.parentId, []);\n          }\n          childrenMap.get(task.parentId).push(task);\n      });\n\n      // Sort children by startDate\n      for (let [pid, childList] of childrenMap.entries()) {\n          childList.sort((a, b) => a.startDate - b.startDate);\n      }\n\n      // Recursive hierarchy ordering\n      function buildHierarchy(parentId = null, level = 0) {\n          const ordered = [];\n          const tasks = childrenMap.get(parentId) || [];\n          for (const task of tasks) {\n              task.level = level;\n              ordered.push(task);\n              ordered.push(...buildHierarchy(task.id, level + 1));\n          }\n          return ordered;\n      }\n\n      const orderedTasks = buildHierarchy(null);\n\n      spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n          description: \"Gantt Chart from Excel Data\",\n          width: 800,\n          height: Math.max(300, orderedTasks.length * 30),\n          data: { values: orderedTasks },\n          layer: [\n              {\n                  mark: { type: \"bar\", opacity: 0.3, height: 20 },\n                  encoding: {\n                      y: { field: \"name\", type: \"nominal\", axis: { title: null, labelFontSize: 11 }, sort: null },\n                      x: { field: \"startDate\", type: \"temporal\", axis: { title: \"Timeline\", format: \"%b %d\", labelAngle: -45 } },\n                      x2: { field: \"endDate\", type: \"temporal\" },\n                      color: { field: \"level\", type: \"ordinal\", scale: { scheme: \"category10\" }, legend: { title: \"Level\" } },\n                      tooltip: [\n                          { field: \"name\", type: \"nominal\", title: \"Task\" },\n                          { field: \"startDate\", type: \"temporal\", title: \"Start\", format: \"%Y-%m-%d\" },\n                          { field: \"endDate\", type: \"temporal\", title: \"End\", format: \"%Y-%m-%d\" },\n                          { field: \"progress\", type: \"quantitative\", title: \"Progress\", format: \".0%\" }\n                      ]\n                  }\n              },\n              {\n                  mark: { type: \"bar\", opacity: 0.8, height: 20 },\n                  encoding: {\n                      y: { field: \"name\", type: \"nominal\", sort: null },\n                      x: { field: \"startDate\", type: \"temporal\" },\n                      x2: { field: \"progressEnd\", type: \"temporal\" },\n                      color: { field: \"level\", type: \"ordinal\", scale: { scheme: \"category10\" } }\n                  }\n              },\n              {\n                  mark: { type: \"text\", align: \"left\", baseline: \"middle\", dx: 5, fontSize: 10 },\n                  encoding: {\n                      y: { field: \"name\", type: \"nominal\", sort: null },\n                      x: { field: \"endDate\", type: \"temporal\" },\n                      text: { field: \"progress\", type: \"quantitative\", format: \".0%\" },\n                      color: { value: \"#666\" }\n                  }\n              },\n              {\n                  mark: { type: \"rule\", strokeDash: [4, 4], opacity: 0.5 },\n                  data: { values: [{ date: new Date().toISOString() }] },\n                  encoding: {\n                      x: { field: \"date\", type: \"temporal\" },\n                      color: { value: \"red\" },\n                      size: { value: 1 }\n                  }\n              }\n          ],\n          config: { view: { stroke: null }, axis: { grid: true, gridColor: \"#f0f0f0\" } }\n        };\n      }\n\n      else if (chartType === \"dumbbell\") {\n      // Expect headers: Category | Value 1 | Value 2\n      \n      if (headers.length < 3) {\n        console.warn(\"Dumbbell chart requires 3 columns: Category, Value 1, Value 2\");\n        return;\n      }\n\n      // Transform wide data (Category | Value1 | Value2) to long format for Vega-Lite\n      const dumbellData = [];\n      \n      data.forEach(row => {\n        const category = row[headers[0]];\n        const value1 = parseFloat(row[headers[1]]) || 0;\n        const value2 = parseFloat(row[headers[2]]) || 0;\n        \n        // Add both data points for each category\n        dumbellData.push({\n          category: category,\n          period: headers[1], // First value label\n          value: value1\n        });\n        \n        dumbellData.push({\n          category: category,\n          period: headers[2], // Second value label  \n          value: value2\n        });\n      });\n\n      // Calculate dynamic dimensions based on number of categories\n      const categories = [...new Set(data.map(d => d[headers[0]]))];\n      const categoryCount = categories.length;\n      \n      // Auto-adjust height and padding based on category count\n      let dynamicHeight, paddingInner, paddingOuter;\n      \n      if (categoryCount <= 3) {\n        // Few categories: smaller height, minimal padding\n        dynamicHeight = Math.max(200, categoryCount * 80);\n        paddingInner = 0.3;\n        paddingOuter = 0.2;\n      } else if (categoryCount <= 6) {\n        // Medium categories: moderate height and padding\n        dynamicHeight = Math.max(300, categoryCount * 60);\n        paddingInner = 0.2;\n        paddingOuter = 0.1;\n      } else {\n        // Many categories: larger height, tight padding\n        dynamicHeight = Math.max(400, Math.min(600, categoryCount * 50));\n        paddingInner = 0.1;\n        paddingOuter = 0.05;\n      }\n\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Dumbbell chart from Excel selection\",\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        width: 500,\n        height: dynamicHeight,\n        data: { values: dumbellData },\n        encoding: {\n          x: { \n            field: \"value\", \n            type: \"quantitative\", \n            title: null,\n            scale: { zero: false },\n            axis: {\n              labelFontSize: 12,\n              labelColor: \"#605e5c\",\n              grid: true,\n              gridColor: \"#f3f2f1\",\n              labelAlign: \"center\"\n            }\n          },\n          y: { \n            field: \"category\", \n            type: \"nominal\", \n            title: null,\n            scale: { paddingInner: paddingInner, paddingOuter: paddingOuter },\n            axis: {\n              offset: 5,\n              ticks: false,\n              minExtent: 70,\n              domain: false,\n              labelFontSize: 12,\n              labelColor: \"#605e5c\"\n            }\n          }\n        },\n        layer: [\n          {\n            mark: \"line\",\n            encoding: {\n              detail: { field: \"category\", type: \"nominal\" },\n              color: { value: \"#d1d5db\" }\n            }\n          },\n          {\n            mark: { \n              type: \"point\", \n              filled: true,\n              tooltip: true\n            },\n            encoding: {\n              color: { \n                field: \"period\", \n                type: \"ordinal\",\n                scale: {\n                  domain: [headers[1], headers[2]],\n                  range: [\"#87ceeb\", \"#1e3a8a\"]\n                },\n                title: \"Measure\",\n                legend: {\n                  titleFontSize: 12,\n                  labelFontSize: 11,\n                  titleColor: \"#323130\",\n                  labelColor: \"#605e5c\"\n                }\n              },\n              size: { value: 100 },\n              opacity: { value: 1 },\n              tooltip: [\n                { field: \"category\", type: \"nominal\", title: \"Category\" },\n                { field: \"period\", type: \"nominal\", title: \"Measure\" },\n                { field: \"value\", type: \"quantitative\", title: \"Value\", format: \",.1f\" }\n              ]\n            }\n          }\n        ],\n        config: {\n          font: \"Segoe UI\",\n          axis: {\n            labelColor: \"#605e5c\",\n            titleColor: \"#323130\",\n            gridColor: \"#f3f2f1\"\n          },\n          legend: {\n            titleColor: \"#323130\",\n            labelColor: \"#605e5c\"\n          }\n        }\n      };\n      }\n\n      else if (chartType === \"slope\") {\n        const timePeriods = [...new Set(data.map(d => d[headers[0]]))];\n        const categories = [...new Set(data.map(d => d[headers[1]]))];\n        \n        // Filter data for first and last periods only\n        const firstPeriod = timePeriods[0];\n        const lastPeriod = timePeriods[timePeriods.length - 1];\n        \n        const slopeData = data.filter(d => \n            d[headers[0]] === firstPeriod || d[headers[0]] === lastPeriod\n        );\n\n        // Check if values are percentages (between -1 and 1)\n        const allValues = slopeData.map(d => d[headers[2]]);\n        const isPercentage = allValues.every(v => v >= -1 && v <= 1);\n        const formatString = isPercentage ? \".1%\" : \",.0f\";\n\n        // Calculate dynamic dimensions based on number of categories\n        const dynamicHeight = Math.max(300, Math.min(600, categories.length * 40));\n        const dynamicWidth = 500;\n\n        spec = {\n            $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n            description: \"Slope chart from Excel selection\",\n            background: \"white\",\n            config: { \n            view: { stroke: \"transparent\" },\n            autosize: { type: \"fit\", contains: \"padding\" }\n            },\n            width: dynamicWidth,\n            height: dynamicHeight,\n            data: { values: slopeData },\n            encoding: {\n            x: {\n                field: headers[0],\n                type: \"ordinal\",\n                axis: {\n                title: null,\n                labelFontSize: 14,\n                labelFontWeight: \"bold\",\n                labelPadding: 10,\n                domain: false,\n                ticks: false,\n                labelColor: \"#323130\"\n                },\n                scale: { padding: 0.1 }\n            },\n            y: {\n                field: headers[2],\n                type: \"quantitative\",\n                axis: null,\n                scale: { zero: false }\n            },\n            color: {\n                field: headers[1],\n                type: \"nominal\",\n                legend: null,\n                scale: { scheme: \"category10\" }\n            }\n            },\n            layer: [\n            // Background grid lines\n            {\n                mark: {\n                type: \"rule\",\n                strokeDash: [2, 2],\n                opacity: 0.3\n                },\n                data: { values: [{}] },\n                encoding: {\n                x: { datum: firstPeriod },\n                x2: { datum: lastPeriod },\n                y: { value: 0 },\n                color: { value: \"#e0e0e0\" }\n                }\n            },\n            // Slope lines\n            {\n                mark: {\n                type: \"line\",\n                strokeWidth: 2,\n                opacity: 0.7,\n                tooltip: true\n                },\n                encoding: {\n                detail: { field: headers[1], type: \"nominal\" },\n                tooltip: [\n                    { field: headers[1], type: \"nominal\", title: \"Category\" },\n                    { field: headers[0], type: \"nominal\", title: \"Period\" },\n                    { field: headers[2], type: \"quantitative\", title: \"Value\", format: formatString }\n                ]\n                }\n            },\n            // Points at the ends\n            {\n                mark: {\n                type: \"circle\",\n                size: 100,\n                opacity: 1,\n                tooltip: true\n                }\n            },\n            // Left side value labels\n            {\n                transform: [\n                { filter: `datum['${headers[0]}'] == '${firstPeriod}'` }\n                ],\n                mark: {\n                type: \"text\",\n                align: \"right\",\n                baseline: \"middle\",\n                dx: -8,\n                fontSize: 11,\n                fontWeight: \"normal\"\n                },\n                encoding: {\n                text: { \n                    field: headers[2], \n                    type: \"quantitative\",\n                    format: formatString\n                }\n                }\n            },\n            // Left side category labels (for top values)\n            {\n                transform: [\n                { filter: `datum['${headers[0]}'] == '${firstPeriod}'` },\n                {\n                    window: [{ op: \"rank\", as: \"rank\" }],\n                    sort: [{ field: headers[2], order: \"descending\" }]\n                },\n                { filter: \"datum.rank <= 3\" }\n                ],\n                mark: {\n                type: \"text\",\n                align: \"right\",\n                baseline: \"bottom\",\n                dx: -8,\n                dy: -12,\n                fontSize: 10,\n                fontWeight: \"bold\",\n                fontStyle: \"italic\"\n                },\n                encoding: {\n                text: { field: headers[1], type: \"nominal\" }\n                }\n            },\n            // Right side value labels\n            {\n                transform: [\n                { filter: `datum['${headers[0]}'] == '${lastPeriod}'` }\n                ],\n                mark: {\n                type: \"text\",\n                align: \"left\",\n                baseline: \"middle\",\n                dx: 8,\n                fontSize: 11,\n                fontWeight: \"normal\"\n                },\n                encoding: {\n                text: { \n                    field: headers[2], \n                    type: \"quantitative\",\n                    format: formatString\n                }\n                }\n            },\n            // Right side category labels\n            {\n                transform: [\n                { filter: `datum['${headers[0]}'] == '${lastPeriod}'` }\n                ],\n                mark: {\n                type: \"text\",\n                align: \"left\",\n                baseline: \"middle\",\n                dx: 35,\n                fontSize: 10,\n                fontWeight: \"bold\"\n                },\n                encoding: {\n                text: { field: headers[1], type: \"nominal\" }\n                }\n            }\n            ],\n            config: {\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            text: { \n                font: \"Segoe UI\", \n                fontSize: 11, \n                fill: \"#605E5C\" \n            },\n            axis: {\n                labelColor: \"#605e5c\",\n                titleColor: \"#323130\",\n                gridColor: \"#f3f2f1\"\n            }\n            }\n        };\n      }\n\n      else if (chartType === \"bullet\") {\n      const data = rows.map(r => ({\n        title: r[0],\n        ranges: [+r[1], +r[2], +r[3]],\n        measures: [+r[4], +r[5]],\n        markers: [+r[6]]\n      }));\n\n      spec = {\n        \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        \"data\": { \"values\": data },\n        \"facet\": {\n        \"row\": {\n            \"field\": \"title\", \"type\": \"ordinal\",\n            \"header\": { \"labelAngle\": 0, \"title\": \"\", \"labelAlign\": \"left\" }\n        }\n        },\n        \"spacing\": 10,\n        \"spec\": {\n        \"encoding\": {\n            \"x\": {\n            \"type\": \"quantitative\",\n            \"scale\": { \"nice\": false },\n            \"title\": null\n            }\n        },\n        \"layer\": [\n            { \"mark\": { \"type\": \"bar\", \"color\": \"#eee\" }, \"encoding\": { \"x\": { \"field\": \"ranges[2]\" } } },\n            { \"mark\": { \"type\": \"bar\", \"color\": \"#ddd\" }, \"encoding\": { \"x\": { \"field\": \"ranges[1]\" } } },\n            { \"mark\": { \"type\": \"bar\", \"color\": \"#ccc\" }, \"encoding\": { \"x\": { \"field\": \"ranges[0]\" } } },\n            { \"mark\": { \"type\": \"bar\", \"color\": \"lightsteelblue\", \"size\": 10 }, \"encoding\": { \"x\": { \"field\": \"measures[1]\" } } },\n            { \"mark\": { \"type\": \"bar\", \"color\": \"steelblue\", \"size\": 10 }, \"encoding\": { \"x\": { \"field\": \"measures[0]\" } } },\n            { \"mark\": { \"type\": \"tick\", \"color\": \"black\" }, \"encoding\": { \"x\": { \"field\": \"markers[0]\" } } }\n        ]\n        },\n        \"resolve\": { \"scale\": { \"x\": \"independent\" } },\n        \"config\": { \"tick\": { \"thickness\": 2 }, \"scale\": { \"barBandPaddingInner\": 0 } }\n      };\n      }\n\n      else if (chartType === \"box\") {\n      // Expect headers: Category | Value\n      const data = rows\n        .filter(r => r[0] && !isNaN(+r[1]))\n        .map(r => ({\n          category: r[0],\n          value: +r[1]\n        }));\n\n      spec = {\n        \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",\n        \"description\": \"Box plot from Excel selection\",\n        \"data\": { \"values\": data },\n        \"mark\": {\n          \"type\": \"boxplot\",\n          \"extent\": \"min-max\"   // show whiskers from min to max\n        },\n        \"encoding\": {\n          \"x\": { \"field\": \"category\", \"type\": \"nominal\" },\n          \"y\": {\n            \"field\": \"value\",\n            \"type\": \"quantitative\",\n            \"scale\": { \"zero\": false }\n          },\n          \"color\": {\n            \"field\": \"category\",\n            \"type\": \"nominal\",\n            \"legend\": null\n          }\n        }\n      };\n      }\n\n      else if (chartType === \"horizon\") {\n        const horizonData = data.map((row, index) => ({\n            x: row[headers[0]] || index + 1,\n            y: parseFloat(row[headers[1]]) || 0\n        }));\n\n        // Calculate data range and bands\n        const yValues = horizonData.map(d => d.y);\n        const maxY = Math.max(...yValues);\n        const minY = Math.min(...yValues);\n        const range = maxY - minY;\n        \n        // Define number of bands (typically 2-4 for horizon graphs)\n        const numBands = 3;\n        const bandHeight = range / (numBands * 2); // Divide by 2 for positive and negative\n        const baseline = minY + range / 2; // Use middle as baseline\n        \n        // Calculate dynamic dimensions\n        const dataPoints = horizonData.length;\n        const dynamicWidth = Math.max(300, Math.min(800, dataPoints * 15));\n\n        spec = {\n            \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",\n            \"description\": \"Horizon Graph from Excel selection (IDL methodology)\",\n            \"width\": dynamicWidth,\n            \"height\": 60,\n            \"background\": \"white\",\n            \"config\": { \n            \"view\": { \"stroke\": \"transparent\" },\n            \"area\": {\"interpolate\": \"monotone\"}\n            },\n            \"data\": { \"values\": horizonData },\n            \"encoding\": {\n            \"x\": {\n                \"field\": \"x\",\n                \"type\": headers[0].toLowerCase().includes('date') ? \"temporal\" : \"quantitative\",\n                \"scale\": {\"zero\": false, \"nice\": false},\n                \"axis\": {\n                \"title\": headers[0],\n                \"labelFontSize\": 10,\n                \"titleFontSize\": 12,\n                \"labelColor\": \"#605e5c\",\n                \"titleColor\": \"#323130\",\n                \"font\": \"Segoe UI\"\n                }\n            },\n            \"y\": {\n                \"type\": \"quantitative\",\n                \"scale\": {\"domain\": [0, bandHeight]},\n                \"axis\": {\n                \"title\": headers[1],\n                \"orient\": \"left\",\n                \"labelFontSize\": 10,\n                \"titleFontSize\": 12,\n                \"labelColor\": \"#605e5c\",\n                \"titleColor\": \"#323130\",\n                \"font\": \"Segoe UI\",\n                \"tickCount\": 3\n                }\n            }\n            },\n            \"layer\": [\n            // Band 1 (lightest positive)\n            {\n                \"transform\": [\n                {\"calculate\": `max(0, min(datum.y - ${baseline}, ${bandHeight}))`, \"as\": \"band1\"}\n                ],\n                \"mark\": {\n                \"type\": \"area\",\n                \"clip\": true,\n                \"opacity\": 0.3,\n                \"color\": \"#4a90e2\",\n                \"interpolate\": \"monotone\"\n                },\n                \"encoding\": {\n                \"y\": {\"field\": \"band1\"}\n                }\n            },\n            // Band 2 (medium positive)\n            {\n                \"transform\": [\n                {\"calculate\": `max(0, min(datum.y - ${baseline} - ${bandHeight}, ${bandHeight}))`, \"as\": \"band2\"}\n                ],\n                \"mark\": {\n                \"type\": \"area\",\n                \"clip\": true,\n                \"opacity\": 0.6,\n                \"color\": \"#2e7bd6\",\n                \"interpolate\": \"monotone\"\n                },\n                \"encoding\": {\n                \"y\": {\"field\": \"band2\"}\n                }\n            },\n            // Band 3 (darkest positive)\n            {\n                \"transform\": [\n                {\"calculate\": `max(0, datum.y - ${baseline} - ${bandHeight * 2})`, \"as\": \"band3\"}\n                ],\n                \"mark\": {\n                \"type\": \"area\",\n                \"clip\": true,\n                \"opacity\": 0.9,\n                \"color\": \"#1a5bb8\",\n                \"interpolate\": \"monotone\"\n                },\n                \"encoding\": {\n                \"y\": {\"field\": \"band3\"}\n                }\n            },\n            // Band -1 (lightest negative, mirrored)\n            {\n                \"transform\": [\n                {\"calculate\": `max(0, min(${baseline} - datum.y, ${bandHeight}))`, \"as\": \"nband1\"}\n                ],\n                \"mark\": {\n                \"type\": \"area\",\n                \"clip\": true,\n                \"opacity\": 0.3,\n                \"color\": \"#e74c3c\",\n                \"interpolate\": \"monotone\"\n                },\n                \"encoding\": {\n                \"y\": {\"field\": \"nband1\"}\n                }\n            },\n            // Band -2 (medium negative, mirrored)\n            {\n                \"transform\": [\n                {\"calculate\": `max(0, min(${baseline} - datum.y - ${bandHeight}, ${bandHeight}))`, \"as\": \"nband2\"}\n                ],\n                \"mark\": {\n                \"type\": \"area\",\n                \"clip\": true,\n                \"opacity\": 0.6,\n                \"color\": \"#c0392b\",\n                \"interpolate\": \"monotone\"\n                },\n                \"encoding\": {\n                \"y\": {\"field\": \"nband2\"}\n                }\n            },\n            // Band -3 (darkest negative, mirrored)\n            {\n                \"transform\": [\n                {\"calculate\": `max(0, ${baseline} - datum.y - ${bandHeight * 2})`, \"as\": \"nband3\"}\n                ],\n                \"mark\": {\n                \"type\": \"area\",\n                \"clip\": true,\n                \"opacity\": 0.9,\n                \"color\": \"#a93226\",\n                \"interpolate\": \"monotone\"\n                },\n                \"encoding\": {\n                \"y\": {\"field\": \"nband3\"}\n                }\n            }\n            ]\n        };\n      }\n\n      else if (chartType === \"tree\") {\n        const nodes = new Map();\n\n        data.forEach((row, i) => {\n            const parent = row[headers[0]] || \"\";\n            const child = row[headers[1]] || `node_${i}`;\n            const value = headers.length >= 3 ? (parseFloat(row[headers[2]]) || 1) : 1;\n            \n            // Add parent node if it doesn't exist and is not empty\n            if (parent && !nodes.has(parent)) {\n            nodes.set(parent, {\n                id: parent,\n                parent: \"\",\n                name: parent,\n                value: 1\n            });\n            }\n            \n            // Add child node\n            if (!nodes.has(child)) {\n            nodes.set(child, {\n                id: child,\n                parent: parent,\n                name: child,\n                value: value\n            });\n            } else {\n            // Update parent and value if child already exists\n            const existingNode = nodes.get(child);\n            existingNode.parent = parent;\n            existingNode.value = value;\n            }\n        });\n        \n        // Convert Map to array\n        const treeData = Array.from(nodes.values());\n        \n        // Find root nodes (nodes with no parent or parent not in dataset)\n        const allIds = new Set(treeData.map(d => d.id));\n        treeData.forEach(node => {\n            if (node.parent && !allIds.has(node.parent)) {\n            node.parent = \"\"; // Make it a root node if parent doesn't exist\n            }\n        });\n\n        // Calculate dynamic dimensions based on data size\n        const nodeCount = treeData.length;\n        const dynamicWidth = Math.max(600, Math.min(1200, nodeCount * 40));\n        const dynamicHeight = Math.max(400, Math.min(1600, nodeCount * 30));\n\n        spec = {\n            \"$schema\": \"https://vega.github.io/schema/vega/v6.json\",\n            \"description\": \"Tree diagram from Excel selection\",\n            \"width\": dynamicWidth,\n            \"height\": dynamicHeight,\n            \"padding\": 20,\n            \"background\": \"white\",\n            \"config\": { \"view\": { \"stroke\": \"transparent\" }},\n\n            \"signals\": [\n            {\n                \"name\": \"layout\", \n                \"value\": \"tidy\"\n            },\n            {\n                \"name\": \"links\", \n                \"value\": \"diagonal\"\n            }\n            ],\n\n            \"data\": [\n            {\n                \"name\": \"tree\",\n                \"values\": treeData,\n                \"transform\": [\n                {\n                    \"type\": \"stratify\",\n                    \"key\": \"id\",\n                    \"parentKey\": \"parent\"\n                },\n                {\n                    \"type\": \"tree\",\n                    \"method\": {\"signal\": \"layout\"},\n                    \"size\": [{\"signal\": \"height - 40\"}, {\"signal\": \"width - 100\"}],\n                    \"as\": [\"y\", \"x\", \"depth\", \"children\"]\n                }\n                ]\n            },\n            {\n                \"name\": \"links\",\n                \"source\": \"tree\",\n                \"transform\": [\n                { \"type\": \"treelinks\" },\n                {\n                    \"type\": \"linkpath\",\n                    \"orient\": \"horizontal\",\n                    \"shape\": {\"signal\": \"links\"}\n                }\n                ]\n            }\n            ],\n\n            \"scales\": [\n            {\n                \"name\": \"color\",\n                \"type\": \"ordinal\",\n                \"range\": [\"#0078d4\", \"#00bcf2\", \"#40e0d0\", \"#00cc6a\", \"#10893e\", \"#107c10\", \"#bad80a\", \"#ffb900\", \"#ff8c00\", \"#d13438\"],\n                \"domain\": {\"data\": \"tree\", \"field\": \"depth\"}\n            },\n            {\n                \"name\": \"size\",\n                \"type\": \"linear\",\n                \"range\": [100, 400],\n                \"domain\": {\"data\": \"tree\", \"field\": \"value\"}\n            }\n            ],\n\n            \"marks\": [\n            {\n                \"type\": \"path\",\n                \"from\": {\"data\": \"links\"},\n                \"encode\": {\n                \"update\": {\n                    \"path\": {\"field\": \"path\"},\n                    \"stroke\": {\"value\": \"#8a8886\"},\n                    \"strokeWidth\": {\"value\": 2},\n                    \"strokeOpacity\": {\"value\": 0.6}\n                }\n                }\n            },\n            {\n                \"type\": \"symbol\",\n                \"from\": {\"data\": \"tree\"},\n                \"encode\": {\n                \"enter\": {\n                    \"stroke\": {\"value\": \"#ffffff\"},\n                    \"strokeWidth\": {\"value\": 2}\n                },\n                \"update\": {\n                    \"x\": {\"field\": \"x\"},\n                    \"y\": {\"field\": \"y\"},\n                    \"size\": {\"scale\": \"size\", \"field\": \"value\"},\n                    \"fill\": {\"scale\": \"color\", \"field\": \"depth\"},\n                    \"fillOpacity\": {\"value\": 0.8},\n                    \"tooltip\": {\n                    \"signal\": \"{'Name': datum.name, 'ID': datum.id, 'Parent': datum.parent, 'Depth': datum.depth, 'Value': datum.value}\"\n                    }\n                },\n                \"hover\": {\n                    \"fillOpacity\": {\"value\": 1.0},\n                    \"strokeWidth\": {\"value\": 3}\n                }\n                }\n            },\n            {\n                \"type\": \"text\",\n                \"from\": {\"data\": \"tree\"},\n                \"encode\": {\n                \"enter\": {\n                    \"fontSize\": {\"value\": 11},\n                    \"baseline\": {\"value\": \"middle\"},\n                    \"font\": {\"value\": \"Segoe UI\"},\n                    \"fontWeight\": {\"value\": \"bold\"}\n                },\n                \"update\": {\n                    \"x\": {\"field\": \"x\"},\n                    \"y\": {\"field\": \"y\"},\n                    \"text\": {\"field\": \"name\"},\n                    \"dx\": {\"signal\": \"datum.children ? -12 : 12\"},\n                    \"align\": {\"signal\": \"datum.children ? 'right' : 'left'\"},\n                    \"fill\": {\"value\": \"#323130\"}\n                }\n                }\n            }\n            ]\n        };\n      }\n\n      else if (chartType === \"sunburst\") {\n        const nodes = new Map();\n        data.forEach((row, i) => {\n            const parent = row[headers[0]] || \"\";\n            const child = row[headers[1]] || `node_${i}`;\n            const value = headers.length >= 3 ? (parseFloat(row[headers[2]]) || 1) : 1;\n            \n            // Add parent node if it doesn't exist and is not empty\n            if (parent && !nodes.has(parent)) {\n            nodes.set(parent, {\n                id: parent,\n                parent: \"\",\n                name: parent,\n                size: 0 // Will be calculated later\n            });\n            }\n            \n            // Add child node\n            if (!nodes.has(child)) {\n            nodes.set(child, {\n                id: child,\n                parent: parent,\n                name: child,\n                size: value\n            });\n            } else {\n            // Update parent and value if child already exists\n            const existingNode = nodes.get(child);\n            existingNode.parent = parent;\n            existingNode.size = value;\n            }\n        });\n        \n        // Convert Map to array\n        const hierarchicalData = Array.from(nodes.values());\n        \n        // Find root nodes (nodes with no parent or parent not in dataset)\n        const allIds = new Set(hierarchicalData.map(d => d.id));\n        hierarchicalData.forEach(node => {\n            if (node.parent && !allIds.has(node.parent)) {\n            node.parent = \"\"; // Make it a root node if parent doesn't exist\n            }\n        });\n\n        // Calculate chart size based on data complexity\n        const nodeCount = hierarchicalData.length;\n        const chartSize = Math.max(400, Math.min(600, nodeCount * 15 + 300));\n\n        spec = {\n            \"$schema\": \"https://vega.github.io/schema/vega/v6.json\",\n            \"description\": \"Sunburst chart from Excel selection\",\n            \"width\": chartSize,\n            \"height\": chartSize,\n            \"padding\": 10,\n            \"autosize\": \"none\",\n            \"background\": \"white\",\n            \"config\": { \"view\": { \"stroke\": \"transparent\" }},\n\n            \"signals\": [\n            {\n                \"name\": \"centerX\",\n                \"update\": \"width / 2\"\n            },\n            {\n                \"name\": \"centerY\", \n                \"update\": \"height / 2\"\n            },\n            {\n                \"name\": \"outerRadius\",\n                \"update\": \"min(width, height) / 2 - 10\"\n            }\n            ],\n\n            \"data\": [\n            {\n                \"name\": \"tree\",\n                \"values\": hierarchicalData,\n                \"transform\": [\n                {\n                    \"type\": \"stratify\",\n                    \"key\": \"id\",\n                    \"parentKey\": \"parent\"\n                },\n                {\n                    \"type\": \"partition\",\n                    \"field\": \"size\",\n                    \"sort\": {\"field\": \"size\", \"order\": \"descending\"},\n                    \"size\": [{\"signal\": \"2 * PI\"}, {\"signal\": \"outerRadius\"}],\n                    \"as\": [\"a0\", \"r0\", \"a1\", \"r1\", \"depth\", \"children\"]\n                }\n                ]\n            }\n            ],\n\n            \"scales\": [\n            {\n                \"name\": \"color\",\n                \"type\": \"ordinal\",\n                \"domain\": {\"data\": \"tree\", \"field\": \"depth\"},\n                \"range\": [\n                \"#0078d4\", \"#00bcf2\", \"#40e0d0\", \"#00cc6a\", \"#10893e\", \n                \"#107c10\", \"#bad80a\", \"#ffb900\", \"#ff8c00\", \"#d13438\",\n                \"#8764b8\", \"#e3008c\", \"#00b7c3\", \"#038387\", \"#486991\"\n                ]\n            },\n            {\n                \"name\": \"opacity\",\n                \"type\": \"linear\",\n                \"domain\": {\"data\": \"tree\", \"field\": \"depth\"},\n                \"range\": [0.8, 0.4]\n            }\n            ],\n\n            \"marks\": [\n            {\n                \"type\": \"arc\",\n                \"from\": {\"data\": \"tree\"},\n                \"encode\": {\n                \"enter\": {\n                    \"x\": {\"signal\": \"centerX\"},\n                    \"y\": {\"signal\": \"centerY\"},\n                    \"stroke\": {\"value\": \"white\"},\n                    \"strokeWidth\": {\"value\": 1}\n                },\n                \"update\": {\n                    \"startAngle\": {\"field\": \"a0\"},\n                    \"endAngle\": {\"field\": \"a1\"},\n                    \"innerRadius\": {\"field\": \"r0\"},\n                    \"outerRadius\": {\"field\": \"r1\"},\n                    \"fill\": {\"scale\": \"color\", \"field\": \"depth\"},\n                    \"fillOpacity\": {\"scale\": \"opacity\", \"field\": \"depth\"}\n                }\n                }\n            },\n            {\n                \"type\": \"text\",\n                \"from\": {\"data\": \"tree\"},\n                \"encode\": {\n                \"enter\": {\n                    \"x\": {\"signal\": \"centerX\"},\n                    \"y\": {\"signal\": \"centerY\"},\n                    \"radius\": {\"signal\": \"(datum.r0 + datum.r1) / 2\"},\n                    \"theta\": {\"signal\": \"(datum.a0 + datum.a1) / 2\"},\n                    \"fill\": {\"value\": \"#323130\"},\n                    \"font\": {\"value\": \"Segoe UI\"},\n                    \"fontSize\": {\"value\": 10},\n                    \"fontWeight\": {\"value\": \"bold\"},\n                    \"align\": {\"value\": \"center\"},\n                    \"baseline\": {\"value\": \"middle\"}\n                },\n                \"update\": {\n                    \"text\": {\n                    \"signal\": \"(datum.r1 - datum.r0) > 20 && (datum.a1 - datum.a0) > 0.3 ? datum.name : ''\"\n                    },\n                    \"opacity\": {\n                    \"signal\": \"(datum.r1 - datum.r0) > 20 && (datum.a1 - datum.a0) > 0.3 ? 1 : 0\"\n                    }\n                }\n                }\n            }\n            ]\n        };\n      }\n\n      else if (chartType === \"radar\") {\n        const radarData = [];\n        const dimensions = headers.slice(1); // All columns except first are dimensions\n        \n        data.forEach((row, seriesIndex) => {\n            const seriesName = row[headers[0]] || `Series ${seriesIndex + 1}`;\n            \n            dimensions.forEach(dimension => {\n            const value = parseFloat(row[dimension]) || 0;\n            radarData.push({\n                series: seriesName,\n                dimension: dimension,\n                value: value,\n                category: seriesIndex\n            });\n            });\n        });\n\n        // Get unique dimensions for grid\n        const uniqueDimensions = [...new Set(radarData.map(d => d.dimension))];\n\n        spec = {\n            \"$schema\": \"https://vega.github.io/schema/vega/v6.json\",\n            \"description\": \"Radar chart from Excel selection\",\n            \"width\": 400,\n            \"height\": 400,\n            \"padding\": 60,\n            \"autosize\": {\"type\": \"none\", \"contains\": \"padding\"},\n            \"background\": \"white\",\n            \"config\": { \"view\": { \"stroke\": \"transparent\" }},\n\n            \"signals\": [\n            {\"name\": \"radius\", \"update\": \"width / 2\"}\n            ],\n\n            \"data\": [\n            {\n                \"name\": \"table\",\n                \"values\": radarData\n            },\n            {\n                \"name\": \"dimensions\",\n                \"values\": uniqueDimensions.map(d => ({dimension: d}))\n            }\n            ],\n\n            \"scales\": [\n            {\n                \"name\": \"angular\",\n                \"type\": \"point\",\n                \"range\": {\"signal\": \"[-PI, PI]\"},\n                \"padding\": 0.5,\n                \"domain\": uniqueDimensions\n            },\n            {\n                \"name\": \"radial\",\n                \"type\": \"linear\",\n                \"range\": {\"signal\": \"[0, radius]\"},\n                \"zero\": true,\n                \"nice\": true,\n                \"domain\": {\"data\": \"table\", \"field\": \"value\"},\n                \"domainMin\": 0\n            },\n            {\n                \"name\": \"color\",\n                \"type\": \"ordinal\",\n                \"domain\": {\"data\": \"table\", \"field\": \"category\"},\n                \"range\": [\n                \"#0078d4\", \"#00bcf2\", \"#40e0d0\", \"#00cc6a\", \"#10893e\",\n                \"#107c10\", \"#bad80a\", \"#ffb900\", \"#ff8c00\", \"#d13438\"\n                ]\n            }\n            ],\n\n            \"encode\": {\n            \"enter\": {\n                \"x\": {\"signal\": \"radius\"},\n                \"y\": {\"signal\": \"radius\"}\n            }\n            },\n\n            \"marks\": [\n            {\n                \"type\": \"group\",\n                \"name\": \"categories\",\n                \"zindex\": 1,\n                \"from\": {\n                \"facet\": {\"data\": \"table\", \"name\": \"facet\", \"groupby\": [\"category\", \"series\"]}\n                },\n                \"marks\": [\n                {\n                    \"type\": \"line\",\n                    \"name\": \"category-line\",\n                    \"from\": {\"data\": \"facet\"},\n                    \"encode\": {\n                    \"enter\": {\n                        \"interpolate\": {\"value\": \"linear-closed\"},\n                        \"x\": {\"signal\": \"scale('radial', datum.value) * cos(scale('angular', datum.dimension))\"},\n                        \"y\": {\"signal\": \"scale('radial', datum.value) * sin(scale('angular', datum.dimension))\"},\n                        \"stroke\": {\"scale\": \"color\", \"field\": \"category\"},\n                        \"strokeWidth\": {\"value\": 2},\n                        \"fill\": {\"scale\": \"color\", \"field\": \"category\"},\n                        \"fillOpacity\": {\"value\": 0.1},\n                        \"strokeOpacity\": {\"value\": 0.8}\n                    }\n                    }\n                },\n                {\n                    \"type\": \"symbol\",\n                    \"name\": \"category-points\",\n                    \"from\": {\"data\": \"facet\"},\n                    \"encode\": {\n                    \"enter\": {\n                        \"x\": {\"signal\": \"scale('radial', datum.value) * cos(scale('angular', datum.dimension))\"},\n                        \"y\": {\"signal\": \"scale('radial', datum.value) * sin(scale('angular', datum.dimension))\"},\n                        \"size\": {\"value\": 50},\n                        \"fill\": {\"scale\": \"color\", \"field\": \"category\"},\n                        \"stroke\": {\"value\": \"white\"},\n                        \"strokeWidth\": {\"value\": 1}\n                    }\n                    }\n                }\n                ]\n            },\n            {\n                \"type\": \"rule\",\n                \"name\": \"radial-grid\",\n                \"from\": {\"data\": \"dimensions\"},\n                \"zindex\": 0,\n                \"encode\": {\n                \"enter\": {\n                    \"x\": {\"value\": 0},\n                    \"y\": {\"value\": 0},\n                    \"x2\": {\"signal\": \"radius * cos(scale('angular', datum.dimension))\"},\n                    \"y2\": {\"signal\": \"radius * sin(scale('angular', datum.dimension))\"},\n                    \"stroke\": {\"value\": \"#e1e4e8\"},\n                    \"strokeWidth\": {\"value\": 1}\n                }\n                }\n            },\n            {\n                \"type\": \"text\",\n                \"name\": \"dimension-label\",\n                \"from\": {\"data\": \"dimensions\"},\n                \"zindex\": 1,\n                \"encode\": {\n                \"enter\": {\n                    \"x\": {\"signal\": \"(radius + 20) * cos(scale('angular', datum.dimension))\"},\n                    \"y\": {\"signal\": \"(radius + 20) * sin(scale('angular', datum.dimension))\"},\n                    \"text\": {\"field\": \"dimension\"},\n                    \"align\": [\n                    {\n                        \"test\": \"abs(scale('angular', datum.dimension)) > PI / 2\",\n                        \"value\": \"right\"\n                    },\n                    {\n                        \"value\": \"left\"\n                    }\n                    ],\n                    \"baseline\": [\n                    {\n                        \"test\": \"scale('angular', datum.dimension) > 0\", \n                        \"value\": \"top\"\n                    },\n                    {\n                        \"test\": \"scale('angular', datum.dimension) == 0\", \n                        \"value\": \"middle\"\n                    },\n                    {\n                        \"value\": \"bottom\"\n                    }\n                    ],\n                    \"fill\": {\"value\": \"#323130\"},\n                    \"fontWeight\": {\"value\": \"bold\"},\n                    \"font\": {\"value\": \"Segoe UI\"},\n                    \"fontSize\": {\"value\": 12}\n                }\n                }\n            },\n            {\n                \"type\": \"line\",\n                \"name\": \"outer-line\",\n                \"from\": {\"data\": \"radial-grid\"},\n                \"encode\": {\n                \"enter\": {\n                    \"interpolate\": {\"value\": \"linear-closed\"},\n                    \"x\": {\"field\": \"x2\"},\n                    \"y\": {\"field\": \"y2\"},\n                    \"stroke\": {\"value\": \"#8a8886\"},\n                    \"strokeWidth\": {\"value\": 2},\n                    \"strokeOpacity\": {\"value\": 0.6}\n                }\n                }\n            }\n            ]\n        };\n      }\n\n      else if (chartType === \"waterfall\") {\n        // Process waterfall data inline - set last entry's amount to 0\n        const processedData = [...data];\n        if (processedData.length > 0) {\n            processedData[processedData.length - 1] = {\n            ...processedData[processedData.length - 1],\n            [headers[1]]: 0\n            };\n        }\n\n        // Calculate dynamic dimensions\n        const numDataPoints = data.length;\n        const dynamicWidth = Math.max(400, Math.min(1600, numDataPoints * 50));\n        const maxAmount = Math.max(...data.map(d => Math.abs(d[headers[1]])));\n        const dynamicHeight = Math.max(300, Math.min(600, maxAmount / 100 + 200));\n\n        spec = {\n            $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n            description: \"Waterfall chart with multiple subtotals\",\n            background: \"white\",\n            data: { values: processedData },\n            config: { view: { stroke: \"transparent\" }},\n            width: dynamicWidth,\n            height: dynamicHeight,\n            transform: [\n            { \"window\": [{ \"op\": \"sum\", \"field\": headers[1], \"as\": \"sum\" }] },\n            { \"window\": [{ \"op\": \"lead\", \"field\": headers[0], \"as\": \"lead\" }] },\n            {\n                \"calculate\": `datum.lead === null ? datum.${headers[0]} : datum.lead`,\n                \"as\": \"lead\"\n            },\n            {\n                // If total → reset, else → running sum step\n                \"calculate\": `datum.${headers[2]} == 'total' ? 0 : datum.sum - datum.${headers[1]}`,\n                \"as\": \"previous_sum\"\n            },\n            {\n                \"calculate\": `datum.${headers[2]} == 'total' ? datum.sum : datum.${headers[1]}`,\n                \"as\": \"amount\"\n            },\n            {\n                \"calculate\": `datum.${headers[2]} == 'total' ? datum.${headers[1]} / 2 : (datum.sum + datum.previous_sum) / 2`,\n                \"as\": \"center\"\n            },\n            {\n                \"calculate\": `datum.${headers[2]} == 'total' ? datum.sum : (datum.${headers[1]} > 0 ? '+' : '') + datum.${headers[1]}`,\n                \"as\": \"text_amount\"\n            },\n            { \"calculate\": \"(datum.sum + datum.previous_sum) / 2\", \"as\": \"center\" },\n\n            // Add group index for stacked handling\n            {\n                \"window\": [{ \"op\": \"rank\", \"as\": \"group_index\" }],\n                \"frame\": [null, null],\n                \"groupby\": [headers[0]]\n            },\n\n            // Precompute color shades\n            {\n                \"calculate\": `\n                datum.${headers[2]} == 'total'\n                    ? '#00B0F0'\n                    : datum.amount >= 0\n                    ? (datum.group_index == 1 ? '#70AD47'\n                        : (datum.group_index == 2 ? '#8BC97A'\n                        : (datum.group_index == 3 ? '#A7DA9D'\n                        : '#C3EBC0')))\n                    : (datum.group_index == 1 ? '#E15759'\n                        : (datum.group_index == 2 ? '#EC7A7C'\n                        : (datum.group_index == 3 ? '#F29C9D'\n                        : '#F8BEBF')))\n                `,\n                \"as\": \"bar_color\"\n            }\n            ],\n            encoding: {\n            x: {\n                field: headers[0],\n                type: \"ordinal\",\n                sort: null,\n                axis: { labelAngle: -45, title: null },\n                scale: { paddingInner: 0.05, paddingOuter: 0.025 }\n            }\n            },\n            layer: [\n            {\n                mark: { type: \"bar\", size: 60},\n                encoding: {\n                y: { field: \"previous_sum\", type: \"quantitative\", title: null },\n                y2: { field: \"sum\" },\n                color: { field: \"bar_color\", type: \"nominal\", scale: null }\n                }\n            },\n            {\n                mark: { type: \"text\", fontWeight: \"bold\", baseline: \"middle\" },\n                encoding: {\n                y: { field: \"center\", type: \"quantitative\" },\n                text: { field: \"text_amount\", type: \"nominal\" },\n                color: {\n                    condition: [\n                    { test: `datum.${headers[2]} == 'total'`, value: \"#725a30\" }\n                    ],\n                    value: \"white\"\n                }\n                }\n            }\n            ],\n            config: { text: { fontWeight: \"bold\", color: \"#D9D9D9\" } }\n        };\n      }\n\n      else if (chartType === \"gauge\") {\n      if (headers.length < 2) {\n        console.warn(\"Gauge chart requires 2 columns: Current Value, Max Value\");\n        return;\n      }\n\n      // Process gauge data - expect one row with current value and max value\n      const gaugeRow = data[0]; // Use first data row\n      const mainValue = parseFloat(gaugeRow[headers[0]]) || 0;\n      const maxValue = parseFloat(gaugeRow[headers[1]]) || 100;\n      const minValue = 0; // Always start from 0\n\n      spec = {\n        \"$schema\": \"https://vega.github.io/schema/vega/v5.json\",\n        \"description\": \"Gauge chart from Excel selection\",\n        \"width\": 400,\n        \"height\": 220,\n        \"background\": \"white\",\n        \"config\": { \"view\": { \"stroke\": \"transparent\" }},\n        \n        \"signals\": [\n          {\"name\": \"centerX\", \"update\": \"width / 2\"},\n          {\"name\": \"centerY\", \"update\": \"height - 20\"},\n          {\"name\": \"outerRadius\", \"update\": \"min(width / 2, height) - 20\"},\n          {\"name\": \"innerRadius\", \"update\": \"outerRadius - outerRadius * 0.25\"},\n          {\"name\": \"mainValue\", \"value\": mainValue},\n          {\"name\": \"minValue\", \"value\": minValue},\n          {\"name\": \"maxValue\", \"value\": maxValue},\n          {\"name\": \"usedValue\", \"update\": \"min(max(minValue, mainValue), maxValue)\"},\n          {\"name\": \"fontFactor\", \"update\": \"(min(width, height)/5)/25\"},\n          {\"name\": \"backgroundColor\", \"value\": \"#e1e4e8\"},\n          {\"name\": \"fillColor\", \"value\": \"#0078d4\"},\n          {\"name\": \"needleColor\", \"value\": \"#323130\"},\n          {\"name\": \"needleSize\", \"update\": \"innerRadius\"}\n        ],\n        \n        \"scales\": [\n          {\n            \"name\": \"gaugeScale\",\n            \"type\": \"linear\",\n            \"domain\": [{\"signal\": \"minValue\"}, {\"signal\": \"maxValue\"}],\n            \"range\": [{\"signal\": \"-PI/2\"}, {\"signal\": \"PI/2\"}]\n          },\n          {\n            \"name\": \"needleScale\",\n            \"type\": \"linear\",\n            \"domain\": [{\"signal\": \"minValue\"}, {\"signal\": \"maxValue\"}],\n            \"range\": [-90, 90]\n          }\n        ],\n        \n        \"marks\": [\n          {\n            \"type\": \"arc\",\n            \"name\": \"gauge\",\n            \"encode\": {\n              \"enter\": {\n                \"x\": {\"signal\": \"centerX\"},\n                \"y\": {\"signal\": \"centerY\"},\n                \"startAngle\": {\"signal\": \"-PI/2\"},\n                \"endAngle\": {\"signal\": \"PI/2\"},\n                \"outerRadius\": {\"signal\": \"outerRadius\"},\n                \"innerRadius\": {\"signal\": \"innerRadius\"},\n                \"fill\": {\"signal\": \"backgroundColor\"}\n              }\n            }\n          },\n          {\n            \"type\": \"arc\",\n            \"encode\": {\n              \"enter\": {\"startAngle\": {\"signal\": \"-PI/2\"}},\n              \"update\": {\n                \"x\": {\"signal\": \"centerX\"},\n                \"y\": {\"signal\": \"centerY\"},\n                \"innerRadius\": {\"signal\": \"innerRadius\"},\n                \"outerRadius\": {\"signal\": \"outerRadius\"},\n                \"endAngle\": {\"scale\": \"gaugeScale\", \"signal\": \"usedValue\"},\n                \"fill\": {\"signal\": \"fillColor\"}\n              }\n            }\n          },\n          {\n            \"type\": \"text\",\n            \"description\": \"displayed main value at the center\",\n            \"encode\": {\n              \"enter\": {\n                \"x\": {\"signal\": \"centerX\"},\n                \"y\": {\"signal\": \"centerY + fontFactor * 15\"},\n                \"baseline\": {\"value\": \"middle\"},\n                \"align\": {\"value\": \"center\"},\n                \"fontSize\": {\"signal\": \"fontFactor * 7\"},\n                \"font\": {\"value\": \"Segoe UI\"},\n                \"fontWeight\": {\"value\": \"bold\"}\n              },\n              \"update\": {\n                \"text\": {\"signal\": \"mainValue < 1 ? format(mainValue, '.0%') : format(mainValue, ',.0f')\"},\n                \"fill\": {\"signal\": \"fillColor\"}\n              }\n            }\n          },\n          {\n            \"type\": \"symbol\",\n            \"name\": \"needle\",\n            \"encode\": {\n              \"enter\": {\"x\": {\"signal\": \"centerX\"}, \"y\": {\"signal\": \"centerY\"}},\n              \"update\": {\n                \"shape\": {\n                  \"signal\": \"'M-2.5 -2.5 Q 0 0 2.5 -2.5 L 0 -' + toString(needleSize) + ' Z '\"\n                },\n                \"angle\": {\"signal\": \"usedValue\", \"scale\": \"needleScale\"},\n                \"size\": {\"signal\": \"4\"},\n                \"stroke\": {\"signal\": \"needleColor\"},\n                \"fill\": {\"signal\": \"needleColor\"}\n              }\n            }\n          },\n          {\n            \"type\": \"symbol\",\n            \"description\": \"center circle\",\n            \"encode\": {\n              \"enter\": {\n                \"x\": {\"signal\": \"centerX\"},\n                \"y\": {\"signal\": \"centerY\"},\n                \"shape\": {\"value\": \"circle\"},\n                \"size\": {\"signal\": \"pow(fontFactor * 8, 2)\"},\n                \"fill\": {\"signal\": \"needleColor\"},\n                \"stroke\": {\"value\": \"white\"},\n                \"strokeWidth\": {\"value\": 2}\n              }\n            }\n          }\n        ]\n      };\n      }\n\n      else if (chartType === \"pie\") {\n        spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        description: \"Pie chart from Excel selection\",\n        data: { values: data },\n        mark: { type: \"arc\", outerRadius: 120 },\n        encoding: {\n          theta: { field: headers[1], type: \"quantitative\" },\n          color: { field: headers[0], type: \"nominal\" }\n          }\n        };\n      }\n\n      else if (chartType === \"donut\") {\n        if (headers.length < 2) {\n            throw new Error(\"Donut chart requires 2 columns: Category, Value\");\n        }\n\n        // Validate that all values are positive numbers\n        const hasInvalidValues = data.some(row => isNaN(row[headers[1]]) || row[headers[1]] <= 0);\n        if (hasInvalidValues) {\n            throw new Error(\"Donut chart values must be positive numbers\");\n        }\n\n        // Use Vega-Lite specification for donut chart\n        spec = {\n            $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n            background: \"white\",\n            config: { view: { stroke: \"transparent\" }},\n            description: \"Donut chart from Excel selection\",\n            data: { values: data },\n            mark: { \n            type: \"arc\", \n            innerRadius: 50,  // This creates the donut hole\n            outerRadius: 120,\n            tooltip: true,\n            stroke: \"white\",\n            strokeWidth: 2\n            },\n            encoding: {\n            theta: { \n                field: headers[1], \n                type: \"quantitative\",\n                scale: { type: \"linear\", range: [0, 6.28] }\n            },\n            color: { \n                field: headers[0], \n                type: \"nominal\",\n                scale: { scheme: \"category10\" },\n                legend: {\n                title: headers[0],\n                titleFontSize: 12,\n                labelFontSize: 11,\n                orient: \"right\"\n                }\n            },\n            tooltip: [\n                { field: headers[0], type: \"nominal\", title: \"Category\" },\n                { field: headers[1], type: \"quantitative\", title: \"Value\", format: \",.0f\" }\n            ]\n            },\n            config: {\n            font: \"Segoe UI\",\n            legend: {\n                titleColor: \"#323130\",\n                labelColor: \"#605e5c\"\n            }\n            }\n        };\n      }\n\n      else if (chartType === \"histogram\") {\n        // Expect a single numeric column\n        const numericData = rows\n          .filter(r => !isNaN(+r[0]))\n          .map(r => ({ value: +r[0] }));\n\n        // Calculate data range for better binning control\n        const values = numericData.map(d => d.value);\n        const minVal = Math.min(...values);\n        const maxVal = Math.max(...values);\n        const range = maxVal - minVal;\n        \n        // Calculate nice bin boundaries\n        const binCount = 20;\n        const binWidth = range / binCount;\n        const niceMin = Math.floor(minVal / binWidth) * binWidth;\n        const niceMax = Math.ceil(maxVal / binWidth) * binWidth;\n\n        spec = {\n          \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",\n          \"description\": \"Histogram from Excel selection\",\n          \"background\": \"white\",\n          \"config\": { \"view\": { \"stroke\": \"transparent\" }},\n          \"data\": { \"values\": numericData },\n          \"mark\": {\n            \"type\": \"bar\",\n            \"tooltip\": true,\n            \"stroke\": \"white\",\n            \"strokeWidth\": 1\n          },\n          \"encoding\": {\n            \"x\": {\n              \"field\": \"value\",\n              \"bin\": { \n                \"extent\": [niceMin, niceMax],\n                \"step\": binWidth,\n                \"nice\": false  // Prevent Vega from adjusting our nice boundaries\n              },\n              \"type\": \"quantitative\",\n              \"axis\": { \n                \"title\": \"Value\",\n                \"labelFontSize\": 12,\n                \"titleFontSize\": 14,\n                \"labelColor\": \"#605e5c\",\n                \"titleColor\": \"#323130\"\n              },\n              \"scale\": {\n                \"domain\": [niceMin, niceMax],\n                \"range\": \"width\",\n                \"paddingInner\": 0.05,\n                \"paddingOuter\": 0.02\n              }\n            },\n            \"y\": {\n              \"aggregate\": \"count\",\n              \"type\": \"quantitative\",\n              \"axis\": { \n                \"title\": \"Count\",\n                \"labelFontSize\": 12,\n                \"titleFontSize\": 14,\n                \"labelColor\": \"#605e5c\",\n                \"titleColor\": \"#323130\",\n                \"gridColor\": \"#f3f2f1\"\n              }\n            },\n            \"color\": {\n              \"value\": \"#0078d4\"\n            }\n          },\n          \"config\": {\n            \"font\": \"Segoe UI\",\n            \"axis\": {\n              \"labelColor\": \"#605e5c\",\n              \"titleColor\": \"#323130\",\n              \"gridColor\": \"#f3f2f1\"\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"density\") {\n        if (headers.length < 1) {\n          console.warn(\"Density plot requires at least 1 column (Values)\");\n          return;\n        }\n\n        // Use EXACT specification from Vega-Lite reference with bandwidth parameter\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n          description: \"Density plot from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          width: 400,\n          height: 100,\n          data: { values: data },\n          transform: [{\n            density: headers[0],\n            bandwidth: 0.3\n          }],\n          mark: \"area\",\n          encoding: {\n            x: {\n              field: \"value\",\n              title: headers[0],\n              type: \"quantitative\",\n              axis: {\n                labelFontSize: 12,\n                titleFontSize: 14,\n                labelColor: \"#605e5c\",\n                titleColor: \"#323130\",\n                gridColor: \"#f3f2f1\"\n              }\n            },\n            y: {\n              field: \"density\",\n              type: \"quantitative\",\n              title: \"Density\",\n              axis: {\n                labelFontSize: 12,\n                titleFontSize: 14,\n                labelColor: \"#605e5c\",\n                titleColor: \"#323130\",\n                gridColor: \"#f3f2f1\"\n              }\n            },\n            color: {\n              value: \"#0078d4\"\n            },\n            tooltip: [\n              { field: \"value\", type: \"quantitative\", title: headers[0], format: \".2f\" },\n              { field: \"density\", type: \"quantitative\", title: \"Density\", format: \".4f\" }\n            ]\n          },\n          config: {\n            font: \"Segoe UI\",\n            axis: {\n              labelColor: \"#605e5c\",\n              titleColor: \"#323130\",\n              gridColor: \"#f3f2f1\"\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"candlestick\") {\n        // Helper function to convert Excel dates to JS dates\n        function excelDateToJSDate(serial) {\n          if (typeof serial === 'number') {\n            return new Date(Math.round((serial - 25569) * 86400 * 1000));\n          }\n          return new Date(serial);\n        }\n\n        // Process and validate data - SKIP ROWS WITH MISSING VALUES\n        const candlestickData = data\n          .map((row, index) => {\n            // Skip if any required value is missing/null/empty\n            if (!row[headers[0]] || \n                row[headers[1]] == null || row[headers[1]] === \"\" ||\n                row[headers[2]] == null || row[headers[2]] === \"\" ||\n                row[headers[3]] == null || row[headers[3]] === \"\" ||\n                row[headers[4]] == null || row[headers[4]] === \"\") {\n              return null;\n            }\n\n            const date = excelDateToJSDate(row[headers[0]]);\n            const open = parseFloat(row[headers[1]]);\n            const high = parseFloat(row[headers[2]]);\n            const low = parseFloat(row[headers[3]]);\n            const close = parseFloat(row[headers[4]]);\n            \n            if (isNaN(date.getTime()) || isNaN(open) || isNaN(high) || isNaN(low) || isNaN(close)) {\n              return null;\n            }\n            \n            return {\n              date: date.toISOString(),\n              open: open,\n              high: high,\n              low: low,\n              close: close\n            };\n          })\n          .filter(Boolean); // Remove null entries\n\n        if (candlestickData.length === 0) {\n          console.warn(\"No valid candlestick data found\");\n          return;\n        }\n\n        // Calculate dynamic width based on number of data points\n        const dataPoints = candlestickData.length;\n        const minWidth = 500;\n        const maxWidth = 1400;\n        const widthPerPoint = 18; // Pixels per candlestick\n        const dynamicWidth = Math.max(minWidth, Math.min(maxWidth, dataPoints * widthPerPoint));\n\n        // Format dates for display (keep original date for sorting)\n        const formattedData = candlestickData.map(d => ({\n          ...d,\n          dateDisplay: new Date(d.date).toLocaleDateString('en-US', { \n            month: dataPoints > 50 ? 'numeric' : 'short', \n            day: 'numeric',\n            year: dataPoints > 100 ? undefined : '2-digit'\n          })\n        }));\n\n        spec = {\n          \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",\n          \"width\": dynamicWidth,\n          \"height\": 400,\n          \"description\": \"Candlestick chart V4 from Excel selection\",\n          \"background\": \"white\",\n          \"padding\": {\"left\": 10, \"right\": 10, \"top\": 10, \"bottom\": 10},\n          \"config\": { \"view\": { \"stroke\": \"transparent\" }},\n          \"data\": { \"values\": formattedData },\n          \"encoding\": {\n            \"x\": {\n              \"field\": \"dateDisplay\",\n              \"type\": \"ordinal\", // Ordinal scale eliminates gaps for missing dates\n              \"title\": \"Date\",\n              \"axis\": {\n                \"labelAngle\": dataPoints > 15 ? -45 : 0,\n                \"labelFontSize\": 10,\n                \"titleFontSize\": 12,\n                \"labelColor\": \"#605e5c\",\n                \"titleColor\": \"#323130\",\n                \"font\": \"Segoe UI\",\n                \"labelLimit\": 100,\n                \"labelOverlap\": false,\n                \"titlePadding\": 5,\n                \"labelPadding\": 3\n              },\n              \"scale\": {\n                \"type\": \"band\",\n                \"paddingInner\": 0.1, // 10% gap between bars\n                \"paddingOuter\": 0.05 // 5% padding at edges\n              }\n            },\n            \"y\": {\n              \"type\": \"quantitative\",\n              \"scale\": { \"zero\": false },\n              \"axis\": {\n                \"title\": \"Price\",\n                \"labelFontSize\": 11,\n                \"titleFontSize\": 12,\n                \"labelColor\": \"#605e5c\",\n                \"titleColor\": \"#323130\",\n                \"font\": \"Segoe UI\",\n                \"grid\": true,\n                \"gridColor\": \"#f3f2f1\",\n                \"titlePadding\": 5,\n                \"labelPadding\": 3\n              }\n            },\n            \"color\": {\n              \"condition\": {\n                \"test\": \"datum.open < datum.close\",\n                \"value\": \"#06982d\" // Green for bullish (up) candles\n              },\n              \"value\": \"#ae1325\" // Red for bearish (down) candles\n            }\n          },\n          \"layer\": [\n            {\n              \"mark\": {\n                \"type\": \"rule\",\n                \"tooltip\": true,\n                \"strokeWidth\": 1\n              },\n              \"encoding\": {\n                \"y\": { \"field\": \"low\" },\n                \"y2\": { \"field\": \"high\" },\n                \"tooltip\": [\n                  { \"field\": \"date\", \"type\": \"temporal\", \"title\": \"Date\", \"format\": \"%Y-%m-%d\" },\n                  { \"field\": \"open\", \"type\": \"quantitative\", \"title\": \"Open\", \"format\": \".2f\" },\n                  { \"field\": \"high\", \"type\": \"quantitative\", \"title\": \"High\", \"format\": \".2f\" },\n                  { \"field\": \"low\", \"type\": \"quantitative\", \"title\": \"Low\", \"format\": \".2f\" },\n                  { \"field\": \"close\", \"type\": \"quantitative\", \"title\": \"Close\", \"format\": \".2f\" }\n                ]\n              }\n            },\n            {\n              \"mark\": {\n                \"type\": \"bar\",\n                \"tooltip\": true,\n                \"stroke\": \"white\",\n                \"strokeWidth\": 0.5\n              },\n              \"encoding\": {\n                \"y\": { \"field\": \"open\" },\n                \"y2\": { \"field\": \"close\" },\n                \"tooltip\": [\n                  { \"field\": \"date\", \"type\": \"temporal\", \"title\": \"Date\", \"format\": \"%Y-%m-%d\" },\n                  { \"field\": \"open\", \"type\": \"quantitative\", \"title\": \"Open\", \"format\": \".2f\" },\n                  { \"field\": \"high\", \"type\": \"quantitative\", \"title\": \"High\", \"format\": \".2f\" },\n                  { \"field\": \"low\", \"type\": \"quantitative\", \"title\": \"Low\", \"format\": \".2f\" },\n                  { \"field\": \"close\", \"type\": \"quantitative\", \"title\": \"Close\", \"format\": \".2f\" }\n                ]\n              }\n            }\n          ],\n          \"config\": {\n            \"font\": \"Segoe UI\",\n            \"axis\": {\n              \"labelColor\": \"#605e5c\",\n              \"titleColor\": \"#323130\",\n              \"gridColor\": \"#f3f2f1\"\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"map\") {\n      // Expect headers: Country (ISO3) | Value\n      const isoToId = {\n        \"AFG\": 4,    // Afghanistan\n        \"AGO\": 24,   // Angola\n        \"ALB\": 8,    // Albania\n        \"AND\": 20,   // Andorra\n        \"ARE\": 784,  // United Arab Emirates\n        \"ARG\": 32,   // Argentina\n        \"ARM\": 51,   // Armenia\n        \"ATA\": 10,   // Antarctica\n        \"ATG\": 28,   // Antigua and Barbuda\n        \"AUS\": 36,   // Australia\n        \"AUT\": 40,   // Austria\n        \"AZE\": 31,   // Azerbaijan\n        \"BDI\": 108,  // Burundi\n        \"BEL\": 56,   // Belgium\n        \"BEN\": 204,  // Benin\n        \"BFA\": 854,  // Burkina Faso\n        \"BGD\": 50,   // Bangladesh\n        \"BGR\": 100,  // Bulgaria\n        \"BHR\": 48,   // Bahrain\n        \"BHS\": 44,   // Bahamas\n        \"BIH\": 70,   // Bosnia and Herzegovina\n        \"BLR\": 112,  // Belarus\n        \"BLZ\": 84,   // Belize\n        \"BOL\": 68,   // Bolivia\n        \"BRA\": 76,   // Brazil\n        \"BRB\": 52,   // Barbados\n        \"BRN\": 96,   // Brunei\n        \"BTN\": 64,   // Bhutan\n        \"BWA\": 72,   // Botswana\n        \"CAF\": 140,  // Central African Republic\n        \"CAN\": 124,  // Canada\n        \"CHE\": 756,  // Switzerland\n        \"CHL\": 152,  // Chile\n        \"CHN\": 156,  // China\n        \"CIV\": 384,  // Côte d'Ivoire\n        \"CMR\": 120,  // Cameroon\n        \"COD\": 180,  // Democratic Republic of Congo\n        \"COG\": 178,  // Congo\n        \"COL\": 170,  // Colombia\n        \"COM\": 174,  // Comoros\n        \"CPV\": 132,  // Cape Verde\n        \"CRI\": 188,  // Costa Rica\n        \"CUB\": 192,  // Cuba\n        \"CYP\": 196,  // Cyprus\n        \"CZE\": 203,  // Czechia\n        \"DEU\": 276,  // Germany\n        \"DJI\": 262,  // Djibouti\n        \"DMA\": 212,  // Dominica\n        \"DNK\": 208,  // Denmark\n        \"DOM\": 214,  // Dominican Republic\n        \"DZA\": 12,   // Algeria\n        \"ECU\": 218,  // Ecuador\n        \"EGY\": 818,  // Egypt\n        \"ERI\": 232,  // Eritrea\n        \"ESH\": 732,  // Western Sahara\n        \"ESP\": 724,  // Spain\n        \"EST\": 233,  // Estonia\n        \"ETH\": 231,  // Ethiopia\n        \"FIN\": 246,  // Finland\n        \"FJI\": 242,  // Fiji\n        \"FRA\": 250,  // France\n        \"FSM\": 583,  // Micronesia\n        \"GAB\": 266,  // Gabon\n        \"GBR\": 826,  // United Kingdom\n        \"GEO\": 268,  // Georgia\n        \"GHA\": 288,  // Ghana\n        \"GIN\": 324,  // Guinea\n        \"GMB\": 270,  // Gambia\n        \"GNB\": 624,  // Guinea-Bissau\n        \"GNQ\": 226,  // Equatorial Guinea\n        \"GRC\": 300,  // Greece\n        \"GRD\": 308,  // Grenada\n        \"GRL\": 304,  // Greenland\n        \"GTM\": 320,  // Guatemala\n        \"GUY\": 328,  // Guyana\n        \"HND\": 340,  // Honduras\n        \"HRV\": 191,  // Croatia\n        \"HTI\": 332,  // Haiti\n        \"HUN\": 348,  // Hungary\n        \"IDN\": 360,  // Indonesia\n        \"IND\": 356,  // India\n        \"IRL\": 372,  // Ireland\n        \"IRN\": 364,  // Iran\n        \"IRQ\": 368,  // Iraq\n        \"ISL\": 352,  // Iceland\n        \"ISR\": 376,  // Israel\n        \"ITA\": 380,  // Italy\n        \"JAM\": 388,  // Jamaica\n        \"JOR\": 400,  // Jordan\n        \"JPN\": 392,  // Japan\n        \"KAZ\": 398,  // Kazakhstan\n        \"KEN\": 404,  // Kenya\n        \"KGZ\": 417,  // Kyrgyzstan\n        \"KHM\": 116,  // Cambodia\n        \"KIR\": 296,  // Kiribati\n        \"KNA\": 659,  // Saint Kitts and Nevis\n        \"KOR\": 410,  // South Korea\n        \"KWT\": 414,  // Kuwait\n        \"LAO\": 418,  // Laos\n        \"LBN\": 422,  // Lebanon\n        \"LBR\": 430,  // Liberia\n        \"LBY\": 434,  // Libya\n        \"LCA\": 662,  // Saint Lucia\n        \"LIE\": 438,  // Liechtenstein\n        \"LKA\": 144,  // Sri Lanka\n        \"LSO\": 426,  // Lesotho\n        \"LTU\": 440,  // Lithuania\n        \"LUX\": 442,  // Luxembourg\n        \"LVA\": 428,  // Latvia\n        \"MAR\": 504,  // Morocco\n        \"MCO\": 492,  // Monaco\n        \"MDA\": 498,  // Moldova\n        \"MDG\": 450,  // Madagascar\n        \"MDV\": 462,  // Maldives\n        \"MEX\": 484,  // Mexico\n        \"MHL\": 584,  // Marshall Islands\n        \"MKD\": 807,  // North Macedonia\n        \"MLI\": 466,  // Mali\n        \"MLT\": 470,  // Malta\n        \"MMR\": 104,  // Myanmar\n        \"MNE\": 499,  // Montenegro\n        \"MNG\": 496,  // Mongolia\n        \"MOZ\": 508,  // Mozambique\n        \"MRT\": 478,  // Mauritania\n        \"MUS\": 480,  // Mauritius\n        \"MWI\": 454,  // Malawi\n        \"MYS\": 458,  // Malaysia\n        \"NAM\": 516,  // Namibia\n        \"NCL\": 540,  // New Caledonia\n        \"NER\": 562,  // Niger\n        \"NGA\": 566,  // Nigeria\n        \"NIC\": 558,  // Nicaragua\n        \"NLD\": 528,  // Netherlands\n        \"NOR\": 578,  // Norway\n        \"NPL\": 524,  // Nepal\n        \"NRU\": 520,  // Nauru\n        \"NZL\": 554,  // New Zealand\n        \"OMN\": 512,  // Oman\n        \"PAK\": 586,  // Pakistan\n        \"PAN\": 591,  // Panama\n        \"PER\": 604,  // Peru\n        \"PHL\": 608,  // Philippines\n        \"PLW\": 585,  // Palau\n        \"PNG\": 598,  // Papua New Guinea\n        \"POL\": 616,  // Poland\n        \"PRI\": 630,  // Puerto Rico\n        \"PRK\": 408,  // North Korea\n        \"PRT\": 620,  // Portugal\n        \"PRY\": 600,  // Paraguay\n        \"PSE\": 275,  // Palestine\n        \"QAT\": 634,  // Qatar\n        \"ROU\": 642,  // Romania\n        \"RUS\": 643,  // Russia\n        \"RWA\": 646,  // Rwanda\n        \"SAU\": 682,  // Saudi Arabia\n        \"SDN\": 729,  // Sudan\n        \"SEN\": 686,  // Senegal\n        \"SGP\": 702,  // Singapore\n        \"SLB\": 90,   // Solomon Islands\n        \"SLE\": 694,  // Sierra Leone\n        \"SLV\": 222,  // El Salvador\n        \"SMR\": 674,  // San Marino\n        \"SOM\": 706,  // Somalia\n        \"SRB\": 688,  // Serbia\n        \"SSD\": 728,  // South Sudan\n        \"STP\": 678,  // São Tomé and Príncipe\n        \"SUR\": 740,  // Suriname\n        \"SVK\": 703,  // Slovakia\n        \"SVN\": 705,  // Slovenia\n        \"SWE\": 752,  // Sweden\n        \"SWZ\": 748,  // Eswatini\n        \"SYC\": 690,  // Seychelles\n        \"SYR\": 760,  // Syria\n        \"TCD\": 148,  // Chad\n        \"TGO\": 768,  // Togo\n        \"THA\": 764,  // Thailand\n        \"TJK\": 762,  // Tajikistan\n        \"TKM\": 795,  // Turkmenistan\n        \"TLS\": 626,  // Timor-Leste\n        \"TON\": 776,  // Tonga\n        \"TTO\": 780,  // Trinidad and Tobago\n        \"TUN\": 788,  // Tunisia\n        \"TUR\": 792,  // Turkey\n        \"TUV\": 798,  // Tuvalu\n        \"TWN\": 158,  // Taiwan\n        \"TZA\": 834,  // Tanzania\n        \"UGA\": 800,  // Uganda\n        \"UKR\": 804,  // Ukraine\n        \"URY\": 858,  // Uruguay\n        \"USA\": 840,  // United States\n        \"UZB\": 860,  // Uzbekistan\n        \"VAT\": 336,  // Vatican City\n        \"VCT\": 670,  // Saint Vincent and the Grenadines\n        \"VEN\": 862,  // Venezuela\n        \"VNM\": 704,  // Vietnam\n        \"VUT\": 548,  // Vanuatu\n        \"WSM\": 882,  // Samoa\n        \"XKX\": 383,  // Kosovo\n        \"YEM\": 887,  // Yemen\n        \"ZAF\": 710,  // South Africa\n        \"ZMB\": 894,  // Zambia\n        \"ZWE\": 716   // Zimbabwe\n      };\n\n      const worldData = rows\n        .filter(r => r[0] && !isNaN(+r[1]))\n        .map(r => {\n          const iso = (r[0] || \"\").toUpperCase().trim();\n          const idVal = isoToId[iso];\n          return {\n            id: idVal,     // numeric ID matching topojson country.id\n            iso: iso,       // original ISO3 for tooltip\n            rate: +r[1]\n          };\n        })\n        .filter(d => d.id); // drop rows where iso isn't in lookup\n\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        width: 800,\n        height: 450,\n        data: {\n          url: \"https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json\",\n          format: { type: \"topojson\", feature: \"countries\" }\n        },\n        transform: [\n          {\n            lookup: \"id\",\n            from: {\n              data: { values: worldData },\n              key: \"id\",\n              fields: [\"rate\", \"iso\"]\n            }\n          }\n        ],\n        projection: { type: \"equalEarth\" },\n        mark: { type: \"geoshape\", stroke: \"white\", strokeWidth: 0.5 },\n        encoding: {\n          color: {\n            field: \"rate\",\n            type: \"quantitative\",\n            scale: { scheme: \"blues\" }\n          },\n          tooltip: [\n            { field: \"iso\", type: \"nominal\", title: \"Country (ISO3)\" },\n            { field: \"rate\", type: \"quantitative\", title: \"Value\" }\n          ]\n        }\n      };\n      }\n\n      else if (chartType === \"contour\") {\n        // Contour plot requires at least 2 numeric columns for X and Y\n        // Optional 3rd column for grouping/categories\n        if (headers.length < 2) {\n          console.error(\"Contour plot requires at least 2 columns (X values, Y values, optional Categories)\");\n          return;\n        }\n\n        // Filter out null/invalid data points\n        const filteredData = data.filter(row => \n          row[headers[0]] !== null && row[headers[0]] !== undefined && row[headers[0]] !== \"\" &&\n          row[headers[1]] !== null && row[headers[1]] !== undefined && row[headers[1]] !== \"\"\n        );\n\n        if (filteredData.length === 0) {\n          console.error(\"No valid data points for contour plot\");\n          return;\n        }\n\n        // Calculate dynamic dimensions based on data range\n        const xValues = filteredData.map(d => parseFloat(d[headers[0]]));\n        const yValues = filteredData.map(d => parseFloat(d[headers[1]]));\n        const xRange = Math.max(...xValues) - Math.min(...xValues);\n        const yRange = Math.max(...yValues) - Math.min(...yValues);\n        \n        const dynamicWidth = Math.max(500, Math.min(800, xRange * 10));\n        const dynamicHeight = Math.max(400, Math.min(600, yRange * 10));\n\n        // Determine if we have grouping column\n        const hasGrouping = headers.length >= 3;\n\n        spec = {\n          \"$schema\": \"https://vega.github.io/schema/vega/v6.json\",\n          \"description\": \"Contour plot from Excel selection - density estimate overlay\",\n          \"width\": dynamicWidth,\n          \"height\": dynamicHeight,\n          \"padding\": 5,\n          \"autosize\": \"pad\",\n          \"background\": \"white\",\n\n          \"signals\": [\n            {\n              \"name\": \"bandwidth\",\n              \"value\": -1,\n              \"description\": \"Bandwidth for density estimation (-1 for auto)\"\n            },\n            {\n              \"name\": \"resolve\",\n              \"value\": \"shared\",\n              \"description\": \"Scale resolution for contours\"\n            },\n            {\n              \"name\": \"counts\",\n              \"value\": true,\n              \"description\": \"Use counts vs density\"\n            }\n          ],\n\n          \"data\": [\n            {\n              \"name\": \"source\",\n              \"values\": filteredData,\n              \"transform\": [\n                {\n                  \"type\": \"filter\",\n                  \"expr\": `datum['${headers[0]}'] != null && datum['${headers[1]}'] != null`\n                }\n              ]\n            },\n            {\n              \"name\": \"density\",\n              \"source\": \"source\",\n              \"transform\": [\n                {\n                  \"type\": \"kde2d\",\n                  ...(hasGrouping && { \"groupby\": [headers[2]] }),\n                  \"size\": [{\"signal\": \"width\"}, {\"signal\": \"height\"}],\n                  \"x\": {\"expr\": `scale('x', datum['${headers[0]}'])`},\n                  \"y\": {\"expr\": `scale('y', datum['${headers[1]}'])`},\n                  \"bandwidth\": {\"signal\": \"[bandwidth, bandwidth]\"},\n                  \"counts\": {\"signal\": \"counts\"}\n                }\n              ]\n            },\n            {\n              \"name\": \"contours\",\n              \"source\": \"density\",\n              \"transform\": [\n                {\n                  \"type\": \"isocontour\",\n                  \"field\": \"grid\",\n                  \"resolve\": {\"signal\": \"resolve\"},\n                  \"levels\": 5\n                }\n              ]\n            }\n          ],\n\n          \"scales\": [\n            {\n              \"name\": \"x\",\n              \"type\": \"linear\",\n              \"round\": true,\n              \"nice\": true,\n              \"zero\": false,\n              \"domain\": {\"data\": \"source\", \"field\": headers[0]},\n              \"range\": \"width\"\n            },\n            {\n              \"name\": \"y\",\n              \"type\": \"linear\",\n              \"round\": true,\n              \"nice\": true,\n              \"zero\": false,\n              \"domain\": {\"data\": \"source\", \"field\": headers[1]},\n              \"range\": \"height\"\n            },\n            ...(hasGrouping ? [{\n              \"name\": \"color\",\n              \"type\": \"ordinal\",\n              \"domain\": {\n                \"data\": \"source\",\n                \"field\": headers[2],\n                \"sort\": {\"order\": \"descending\"}\n              },\n              \"range\": \"category\"\n            }] : [{\n              \"name\": \"color\",\n              \"type\": \"ordinal\",\n              \"domain\": [\"Data\"],\n              \"range\": [\"#0078d4\"]\n            }])\n          ],\n\n          \"axes\": [\n            {\n              \"scale\": \"x\",\n              \"grid\": true,\n              \"domain\": false,\n              \"orient\": \"bottom\",\n              \"tickCount\": 5,\n              \"title\": headers[0],\n              \"labelFontSize\": 11,\n              \"titleFontSize\": 13,\n              \"labelFont\": \"Segoe UI\",\n              \"titleFont\": \"Segoe UI\",\n              \"labelColor\": \"#605e5c\",\n              \"titleColor\": \"#323130\",\n              \"gridColor\": \"#f3f2f1\"\n            },\n            {\n              \"scale\": \"y\",\n              \"grid\": true,\n              \"domain\": false,\n              \"orient\": \"left\",\n              \"titlePadding\": 5,\n              \"title\": headers[1],\n              \"labelFontSize\": 11,\n              \"titleFontSize\": 13,\n              \"labelFont\": \"Segoe UI\",\n              \"titleFont\": \"Segoe UI\",\n              \"labelColor\": \"#605e5c\",\n              \"titleColor\": \"#323130\",\n              \"gridColor\": \"#f3f2f1\"\n            }\n          ],\n\n          \"legends\": hasGrouping ? [\n            {\n              \"stroke\": \"color\",\n              \"symbolType\": \"stroke\",\n              \"title\": headers[2],\n              \"titleFont\": \"Segoe UI\",\n              \"titleFontSize\": 12,\n              \"titleColor\": \"#323130\",\n              \"labelFont\": \"Segoe UI\",\n              \"labelFontSize\": 11,\n              \"labelColor\": \"#605e5c\"\n            }\n          ] : [],\n\n          \"marks\": [\n            {\n              \"name\": \"points\",\n              \"type\": \"symbol\",\n              \"from\": {\"data\": \"source\"},\n              \"encode\": {\n                \"update\": {\n                  \"x\": {\"scale\": \"x\", \"field\": headers[0]},\n                  \"y\": {\"scale\": \"y\", \"field\": headers[1]},\n                  \"size\": {\"value\": 16},\n                  \"fill\": {\"value\": \"#cccccc\"},\n                  \"fillOpacity\": {\"value\": 0.4},\n                  \"stroke\": {\"value\": \"#999999\"},\n                  \"strokeWidth\": {\"value\": 0.5}\n                }\n              }\n            },\n            {\n              \"type\": \"image\",\n              \"from\": {\"data\": \"density\"},\n              \"encode\": {\n                \"update\": {\n                  \"x\": {\"value\": 0},\n                  \"y\": {\"value\": 0},\n                  \"width\": {\"signal\": \"width\"},\n                  \"height\": {\"signal\": \"height\"},\n                  \"aspect\": {\"value\": false}\n                }\n              },\n              \"transform\": [\n                {\n                  \"type\": \"heatmap\",\n                  \"field\": \"datum.grid\",\n                  \"resolve\": {\"signal\": \"resolve\"},\n                  \"color\": hasGrouping \n                    ? {\"expr\": `scale('color', datum.datum['${headers[2]}'])`}\n                    : {\"expr\": \"scale('color', 'Data')\"}\n                }\n              ]\n            },\n            {\n              \"type\": \"path\",\n              \"clip\": true,\n              \"from\": {\"data\": \"contours\"},\n              \"encode\": {\n                \"enter\": {\n                  \"strokeWidth\": {\"value\": 1.5},\n                  \"strokeOpacity\": {\"value\": 0.8},\n                  \"stroke\": hasGrouping\n                    ? {\"scale\": \"color\", \"field\": headers[2]}\n                    : {\"value\": \"#0078d4\"},\n                  \"fill\": {\"value\": null}\n                }\n              },\n              \"transform\": [\n                {\"type\": \"geopath\", \"field\": \"datum.contour\"}\n              ]\n            }\n          ],\n\n          \"config\": {\n            \"font\": \"Segoe UI\",\n            \"view\": {\"stroke\": \"transparent\"}\n          }\n        };\n      }\n\n      else if (chartType === \"mekko\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega/v5.json\",\n          description: \"Mekko chart from Excel selection\",\n          width: 800,\n          height: 500,\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          view: { stroke: null },\n          padding: { top: 60, bottom: 80, left: 60, right: 60 },\n          data: [\n            {\n              name: \"table\",\n              values: data\n            },\n            {\n              name: \"categories\",\n              source: \"table\",\n              transform: [\n                {\n                  type: \"aggregate\",\n                  fields: [headers[2]],\n                  ops: [\"sum\"],\n                  as: [\"categoryTotal\"],\n                  groupby: [headers[0]]\n                },\n                {\n                  type: \"stack\",\n                  offset: \"normalize\",\n                  sort: { field: \"categoryTotal\", order: \"descending\" },\n                  field: \"categoryTotal\",\n                  as: [\"x0\", \"x1\"]\n                },\n                {\n                  type: \"formula\",\n                  as: \"Percent\",\n                  expr: \"datum.x1-datum.x0\"\n                },\n                {\n                  type: \"formula\",\n                  as: \"Label\",\n                  expr: `datum.${headers[0]} + ' (' + format(datum.Percent,'.1%') + ')'`\n                }\n              ]\n            },\n            {\n              name: \"finalTable\",\n              source: \"table\",\n              transform: [\n                {\n                  type: \"stack\",\n                  offset: \"normalize\",\n                  groupby: [headers[0]],\n                  sort: { field: headers[2], order: \"descending\" },\n                  field: headers[2],\n                  as: [\"y0\", \"y1\"]\n                },\n                {\n                  type: \"stack\",\n                  groupby: [headers[0]],\n                  sort: { field: headers[2], order: \"descending\" },\n                  field: headers[2],\n                  as: [\"z0\", \"z1\"]\n                },\n                {\n                  type: \"lookup\",\n                  from: \"categories\",\n                  key: headers[0],\n                  values: [\"x0\", \"x1\"],\n                  fields: [headers[0]]\n                },\n                {\n                  type: \"formula\",\n                  as: \"Percent\",\n                  expr: \"datum.y1-datum.y0\"\n                },\n                {\n                  type: \"formula\",\n                  as: \"Label\",\n                  expr: `[datum.${headers[1]}, format(datum.${headers[2]}, '.0f') + ' (' + format(datum.Percent, '.1%') + ')']`\n                },\n                {\n                  type: \"window\",\n                  sort: { field: \"y0\", order: \"ascending\" },\n                  ops: [\"row_number\"],\n                  fields: [null],\n                  as: [\"rank\"],\n                  groupby: [headers[0]]\n                }\n              ]\n            }\n          ],\n          scales: [\n            {\n              name: \"x\",\n              type: \"linear\",\n              range: \"width\",\n              domain: { data: \"finalTable\", field: \"x1\" }\n            },\n            {\n              name: \"y\",\n              type: \"linear\",\n              range: \"height\",\n              nice: false,\n              zero: true,\n              domain: { data: \"finalTable\", field: \"z1\" }\n            },\n            {\n              name: \"opacity\",\n              type: \"linear\",\n              range: [1, 0.6],\n              domain: { data: \"finalTable\", field: \"rank\" }\n            },\n            {\n              name: \"color\",\n              type: \"ordinal\",\n              range: { scheme: \"category20\" },\n              domain: {\n                data: \"categories\",\n                field: headers[0],\n                sort: { field: \"x0\", order: \"ascending\", op: \"sum\" }\n              }\n            }\n          ],\n          axes: [\n            {\n              orient: \"left\",\n              scale: \"y\",\n              zindex: 1,\n              format: \"\",\n              tickCount: 5,\n              tickSize: 15,\n              labelColor: { value: \"#333740\" },\n              labelFontWeight: { value: \"normal\" },\n              labelFontSize: { value: 12 },\n              labelFont: { value: \"Segoe UI\" },\n              offset: 5,\n              domain: false,\n              encode: {\n                labels: {\n                  update: {\n                    text: { signal: `format(datum.value, '.0f')` }\n                  }\n                }\n              }\n            }\n          ],\n          marks: [\n            {\n              type: \"rect\",\n              name: \"bars\",\n              from: { data: \"finalTable\" },\n              encode: {\n                update: {\n                  x: { scale: \"x\", field: \"x0\" },\n                  x2: { scale: \"x\", field: \"x1\" },\n                  y: { scale: \"y\", field: \"z0\" },\n                  y2: { scale: \"y\", field: \"z1\" },\n                  fill: { scale: \"color\", field: headers[0] },\n                  stroke: { value: \"white\" },\n                  strokeWidth: { value: 1 },\n                  fillOpacity: { scale: \"opacity\", field: \"rank\" },\n                  tooltip: { signal: \"datum\" }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              name: \"labels\",\n              interactive: false,\n              from: { data: \"bars\" },\n              encode: {\n                update: {\n                  x: { signal: \"(datum.x2 - datum.x)*0.5 + datum.x\" },\n                  align: { value: \"center\" },\n                  text: { field: \"datum.Label\" },\n                  y: { signal: \"(datum.y2 - datum.y)*0.5 + datum.y\" },\n                  fill: { value: \"white\" },\n                  font: { value: \"Segoe UI\" },\n                  lineHeight: { value: 12 },\n                  fontSize: { value: 10 },\n                  opacity: { signal: \"(datum.x2 - datum.x) > 0.05 && (datum.y2 - datum.y) > 20 ? 1 : 0\" }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              name: \"categoryLabels\",\n              from: { data: \"categories\" },\n              encode: {\n                update: {\n                  x: { scale: \"x\", signal: \"(datum.x1-datum.x0)/2 + datum.x0\" },\n                  y: { signal: \"-15\" },\n                  text: { field: headers[0] },\n                  align: { value: \"center\" },\n                  baseline: { value: \"bottom\" },\n                  fill: { value: \"#333740\" },\n                  fontWeight: { value: \"bold\" },\n                  fontSize: { value: 12 },\n                  font: { value: \"Segoe UI\" }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              name: \"categoryPercentages\",\n              from: { data: \"categories\" },\n              encode: {\n                update: {\n                  x: { scale: \"x\", signal: \"(datum.x1-datum.x0)/2 + datum.x0\" },\n                  y: { signal: \"height + 30\" },\n                  text: { field: \"Label\" },\n                  align: { value: \"center\" },\n                  baseline: { value: \"top\" },\n                  fill: { value: \"#666666\" },\n                  fontWeight: { value: \"normal\" },\n                  fontSize: { value: 10 },\n                  font: { value: \"Segoe UI\" }\n                }\n              }\n            }\n          ]\n        };\n      }\n\n      else if (chartType === \"marimekko\") {\n      if (headers.length < 3) {\n        console.warn(\"Marimekko chart requires at least 3 columns: Category, Subcategory, Value\");\n        return;\n      }\n\n      spec = {\n        \"$schema\": \"https://vega.github.io/schema/vega/v5.json\",\n        \"description\": \"Marimekko Chart from Excel selection\",\n        \"width\": 600,\n        \"height\": 400,\n        \"background\": \"white\",\n        \"config\": { \"view\": { \"stroke\": \"transparent\" }},\n        \"padding\": { \"top\": 30, \"bottom\": 60, \"left\": 60, \"right\": 60 },\n        \"data\": [\n          {\n            \"name\": \"table\",\n            \"values\": data,\n            \"transform\": [\n              {\n                \"type\": \"formula\",\n                \"as\": \"Category\",\n                \"expr\": `datum['${headers[0]}']`\n              },\n              {\n                \"type\": \"formula\", \n                \"as\": \"Subcategory\",\n                \"expr\": `datum['${headers[1]}']`\n              },\n              {\n                \"type\": \"formula\",\n                \"as\": \"Value\", \n                \"expr\": `datum['${headers[2]}']`\n              }\n            ]\n          },\n          {\n            \"name\": \"categories\",\n            \"source\": \"table\",\n            \"transform\": [\n              {\n                \"type\": \"aggregate\",\n                \"fields\": [\"Value\"],\n                \"ops\": [\"sum\"],\n                \"as\": [\"categoryTotal\"],\n                \"groupby\": [\"Category\"]\n              },\n              {\n                \"type\": \"stack\",\n                \"offset\": \"normalize\",\n                \"sort\": { \"field\": \"categoryTotal\", \"order\": \"descending\" },\n                \"field\": \"categoryTotal\",\n                \"as\": [\"x0\", \"x1\"]\n              },\n              {\n                \"type\": \"formula\",\n                \"as\": \"Percent\",\n                \"expr\": \"datum.x1 - datum.x0\"\n              }\n            ]\n          },\n          {\n            \"name\": \"finalTable\",\n            \"source\": \"table\",\n            \"transform\": [\n              {\n                \"type\": \"stack\",\n                \"offset\": \"normalize\",\n                \"groupby\": [\"Category\"],\n                \"sort\": { \"field\": \"Value\", \"order\": \"descending\" },\n                \"field\": \"Value\",\n                \"as\": [\"y0\", \"y1\"]\n              },\n              {\n                \"type\": \"lookup\",\n                \"from\": \"categories\",\n                \"key\": \"Category\",\n                \"values\": [\"x0\", \"x1\"],\n                \"fields\": [\"Category\"]\n              },\n              {\n                \"type\": \"formula\",\n                \"as\": \"Percent\",\n                \"expr\": \"datum.y1 - datum.y0\"\n              }\n            ]\n          }\n        ],\n        \"scales\": [\n          {\n            \"name\": \"x\",\n            \"type\": \"linear\",\n            \"range\": \"width\",\n            \"domain\": { \"data\": \"finalTable\", \"field\": \"x1\" }\n          },\n          {\n            \"name\": \"y\",\n            \"type\": \"linear\",\n            \"range\": \"height\",\n            \"nice\": false,\n            \"zero\": true,\n            \"domain\": { \"data\": \"finalTable\", \"field\": \"y1\" }\n          },\n          {\n            \"name\": \"color\",\n            \"type\": \"ordinal\",\n            \"range\": { \"scheme\": \"category10\" },\n            \"domain\": {\n              \"data\": \"categories\",\n              \"field\": \"Category\",\n              \"sort\": { \"field\": \"x0\", \"order\": \"ascending\", \"op\": \"sum\" }\n            }\n          }\n        ],\n        \"axes\": [\n          {\n            \"orient\": \"left\",\n            \"scale\": \"y\",\n            \"format\": \"%\",\n            \"tickCount\": 5,\n            \"labelColor\": \"#333333\",\n            \"labelFontSize\": 11,\n            \"domain\": false\n          },\n          {\n            \"orient\": \"bottom\",\n            \"scale\": \"x\",\n            \"format\": \"%\",\n            \"tickCount\": 5,\n            \"labelColor\": \"#333333\", \n            \"labelFontSize\": 11,\n            \"domain\": false\n          }\n        ],\n        \"marks\": [\n          {\n            \"type\": \"rect\",\n            \"name\": \"bars\",\n            \"from\": { \"data\": \"finalTable\" },\n            \"encode\": {\n              \"update\": {\n                \"x\": { \"scale\": \"x\", \"field\": \"x0\" },\n                \"x2\": { \"scale\": \"x\", \"field\": \"x1\" },\n                \"y\": { \"scale\": \"y\", \"field\": \"y0\" },\n                \"y2\": { \"scale\": \"y\", \"field\": \"y1\" },\n                \"fill\": { \"scale\": \"color\", \"field\": \"Category\" },\n                \"stroke\": { \"value\": \"white\" },\n                \"strokeWidth\": { \"value\": 1 },\n                \"opacity\": { \"value\": 0.8 },\n                \"tooltip\": { \n                  \"signal\": \"{'Category': datum.Category, 'Subcategory': datum.Subcategory, 'Value': datum.Value, 'Percentage': format(datum.Percent, '.1%')}\" \n                }\n              },\n              \"hover\": {\n                \"opacity\": { \"value\": 1.0 }\n              }\n            }\n          },\n          {\n            \"type\": \"text\",\n            \"name\": \"valueLabels\",\n            \"from\": { \"data\": \"finalTable\" },\n            \"encode\": {\n              \"update\": {\n                \"x\": { \"scale\": \"x\", \"signal\": \"(datum.x1 - datum.x0)/2 + datum.x0\" },\n                \"y\": { \"scale\": \"y\", \"signal\": \"(datum.y1 - datum.y0)/2 + datum.y0\" },\n                \"text\": { \n                  \"signal\": \"datum.Percent > 0.027 ? [datum.Subcategory, format(datum.Value, ',.0f') + ' (' + format(datum.Percent, '.0%') + ')'] : []\" \n                },\n                \"align\": { \"value\": \"center\" },\n                \"baseline\": { \"value\": \"middle\" },\n                \"fill\": { \"value\": \"white\" },\n                \"fontSize\": { \"value\": 10 },\n                \"fontWeight\": { \"value\": \"normal\" },\n                \"font\": { \"value\": \"Segoe UI\" },\n                \"lineHeight\": { \"value\": 12 },\n                \"opacity\": { \"signal\": \"datum.Percent > 0.027 ? 1 : 0\" }\n              }\n            }\n          }\n        ]\n      };\n      }\n\n      else if (chartType === \"arc\") {\n        // Transform Excel data for arc chart\n        const edges = data.map((row, index) => ({\n          source: row[headers[0]],\n          target: row[headers[1]],\n          value: headers.length >= 3 && row[headers[2]] ? row[headers[2]] : 1,\n          group: headers.length >= 4 && row[headers[3]] ? row[headers[3]] : \"default\"\n        }));\n\n        // Get unique nodes from edges\n        const nodeMap = new Map();\n        edges.forEach(edge => {\n          if (!nodeMap.has(edge.source)) {\n            nodeMap.set(edge.source, { \n              name: edge.source, \n              group: edge.group,\n              index: nodeMap.size\n            });\n          }\n          if (!nodeMap.has(edge.target)) {\n            nodeMap.set(edge.target, { \n              name: edge.target, \n              group: edge.group,\n              index: nodeMap.size\n            });\n          }\n        });\n\n        const nodes = Array.from(nodeMap.values());\n\n        // Transform edges to use node indices\n        const edgesWithIndices = edges.map(edge => ({\n          source: nodeMap.get(edge.source).index,\n          target: nodeMap.get(edge.target).index,\n          value: edge.value\n        }));\n\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega/v5.json\",\n          description: \"Arc diagram from Excel selection\",\n          width: Math.max(600, nodes.length * 30),\n          height: 100,\n          padding: { top: 20, bottom: 20, left: 20, right: 20 },\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: [\n            {\n              name: \"edges\",\n              values: edgesWithIndices\n            },\n            {\n              name: \"sourceDegree\",\n              source: \"edges\",\n              transform: [\n                { type: \"aggregate\", groupby: [\"source\"], as: [\"count\"] }\n              ]\n            },\n            {\n              name: \"targetDegree\", \n              source: \"edges\",\n              transform: [\n                { type: \"aggregate\", groupby: [\"target\"], as: [\"count\"] }\n              ]\n            },\n            {\n              name: \"nodes\",\n              values: nodes,\n              transform: [\n                { type: \"window\", ops: [\"rank\"], as: [\"order\"] },\n                {\n                  type: \"lookup\", from: \"sourceDegree\", key: \"source\",\n                  fields: [\"index\"], as: [\"sourceDegree\"],\n                  default: { count: 0 }\n                },\n                {\n                  type: \"lookup\", from: \"targetDegree\", key: \"target\", \n                  fields: [\"index\"], as: [\"targetDegree\"],\n                  default: { count: 0 }\n                },\n                {\n                  type: \"formula\", as: \"degree\",\n                  expr: \"(datum.sourceDegree.count || 0) + (datum.targetDegree.count || 0)\"\n                }\n              ]\n            }\n          ],\n\n          scales: [\n            {\n              name: \"position\",\n              type: \"band\",\n              domain: { data: \"nodes\", field: \"order\", sort: true },\n              range: \"width\"\n            },\n            {\n              name: \"color\",\n              type: \"ordinal\",\n              range: { scheme: \"category20\" },\n              domain: { data: \"nodes\", field: \"group\" }\n            }\n          ],\n\n          marks: [\n            {\n              type: \"symbol\",\n              name: \"layout\",\n              interactive: false,\n              from: { data: \"nodes\" },\n              encode: {\n                enter: { opacity: { value: 0 } },\n                update: {\n                  x: { scale: \"position\", field: \"order\" },\n                  y: { value: 0 },\n                  size: { field: \"degree\", mult: 8, offset: 50 },\n                  fill: { scale: \"color\", field: \"group\" }\n                }\n              }\n            },\n            {\n              type: \"path\",\n              from: { data: \"edges\" },\n              encode: {\n                update: {\n                  stroke: { value: \"#0078d4\" },\n                  strokeOpacity: { value: 0.4 },\n                  strokeWidth: { field: \"value\", mult: 2, offset: 1 }\n                }\n              },\n              transform: [\n                {\n                  type: \"lookup\", from: \"layout\", key: \"datum.index\",\n                  fields: [\"datum.source\", \"datum.target\"],\n                  as: [\"sourceNode\", \"targetNode\"]\n                },\n                {\n                  type: \"linkpath\",\n                  sourceX: { expr: \"min(datum.sourceNode.x, datum.targetNode.x)\" },\n                  targetX: { expr: \"max(datum.sourceNode.x, datum.targetNode.x)\" },\n                  sourceY: { expr: \"0\" },\n                  targetY: { expr: \"0\" },\n                  shape: \"arc\"\n                }\n              ]\n            },\n            {\n              type: \"symbol\",\n              from: { data: \"layout\" },\n              encode: {\n                update: {\n                  x: { field: \"x\" },\n                  y: { field: \"y\" },\n                  fill: { field: \"fill\" },\n                  size: { field: \"size\" },\n                  stroke: { value: \"white\" },\n                  strokeWidth: { value: 1 },\n                  tooltip: { \n                    signal: \"{'Node': datum.datum.name, 'Group': datum.datum.group, 'Connections': datum.datum.degree}\" \n                  }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              from: { data: \"nodes\" },\n              encode: {\n                update: {\n                  x: { scale: \"position\", field: \"order\" },\n                  y: { value: 25 },\n                  fontSize: { value: 10 },\n                  align: { value: \"center\" },\n                  baseline: { value: \"top\" },\n                  angle: { value: -45 },\n                  text: { field: \"name\" },\n                  fill: { value: \"#323130\" },\n                  font: { value: \"Segoe UI\" }\n                }\n              }\n            }\n          ],\n          \n          config: {\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            text: { font: \"Segoe UI\", fontSize: 10, fill: \"#605e5c\" }\n          }\n        };\n      }\n\n      else if (chartType === \"lollipop\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n          description: \"Lollipop chart from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          encoding: {\n            y: {\n              field: headers[0],\n              type: \"nominal\",\n              sort: \"-x\",\n              axis: {\n                domain: false,\n                title: null,\n                ticks: false,\n                labelFont: \"Segoe UI\",\n                labelFontSize: 14,\n                labelPadding: 10,\n                labelColor: \"#605e5c\"\n              }\n            },\n            x: {\n              field: headers[1],\n              type: \"quantitative\",\n              axis: {\n                domain: false,\n                ticks: false,\n                grid: true,\n                gridColor: \"#e0e0e0\",\n                labelFont: \"Segoe UI\",\n                labelFontSize: 12,\n                labelColor: \"#605e5c\",\n                title: headers[1],\n                titleFont: \"Segoe UI\",\n                titleFontSize: 14,\n                titleColor: \"#323130\"\n              }\n            },\n            color: { value: \"#0078d4\" }\n          },\n          layer: [\n            {\n              mark: {\n                type: \"rule\",\n                tooltip: true,\n                strokeWidth: 3,\n                opacity: 0.7\n              }\n            },\n            {\n              mark: {\n                type: \"circle\",\n                tooltip: true,\n                size: 300,\n                opacity: 0.9\n              },\n              encoding: {\n                size: {\n                  field: headers[1],\n                  type: \"quantitative\",\n                  scale: {\n                    range: [200, 800]\n                  },\n                  legend: null\n                }\n              }\n            }\n          ],\n          config: {\n            autosize: {\n              type: \"fit\",\n              contains: \"padding\"\n            },\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            text: { font: \"Segoe UI\", fontSize: 12, fill: \"#605E5C\" }\n          }\n        };\n      }\n\n      else if (chartType === \"strip\") {\n        // Strip plot implementation\n        spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Strip plot showing distribution using tick marks\",\n        background: \"white\",\n        config: { \n            view: { stroke: \"transparent\" },\n            axis: {\n            labelFontSize: 11,\n            titleFontSize: 12,\n            labelColor: \"#605E5C\",\n            titleColor: \"#323130\"\n            }\n        },\n        data: { values: data },\n        mark: {\n            type: \"tick\",\n            thickness: 2,\n            size: 15,\n            color: \"#0078d4\",\n            opacity: 0.8,\n            tooltip: true\n        },\n        encoding: {\n            y: { \n            field: headers[0],\n            type: \"ordinal\",\n            axis: {\n                title: headers[0],\n                labelAngle: 0\n            }\n            },\n            x: { \n            field: headers[1],\n            type: \"quantitative\",\n            axis: {\n                title: headers[1],\n                grid: true,\n                gridColor: \"#f3f2f1\",\n                gridOpacity: 0.5\n            }\n            },\n            // Add color encoding if 3rd column exists\n            ...(headers.length > 2 && {\n            color: {\n                field: headers[2],\n                type: \"nominal\",\n                scale: { scheme: \"category10\" },\n                legend: {\n                title: headers[2],\n                orient: \"right\",\n                titleFontSize: 11,\n                labelFontSize: 10\n                }\n            }\n            }),\n            tooltip: headers.map(h => ({ field: h, type: \"nominal\" }))\n        }\n        };\n      }\n\n      else if (chartType === \"treemap\") {\n        let treeData;\n        \n        if (headers.length >= 3) {\n          // Hierarchical data with parent column\n          treeData = data.map((d, i) => ({\n            id: `${d[headers[1]]}_${i}`,\n            name: d[headers[1]],\n            parent: d[headers[0]] || \"root\",\n            size: parseFloat(d[headers[2]]) || 0\n          }));\n          \n          // Add root and parent nodes\n          const parents = [...new Set(treeData.map(d => d.parent))];\n          parents.forEach(parent => {\n            if (parent !== \"root\" && !treeData.find(d => d.id === parent)) {\n              treeData.push({\n                id: parent,\n                name: parent,\n                parent: \"root\",\n                size: 0\n              });\n            }\n          });\n          \n          // Add root node\n          treeData.push({\n            id: \"root\",\n            name: \"Root\",\n            parent: \"\",\n            size: 0\n          });\n        } else {\n          // Simple flat data - create single level hierarchy\n          treeData = [\n            {\n              id: \"root\",\n              name: \"Root\", \n              parent: \"\",\n              size: 0\n            },\n            ...data.map((d, i) => ({\n              id: `item_${i}`,\n              name: d[headers[1]],\n              parent: \"root\",\n              size: parseFloat(d[headers[2]]) || 0\n            }))\n          ];\n        }\n\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega/v5.json\",\n          description: \"Treemap visualization from Excel data\",\n          background: \"white\",\n          width: 600,\n          height: 400,\n          padding: 5,\n          autosize: \"fit\",\n          \n          data: [\n            {\n              name: \"tree\",\n              values: treeData,\n              transform: [\n                {\n                  type: \"stratify\",\n                  key: \"id\",\n                  parentKey: \"parent\"\n                },\n                {\n                  type: \"treemap\",\n                  field: \"size\",\n                  sort: { field: \"value\" },\n                  round: true,\n                  method: \"squarify\",\n                  ratio: 1.6,\n                  size: [{ signal: \"width\" }, { signal: \"height\" }]\n                }\n              ]\n            },\n            {\n              name: \"nodes\",\n              source: \"tree\",\n              transform: [\n                { type: \"filter\", expr: \"datum.children\" }\n              ]\n            },\n            {\n              name: \"leaves\", \n              source: \"tree\",\n              transform: [\n                { type: \"filter\", expr: \"!datum.children\" }\n              ]\n            }\n          ],\n          \n          scales: [\n            {\n              name: \"color\",\n              type: \"ordinal\",\n              domain: { data: \"nodes\", field: \"name\" },\n              range: [\n                \"#0078d4\", \"#00bcf2\", \"#40e0d0\", \"#00cc6a\", \"#10893e\",\n                \"#107c10\", \"#bad80a\", \"#ffb900\", \"#ff8c00\", \"#d13438\"\n              ]\n            },\n            {\n              name: \"fontSize\",\n              type: \"ordinal\", \n              domain: [0, 1, 2, 3],\n              range: [20, 16, 12, 10]\n            },\n            {\n              name: \"opacity\",\n              type: \"ordinal\",\n              domain: [0, 1, 2, 3], \n              range: [0.3, 0.6, 0.8, 1.0]\n            }\n          ],\n          \n          marks: [\n            {\n              type: \"rect\",\n              from: { data: \"nodes\" },\n              interactive: false,\n              encode: {\n                enter: {\n                  fill: { scale: \"color\", field: \"name\" },\n                  fillOpacity: { scale: \"opacity\", field: \"depth\" }\n                },\n                update: {\n                  x: { field: \"x0\" },\n                  y: { field: \"y0\" },\n                  x2: { field: \"x1\" },\n                  y2: { field: \"y1\" },\n                  stroke: { value: \"#ffffff\" },\n                  strokeWidth: { value: 1 }\n                }\n              }\n            },\n            {\n              type: \"rect\",\n              from: { data: \"leaves\" },\n              encode: {\n                enter: {\n                  stroke: { value: \"#ffffff\" },\n                  strokeWidth: { value: 2 }\n                },\n                update: {\n                  x: { field: \"x0\" },\n                  y: { field: \"y0\" },\n                  x2: { field: \"x1\" },\n                  y2: { field: \"y1\" },\n                  fill: { value: \"transparent\" },\n                  tooltip: {\n                    signal: `{'Category': datum.name, 'Value': datum.size, 'Parent': datum.parent}`\n                  }\n                },\n                hover: {\n                  fill: { value: \"#323130\" },\n                  fillOpacity: { value: 0.1 }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              from: { data: \"leaves\" },\n              interactive: false,\n              encode: {\n                enter: {\n                  font: { value: \"Segoe UI, Arial, sans-serif\" },\n                  align: { value: \"center\" },\n                  baseline: { value: \"middle\" },\n                  fill: { value: \"#323130\" },\n                  fontWeight: { value: \"bold\" },\n                  text: { field: \"name\" },\n                  fontSize: { scale: \"fontSize\", field: \"depth\" }\n                },\n                update: {\n                  x: { signal: \"0.5 * (datum.x0 + datum.x1)\" },\n                  y: { signal: \"0.5 * (datum.y0 + datum.y1)\" },\n                  opacity: {\n                    signal: \"(datum.x1 - datum.x0) > 50 && (datum.y1 - datum.y0) > 20 ? 1 : 0\"\n                  }\n                }\n              }\n            }\n          ]\n        };\n      }\n      \n      else if (chartType === \"waffle\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n          description: \"Waffle chart from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          transform: [\n            {\n              joinaggregate: [{\"op\": \"sum\", \"field\": headers[1], \"as\": \"TotalValue\"}]\n            },\n            {\n              calculate: `round(datum.${headers[1]}/datum.TotalValue * 100)`,\n              as: \"PercentOfTotal\"\n            },\n            {\n              aggregate: [{\"op\": \"min\", \"field\": \"PercentOfTotal\", \"as\": \"Percent\"}],\n              groupby: [headers[0]]\n            },\n            {\"calculate\": \"sequence(1,101)\", \"as\": \"Sequence\"},\n            {\"flatten\": [\"Sequence\"]},\n            {\n              calculate: `if(datum.Sequence <= datum.Percent, datum.${headers[0]},'_blank')`,\n              as: \"Plot\"\n            },\n            {\"calculate\": \"ceil (datum.Sequence / 10)\", \"as\": \"row\"},\n            {\"calculate\": \"datum.Sequence - datum.row * 10\", \"as\": \"col\"}\n          ],\n          facet: {\"column\": {\"field\": headers[0], \"header\": {\"labelOrient\": \"bottom\"}}},\n          spec: {\n            layer: [\n              {\n                mark: {\n                  type: \"circle\",\n                  filled: true,\n                  tooltip: true,\n                  stroke: \"#9e9b9b\",\n                  strokeWidth: 0.7\n                },\n                encoding: {\n                  x: {\"field\": \"col\", \"type\": \"ordinal\", \"axis\": null},\n                  y: {\"field\": \"row\", \"type\": \"ordinal\", \"axis\": null, \"sort\": \"-y\"},\n                  color: {\n                    condition: {\"test\": \"datum.Plot == '_blank'\", \"value\": \"#e6e3e3\"},\n                    scale: {\"scheme\": \"set1\"},\n                    field: \"Plot\",\n                    type: \"nominal\",\n                    legend: null\n                  },\n                  size: {\"value\": 241},\n                  tooltip: [{\"field\": headers[0], \"type\": \"nominal\"}]\n                }\n              },\n              {\n                mark: {\"type\": \"text\", \"fontSize\": 30, \"fontWeight\": \"bold\"},\n                encoding: {\n                  y: {\"value\": 30},\n                  text: {\n                    condition: {\n                      test: \"datum.Sequence == 1\",\n                      value: {\"expr\": \"datum.Percent + '%'\"}\n                    }\n                  },\n                  color: {\"scale\": {\"scheme\": \"set1\"}, \"field\": \"Plot\"}\n                }\n              }\n            ]\n          },\n          config: {\n            view: {\"stroke\": \"transparent\"},\n            font: \"Segoe UI\",\n            text: {\"font\": \"Segoe UI\", \"fontSize\": 12, \"fill\": \"#605E5C\"},\n            axis: {\n              ticks: false,\n              grid: false,\n              domain: false,\n              labelColor: \"#605E5C\",\n              labelFontSize: 12\n            },\n            header: {\n              titleFont: \"Segoe UI\",\n              titleFontSize: 16,\n              titleColor: \"#757575\",\n              labelFont: \"Segoe UI\",\n              labelFontSize: 13,\n              labelColor: \"#605E5C\"\n            },\n            legend: {\n              titleFont: \"Segoe UI\",\n              titleFontWeight: \"bold\",\n              titleColor: \"#605E5C\",\n              labelFont: \"Segoe UI\",\n              labelFontSize: 13,\n              labelColor: \"#605E5C\",\n              symbolType: \"circle\",\n              symbolSize: 75\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"violin\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v5.20.1.json\",\n          description: \"Violin chart from Excel selection\",\n          background: \"white\",\n          config: {\n            view: { continuousWidth: 300, continuousHeight: 300, stroke: null },\n            facet: { spacing: 0 }\n          },\n          data: { values: data },\n          mark: { type: \"area\", orient: \"horizontal\" },\n          encoding: {\n            color: { field: headers[0], type: \"nominal\" },\n            column: {\n              field: headers[0],\n              header: {\n                labelOrient: \"bottom\",\n                labelPadding: 0,\n                titleOrient: \"bottom\"\n              },\n              type: \"nominal\"\n            },\n            x: {\n              axis: { grid: false, labels: false, ticks: true, values: [0] },\n              field: \"density\",\n              impute: null,\n              stack: \"center\",\n              title: null,\n              type: \"quantitative\"\n            },\n            y: { field: headers[1], type: \"quantitative\" }\n          },\n          transform: [\n            {\n              density: headers[1],\n              groupby: [headers[0]],\n              as: [headers[1], \"density\"]\n            }\n          ],\n          width: 100\n        };\n      }\n\n      else if (chartType === \"heatmap\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n          description: \"Heatmap from Excel selection\",\n          background: \"white\",\n          data: { values: data },\n          mark: {\n            type: \"rect\",\n            stroke: \"white\",\n            tooltip: true\n          },\n          encoding: {\n            y: {\n              field: headers[0],\n              type: \"ordinal\",\n              title: headers[0],\n              axis: {\n                domain: false,\n                ticks: false,\n                labels: true,\n                labelAngle: 0,\n                labelPadding: 5\n              }\n            },\n            x: {\n              field: headers[1],\n              type: \"ordinal\",\n              title: headers[1],\n              axis: {\n                domain: false,\n                ticks: false,\n                labels: true,\n                labelAngle: 0\n              }\n            },\n            color: {\n              aggregate: \"mean\",\n              field: headers[2],\n              type: \"quantitative\",\n              title: headers[2],\n              scale: {\n                scheme: \"blues\"\n              },\n              legend: {\n                direction: \"vertical\",\n                orient: \"right\",\n                titleAlign: \"center\",\n                labelAlign: \"center\"\n              }\n            }\n          },\n          config: {\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            text: { font: \"Segoe UI\", fontSize: 12, fill: \"#605E5C\" },\n            axis: {\n              ticks: false,\n              grid: false,\n              domain: false,\n              labelColor: \"#605E5C\",\n              labelFontSize: 12,\n              titleFontSize: 14,\n              titleColor: \"#323130\"\n            },\n            legend: {\n              titleFont: \"Segoe UI\",\n              titleFontWeight: \"bold\",\n              titleColor: \"#605E5C\",\n              labelFont: \"Segoe UI\",\n              labelFontSize: 12,\n              labelColor: \"#605E5C\",\n              titleAlign: \"center\",\n              labelAlign: \"center\"\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"variance\") {\n      if (headers.length < 3) {\n        console.warn(\"Variance chart requires 3 columns: Business Unit, First Metric, Second Metric\");\n        return;\n      }\n\n      spec = {\n        \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n        \"data\": { \"values\": data },\n        \"transform\": [\n          {\n            \"aggregate\": [\n              {\"op\": \"sum\", \"field\": headers[1], \"as\": headers[1]},\n              {\"op\": \"sum\", \"field\": headers[2], \"as\": headers[2]}\n            ],\n            \"groupby\": [headers[0]]\n          },\n          {\n            \"calculate\": `datum['${headers[1]}'] - datum['${headers[2]}']`,\n            \"as\": \"Variance Absolute\"\n          },\n          {\n            \"calculate\": `datum['${headers[2]}'] === 0 ? 0 : datum['${headers[1]}']/datum['${headers[2]}']-1`,\n            \"as\": \"Variance Percent\"\n          }\n        ],\n        \"hconcat\": [\n          {\n            \"width\": 350,\n            \"height\": {\"step\": 50},\n            \"view\": {\"stroke\": \"transparent\"},\n            \"encoding\": {\n              \"color\": {\n                \"type\": \"nominal\",\n                \"scale\": {\n                  \"domain\": [headers[1], headers[2]],\n                  \"range\": [\"#404040\", \"silver\"]\n                },\n                \"legend\": {\"title\": null, \"orient\": \"top\"}\n              },\n              \"y\": {\n                \"field\": headers[0],\n                \"type\": \"nominal\",\n                \"sort\": null,\n                \"axis\": {\"domain\": false, \"offset\": 0, \"ticks\": false, \"title\": \"\", \"labelPadding\": 35}\n              },\n              \"x\": {\n                \"type\": \"quantitative\",\n                \"axis\": {\n                  \"domain\": false,\n                  \"labels\": false,\n                  \"title\": null,\n                  \"ticks\": false,\n                  \"grid\": true,\n                  \"gridColor\": {\n                    \"condition\": {\"test\": \"datum.value === 0\", \"value\": \"#605E5C\"},\n                    \"value\": \"transparent\"\n                  }\n                }\n              }\n            },\n            \"layer\": [\n              {\n                \"mark\": {\n                  \"type\": \"bar\",\n                  \"tooltip\": true,\n                  \"cornerRadius\": 3,\n                  \"yOffset\": 12,\n                  \"height\": {\"band\": 0.5}\n                },\n                \"encoding\": {\n                  \"x\": {\"field\": headers[2]},\n                  \"color\": {\"datum\": headers[2]}\n                }\n              },\n              {\n                \"mark\": {\n                  \"type\": \"bar\",\n                  \"tooltip\": true,\n                  \"cornerRadius\": 3,\n                  \"yOffset\": 0,\n                  \"height\": {\"band\": 0.5}\n                },\n                \"encoding\": {\n                  \"x\": {\"field\": headers[1]},\n                  \"color\": {\"datum\": headers[1]}\n                }\n              },\n              {\n                \"mark\": {\n                  \"type\": \"text\",\n                  \"align\": {\n                    \"expr\": `datum['${headers[1]}'] < 0 ? 'right' : 'left'`\n                  },\n                  \"dx\": {\"expr\": `datum['${headers[1]}'] < 0 ? -5 : 5`},\n                  \"color\": \"black\",\n                  \"fontSize\": 11\n                },\n                \"encoding\": {\n                  \"x\": {\"field\": headers[1], \"type\": \"quantitative\"},\n                  \"text\": {\"field\": headers[1], \"type\": \"quantitative\", \"format\": \",\"}\n                }\n              }\n            ]\n          },\n          {\n            \"width\": 150,\n            \"height\": {\"step\": 50},\n            \"view\": {\"stroke\": \"transparent\"},\n            \"encoding\": {\n              \"y\": {\n                \"field\": headers[0],\n                \"type\": \"nominal\",\n                \"sort\": null,\n                \"axis\": null\n              },\n              \"x\": {\n                \"field\": \"Variance Absolute\",\n                \"type\": \"quantitative\",\n                \"axis\": {\n                  \"domain\": false,\n                  \"labels\": false,\n                  \"title\": null,\n                  \"ticks\": false,\n                  \"grid\": true,\n                  \"gridWidth\": 1,\n                  \"gridColor\": {\n                    \"condition\": {\"test\": \"datum.value === 0\", \"value\": \"#605E5C\"},\n                    \"value\": \"transparent\"\n                  }\n                }\n              }\n            },\n            \"layer\": [\n              {\n                \"mark\": {\n                  \"type\": \"bar\",\n                  \"tooltip\": true,\n                  \"cornerRadius\": 3,\n                  \"yOffset\": 0,\n                  \"height\": {\"band\": 0.5}\n                },\n                \"encoding\": {\n                  \"fill\": {\n                    \"condition\": {\n                      \"test\": \"datum['Variance Absolute'] < 0\",\n                      \"value\": \"#b92929\"\n                    },\n                    \"value\": \"#329351\"\n                  }\n                }\n              },\n              {\n                \"mark\": {\n                  \"type\": \"text\",\n                  \"align\": {\n                    \"expr\": \"datum['Variance Absolute'] < 0 ? 'right' : 'left'\"\n                  },\n                  \"dx\": {\"expr\": \"datum['Variance Absolute'] < 0 ? -5 : 5\"}\n                },\n                \"encoding\": {\n                  \"text\": {\n                    \"field\": \"Variance Absolute\",\n                    \"type\": \"quantitative\",\n                    \"format\": \"+,\"\n                  }\n                }\n              }\n            ]\n          },\n          {\n            \"width\": 150,\n            \"height\": {\"step\": 50},\n            \"view\": {\"stroke\": \"transparent\"},\n            \"transform\": [\n              {\n                \"calculate\": `datum['${headers[2]}'] === 0 ? 'n/m' : format(datum['Variance Percent'], '+.1%')`,\n                \"as\": \"PercentDisplay\"\n              }\n            ],\n            \"encoding\": {\n              \"y\": {\n                \"field\": headers[0],\n                \"type\": \"nominal\",\n                \"sort\": null,\n                \"axis\": null\n              },\n              \"x\": {\n                \"field\": \"Variance Percent\",\n                \"type\": \"quantitative\",\n                \"axis\": {\n                  \"domain\": false,\n                  \"labels\": false,\n                  \"title\": null,\n                  \"ticks\": false,\n                  \"grid\": true,\n                  \"gridColor\": {\n                    \"condition\": {\"test\": \"datum.value === 0\", \"value\": \"#605E5C\"},\n                    \"value\": \"transparent\"\n                  }\n                }\n              }\n            },\n            \"layer\": [\n              {\n                \"mark\": {\"type\": \"rule\", \"tooltip\": true},\n                \"encoding\": {\n                  \"strokeWidth\": {\"value\": 2},\n                  \"stroke\": {\n                    \"condition\": {\n                      \"test\": \"datum['Variance Absolute'] < 0\",\n                      \"value\": \"#b92929\"\n                    },\n                    \"value\": \"#329351\"\n                  }\n                }\n              },\n              {\n                \"mark\": {\"type\": \"circle\", \"tooltip\": true},\n                \"encoding\": {\n                  \"size\": {\"value\": 100},\n                  \"color\": {\n                    \"condition\": {\n                      \"test\": \"datum['Variance Absolute'] < 0\",\n                      \"value\": \"#b92929\"\n                    },\n                    \"value\": \"#329351\"\n                  }\n                }\n              },\n              {\n                \"mark\": {\n                  \"type\": \"text\",\n                  \"align\": {\n                    \"expr\": \"datum['Variance Absolute'] < 0 ? 'right' : 'left'\"\n                  },\n                  \"dx\": {\"expr\": \"datum['Variance Absolute'] < 0 ? -10 : 10\"}\n                },\n                \"encoding\": {\n                  \"text\": {\n                    \"field\": \"PercentDisplay\",\n                    \"type\": \"nominal\"\n                  }\n                }\n              }\n            ]\n          }\n        ],\n        \"config\": {\n          \"view\": {\"stroke\": \"transparent\"},\n          \"padding\": {\"left\": 5, \"top\": 20, \"right\": 5, \"bottom\": 5},\n          \"font\": \"Segoe UI\",\n          \"axis\": {\n            \"labelFontSize\": 12,\n            \"labelPadding\": 10,\n            \"offset\": 5,\n            \"labelFont\": \"Segoe UI\",\n            \"labelColor\": \"#252423\"\n          },\n          \"text\": {\"fontSize\": 12, \"font\": \"Segoe UI\", \"color\": \"#605E5C\"},\n          \"concat\": {\"spacing\": 50},\n          \"legend\": {\n            \"labelFontSize\": 12,\n            \"labelFont\": \"Segoe UI\",\n            \"labelColor\": \"#605E5C\"\n          }\n        }\n      };\n      }\n\n      else if (chartType === \"deviation\") {\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Deviation chart from Excel selection\",\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        data: { values: data },\n        layer: [\n        {\n            mark: { type: \"line\", tooltip: true, color: \"grey\" },\n            encoding: {\n            x: { field: headers[0], type: \"ordinal\" },\n            y: { field: headers[1], type: \"quantitative\" }\n            }\n        },\n        {\n            mark: { type: \"circle\", size: 80, color: \"grey\", tooltip: true },\n            encoding: {\n            x: { field: headers[0], type: \"ordinal\" },\n            y: { field: headers[1], type: \"quantitative\" }\n            }\n        },\n        {\n            mark: { type: \"rule\", strokeWidth: 2, tooltip: true },\n            encoding: {\n            x: { field: headers[0], type: \"ordinal\" },\n            y: { field: headers[1], type: \"quantitative\" },\n            y2: { field: headers[2] },\n            color: {\n                condition: { test: `datum[\"${headers[1]}\"] < datum[\"${headers[2]}\"]`, value: \"red\" },\n                value: \"green\"\n            }\n            }\n        },\n        {\n            mark: { type: \"circle\", size: 60, tooltip: true },\n            encoding: {\n            x: { field: headers[0], type: \"ordinal\" },\n            y: { field: headers[2], type: \"quantitative\" },\n            color: {\n                condition: { test: `datum[\"${headers[1]}\"] < datum[\"${headers[2]}\"]`, value: \"red\" },\n                value: \"green\"\n            }\n            }\n        }\n        ],\n        encoding: {\n        x: { \n            field: headers[0], \n            type: \"ordinal\", \n            axis: { \n                title: null,\n                labelAngle: 0       // Optional: adjust label angle if needed\n            } \n        },\n        y: { type: \"quantitative\", axis: { title: \"\" } }\n        },\n        config: {\n        view: { stroke: \"transparent\" },\n        line: { strokeWidth: 3, strokeCap: \"round\", strokeJoin: \"round\" },\n        axis: {\n            ticks: false,\n            grid: false,\n            domain: false,\n            labelColor: \"#605E5C\",\n            labelFontSize: 12\n        }\n        }\n      };\n      }\n\n      else if (chartType === \"radial\") {\n        spec = {\n            $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n            description: \"Radial chart from Excel selection\",\n            background: \"white\",\n            config: { \n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            legend: {\n                titleColor: \"#323130\",\n                labelColor: \"#605e5c\"\n            }\n            },\n            data: { values: data },\n            transform: [\n            { \n                window: [{ op: \"rank\", as: \"sortOrder\" }],\n                sort: [{ field: headers[1], order: \"descending\" }]\n            }\n            ],\n            layer: [{\n            mark: { type: \"arc\", innerRadius: 20, stroke: \"#fff\" }\n            }, {\n            mark: { type: \"text\", radiusOffset: 10 },\n            encoding: {\n                text: { field: headers[1], type: \"quantitative\" }\n            }\n            }],\n            encoding: {\n            theta: { field: headers[1], type: \"quantitative\", stack: true },\n            radius: { \n                field: headers[1], \n                scale: { type: \"sqrt\", zero: true, rangeMin: 20 }\n            },\n            color: { \n                field: headers[0], \n                type: \"nominal\",\n                legend: {\n                title: headers[0],\n                titleFontSize: 12,\n                labelFontSize: 11,\n                orient: \"right\"\n                }\n            },\n            order: { field: \"sortOrder\", type: \"quantitative\" }\n            }\n        };\n      }\n\n      else if (chartType === \"chord\") {\n        // Chord diagram - accepts 3-column format (Source, Destination, Value)\n        \n        if (headers.length !== 3) {\n          alert(\"Chord chart requires exactly 3 columns: Source, Destination, Value\");\n          return;\n        }\n\n        // Get unique nodes from both source and destination columns\n        const nodeSet = new Set();\n        data.forEach(row => {\n          nodeSet.add(row[headers[0]]); // source\n          nodeSet.add(row[headers[1]]); // destination\n        });\n        const nodeLabels = Array.from(nodeSet);\n        const n = nodeLabels.length;\n        \n        // Create index mapping\n        const nodeIndex = {};\n        nodeLabels.forEach((label, i) => {\n          nodeIndex[label] = i;\n        });\n        \n        // Build matrix from edge list\n        const matrix = Array(n).fill(0).map(() => Array(n).fill(0));\n        data.forEach(row => {\n          const source = row[headers[0]];\n          const dest = row[headers[1]];\n          const value = parseFloat(row[headers[2]]) || 0;\n          \n          const sourceIdx = nodeIndex[source];\n          const destIdx = nodeIndex[dest];\n          \n          if (sourceIdx !== undefined && destIdx !== undefined) {\n            matrix[sourceIdx][destIdx] = value;\n          }\n        });\n\n        // Calculate totals for each node (sum of incoming + outgoing)\n        const nodeTotals = new Array(n).fill(0);\n        for (let i = 0; i < n; i++) {\n          for (let j = 0; j < n; j++) {\n            nodeTotals[i] += matrix[i][j]; // outgoing\n            nodeTotals[i] += matrix[j][i]; // incoming\n          }\n        }\n        \n        // Total sum should also be the sum of all node totals (incoming + outgoing for all nodes)\n        // This ensures the proportions add up correctly\n        const totalSum = nodeTotals.reduce((sum, val) => sum + val, 0);\n\n        if (totalSum === 0) {\n          alert(\"All values are zero. Please provide non-zero values.\");\n          return;\n        }\n\n        // Generate chord arcs with angles\n        const chords = [];\n        let currentAngle = 0;\n        const padding = 0.02; // Gap between arc segments\n        const totalPadding = padding * n; // Total space used by all gaps\n        const availableAngle = (2 * Math.PI) - totalPadding; // Remaining angle for arcs\n\n        for (let i = 0; i < n; i++) {\n          const angleSize = (nodeTotals[i] / totalSum) * availableAngle; // Use available angle, not full 2π\n          chords.push({\n            index: i,\n            label: nodeLabels[i],\n            startAngle: currentAngle,\n            endAngle: currentAngle + angleSize,\n            value: nodeTotals[i]\n          });\n          currentAngle += angleSize + padding;\n        }\n\n        // Track used portions of each chord for proper ribbon positioning\n        const usedAngles = chords.map(c => ({ \n          start: c.startAngle, \n          end: c.startAngle \n        }));\n\n        // Generate ribbon paths for connections\n        const ribbonsPaths = [];\n        const innerRadius = 270;\n\n        // Process matrix to create ribbons\n        for (let i = 0; i < n; i++) {\n          for (let j = 0; j < n; j++) {\n            const value = matrix[i][j];\n            if (value > 0) {\n              const sourceChord = chords[i];\n              const targetChord = chords[j];\n              \n              // Calculate angle span for this ribbon on source\n              const sourceAngleSpan = (value / nodeTotals[i]) * (sourceChord.endAngle - sourceChord.startAngle);\n              const sourceStart = usedAngles[i].end;\n              const sourceEnd = sourceStart + sourceAngleSpan;\n              usedAngles[i].end = sourceEnd;\n              \n              // Calculate angle span for this ribbon on target\n              const targetAngleSpan = (value / nodeTotals[j]) * (targetChord.endAngle - targetChord.startAngle);\n              const targetStart = usedAngles[j].end;\n              const targetEnd = targetStart + targetAngleSpan;\n              usedAngles[j].end = targetEnd;\n\n              // Generate SVG path using inline polar to cartesian conversion\n              const s0x = innerRadius * Math.cos(sourceStart - Math.PI / 2);\n              const s0y = innerRadius * Math.sin(sourceStart - Math.PI / 2);\n              const s1x = innerRadius * Math.cos(sourceEnd - Math.PI / 2);\n              const s1y = innerRadius * Math.sin(sourceEnd - Math.PI / 2);\n              const t0x = innerRadius * Math.cos(targetStart - Math.PI / 2);\n              const t0y = innerRadius * Math.sin(targetStart - Math.PI / 2);\n              const t1x = innerRadius * Math.cos(targetEnd - Math.PI / 2);\n              const t1y = innerRadius * Math.sin(targetEnd - Math.PI / 2);\n              \n              // Determine if arc is large (> 180 degrees)\n              const sourceLargeArc = (sourceEnd - sourceStart) > Math.PI ? 1 : 0;\n              const targetLargeArc = (targetEnd - targetStart) > Math.PI ? 1 : 0;\n              \n              // Build SVG path string\n              const path = `M${s0x},${s0y}A${innerRadius},${innerRadius},0,${sourceLargeArc},1,${s1x},${s1y}Q0,0,${t0x},${t0y}A${innerRadius},${innerRadius},0,${targetLargeArc},1,${t1x},${t1y}Q0,0,${s0x},${s0y}Z`;\n              \n              ribbonsPaths.push({\n                path: path,\n                source: i,\n                target: j,\n                sourceLabel: nodeLabels[i],\n                targetLabel: nodeLabels[j],\n                value: value\n              });\n            }\n          }\n        }\n\n        // Create Vega specification\n        spec = {\n          \"$schema\": \"https://vega.github.io/schema/vega/v5.json\",\n          \"description\": \"Chord diagram from Excel data\",\n          \"width\": 700,\n          \"height\": 700,\n          \"padding\": 5,\n          \"background\": \"white\",\n          \"config\": {\n            \"view\": { \"stroke\": \"transparent\" }\n          },\n          \"signals\": [\n            { \"name\": \"originX\", \"value\": 0 },\n            { \"name\": \"originY\", \"value\": 0 },\n            { \"name\": \"inner_radius\", \"value\": 270 },\n            { \"name\": \"outer_radius\", \"value\": 290 }\n          ],\n          \"scales\": [\n            {\n              \"name\": \"color\",\n              \"type\": \"ordinal\",\n              \"domain\": { \"data\": \"chords\", \"field\": \"index\" },\n              \"range\": { \"scheme\": \"category10\" }\n            }\n          ],\n          \"data\": [\n            {\n              \"name\": \"chords\",\n              \"values\": chords,\n              \"transform\": [\n                {\n                  \"type\": \"formula\",\n                  \"expr\": \"(((datum.startAngle + datum.endAngle) / 2) * 180 / PI) - 90\",\n                  \"as\": \"angle_degrees\"\n                },\n                {\n                  \"type\": \"formula\",\n                  \"expr\": \"PI * datum.angle_degrees / 180\",\n                  \"as\": \"radians\"\n                },\n                {\n                  \"type\": \"formula\",\n                  \"expr\": \"inrange(datum.angle_degrees, [90, 270])\",\n                  \"as\": \"leftside\"\n                },\n                {\n                  \"type\": \"formula\",\n                  \"expr\": \"originX + outer_radius * cos(datum.radians)\",\n                  \"as\": \"x\"\n                },\n                {\n                  \"type\": \"formula\",\n                  \"expr\": \"originY + outer_radius * sin(datum.radians)\",\n                  \"as\": \"y\"\n                }\n              ]\n            },\n            {\n              \"name\": \"ribbonsPaths\",\n              \"values\": ribbonsPaths\n            }\n          ],\n          \"marks\": [\n            {\n              \"type\": \"arc\",\n              \"from\": { \"data\": \"chords\" },\n              \"encode\": {\n                \"enter\": {\n                  \"fill\": { \"scale\": \"color\", \"field\": \"index\" },\n                  \"x\": { \"signal\": \"width / 2\" },\n                  \"y\": { \"signal\": \"height / 2\" }\n                },\n                \"update\": {\n                  \"startAngle\": { \"field\": \"startAngle\" },\n                  \"endAngle\": { \"field\": \"endAngle\" },\n                  \"padAngle\": { \"value\": 0 },\n                  \"innerRadius\": { \"signal\": \"inner_radius\" },\n                  \"outerRadius\": { \"signal\": \"outer_radius\" },\n                  \"opacity\": { \"value\": 0.9 },\n                  \"tooltip\": {\n                    \"signal\": \"{'Category': datum.label, 'Total Value': format(datum.value, ',.0f')}\"\n                  }\n                },\n                \"hover\": {\n                  \"opacity\": { \"value\": 1 }\n                }\n              }\n            },\n            {\n              \"type\": \"text\",\n              \"from\": { \"data\": \"chords\" },\n              \"encode\": {\n                \"enter\": {\n                  \"text\": { \"field\": \"label\" },\n                  \"fontSize\": { \"value\": 11 },\n                  \"font\": { \"value\": \"Segoe UI\" },\n                  \"fill\": { \"value\": \"#323130\" },\n                  \"fontWeight\": { \"value\": \"normal\" }\n                },\n                \"update\": {\n                  \"x\": { \"signal\": \"width / 2 + datum.x\" },\n                  \"y\": { \"signal\": \"height / 2 + datum.y\" },\n                  \"dx\": { \"signal\": \"(datum.leftside ? -1 : 1) * 6\" },\n                  \"angle\": { \"signal\": \"datum.leftside ? datum.angle_degrees - 180 : datum.angle_degrees\" },\n                  \"align\": { \"signal\": \"datum.leftside ? 'right' : 'left'\" },\n                  \"baseline\": { \"value\": \"middle\" }\n                }\n              }\n            },\n            {\n              \"type\": \"path\",\n              \"from\": { \"data\": \"ribbonsPaths\" },\n              \"encode\": {\n                \"enter\": {\n                  \"x\": { \"signal\": \"width / 2\" },\n                  \"y\": { \"signal\": \"height / 2\" }\n                },\n                \"update\": {\n                  \"path\": { \"field\": \"path\" },\n                  \"fill\": { \"scale\": \"color\", \"field\": \"source\" },\n                  \"opacity\": { \"value\": 0.6 },\n                  \"stroke\": { \"value\": \"white\" },\n                  \"strokeWidth\": { \"value\": 0.5 },\n                  \"tooltip\": {\n                    \"signal\": \"{'From': datum.sourceLabel, 'To': datum.targetLabel, 'Value': format(datum.value, ',.0f')}\"\n                  }\n                },\n                \"hover\": {\n                  \"opacity\": { \"value\": 0.8 }\n                }\n              }\n            }\n          ]\n        };\n      }\n\n      else if (chartType === \"bump\") {\n        // calculate width based on number of unique x-values\n        const uniqueX = [...new Set(data.map(d => d[headers[0]]))];\n        const dynamicWidth = Math.max(400, uniqueX.length * 80);\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n          description: \"Bump chart from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          width: dynamicWidth,\n          height: 200,\n          autosize: {\n            type: \"fit\",\n            contains: \"padding\"\n          },\n          padding: { left: 10, right: 10, top: 5, bottom: 5 },\n          encoding: {\n            x: {\n              field: headers[0],\n              type: \"nominal\",\n              axis: { title: \"\" },\n              scale: { type: \"point\", padding: 0.2 }   // reduced from 1 to 0.2\n            },\n            y: {\n              field: headers[2],      \n              type: \"ordinal\",\n              axis: false\n            }\n          },\n          layer: [\n            {\n              mark: { type: \"line\", interpolate: \"monotone\" },\n              encoding: {\n                color: {\n                  field: headers[1],   \n                  type: \"nominal\",\n                  legend: false\n                }\n              }\n            },\n            {\n              mark: { type: \"circle\", size: 400, tooltip: true },\n              encoding: {\n                color: {\n                  field: headers[1],\n                  type: \"nominal\",\n                  legend: false\n                }\n              }\n            },\n            {\n              mark: { type: \"text\", color: \"white\" },\n              encoding: {\n                text: { field: headers[2] }\n              }\n            },\n            {\n              // Left-side labels\n              transform: [\n                { window: [{ op: \"rank\", as: \"rank\" }], sort: [{ field: headers[0], order: \"descending\" }] },\n                { filter: \"datum.rank === 1\" }\n              ],\n              mark: {\n                type: \"text\",\n                align: \"left\",\n                baseline: \"middle\",\n                dx: 15,\n                fontWeight: \"bold\",\n                fontSize: 12\n              },\n              encoding: {\n                text: { field: headers[1], type: \"nominal\" },\n                color: { field: headers[1], type: \"nominal\", legend: false }\n              }\n            },\n            {\n              // Right-side labels\n              transform: [\n                { window: [{ op: \"rank\", as: \"rank\" }], sort: [{ field: headers[0], order: \"ascending\" }] },\n                { filter: \"datum.rank === 1\" }\n              ],\n              mark: {\n                type: \"text\",\n                align: \"right\",\n                baseline: \"middle\",\n                dx: -15,\n                fontWeight: \"bold\",\n                fontSize: 12\n              },\n              encoding: {\n                text: { field: headers[1], type: \"nominal\" },\n                color: { field: headers[1], type: \"nominal\", legend: false }\n              }\n            }\n          ],\n          config: {\n            view: { stroke: \"transparent\" },\n            line: { strokeWidth: 3, strokeCap: \"round\", strokeJoin: \"round\" },\n            axis: {\n              ticks: false,\n              grid: false,\n              domain: false,\n              labelColor: \"#666666\",\n              labelFontSize: 12\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"sankey\") {\n      // Parse links from Source-Target-Value format\n      const links = data\n        .filter(r => r[headers[0]] && r[headers[1]] && !isNaN(+r[headers[2]]))\n        .map(r => ({\n          source: String(r[headers[0]]).trim(),\n          destination: String(r[headers[1]]).trim(),\n          value: +r[headers[2]]\n        }));\n\n      if (links.length === 0) {\n        showError(\"No valid data found for Sankey chart\");\n        return;\n      }\n\n      // Helper function to assign stage levels using topological sort\n      const assignNodeStages = (links) => {\n        const nodeStages = new Map();\n        const inDegree = new Map();\n        const outEdges = new Map();\n        \n        // Build graph\n        const allNodes = new Set();\n        links.forEach(link => {\n          allNodes.add(link.source);\n          allNodes.add(link.destination);\n          \n          if (!outEdges.has(link.source)) {\n            outEdges.set(link.source, []);\n          }\n          outEdges.get(link.source).push(link.destination);\n          \n          inDegree.set(link.destination, (inDegree.get(link.destination) || 0) + 1);\n        });\n        \n        // Find source nodes (stage 0)\n        const queue = [];\n        allNodes.forEach(node => {\n          if (!inDegree.has(node) || inDegree.get(node) === 0) {\n            queue.push(node);\n            nodeStages.set(node, 0);\n          }\n        });\n        \n        // Handle cycles or no clear sources\n        if (queue.length === 0 && allNodes.size > 0) {\n          const firstNode = Array.from(allNodes)[0];\n          queue.push(firstNode);\n          nodeStages.set(firstNode, 0);\n        }\n        \n        // Topological sort\n        const processed = new Set();\n        while (queue.length > 0) {\n          const current = queue.shift();\n          if (processed.has(current)) continue;\n          processed.add(current);\n          \n          const currentStage = nodeStages.get(current) || 0;\n          const neighbors = outEdges.get(current) || [];\n          \n          neighbors.forEach(neighbor => {\n            const newStage = currentStage + 1;\n            const existingStage = nodeStages.get(neighbor);\n            \n            if (existingStage === undefined || newStage > existingStage) {\n              nodeStages.set(neighbor, newStage);\n            }\n            \n            if (!processed.has(neighbor)) {\n              queue.push(neighbor);\n            }\n          });\n        }\n        \n        // Assign stage 0 to any remaining nodes\n        allNodes.forEach(node => {\n          if (!nodeStages.has(node)) {\n            nodeStages.set(node, 0);\n          }\n        });\n        \n        return nodeStages;\n      };\n\n      // Auto-detect node stages\n      const nodeStages = assignNodeStages(links);\n      \n      // Get all unique nodes\n      const allNodes = new Set();\n      links.forEach(link => {\n        allNodes.add(link.source);\n        allNodes.add(link.destination);\n      });\n\n      // Create category definitions with stack assignments\n      const categories = [];\n      const stageGroups = new Map();\n      \n      allNodes.forEach(node => {\n        const stage = nodeStages.get(node);\n        if (!stageGroups.has(stage)) {\n          stageGroups.set(stage, []);\n        }\n        stageGroups.get(stage).push(node);\n      });\n\n      // Create categories for each node with proper stack assignment\n      const sortedStages = Array.from(stageGroups.keys()).sort((a, b) => a - b);\n      sortedStages.forEach((stage, stageIndex) => {\n        const nodesInStage = stageGroups.get(stage);\n        nodesInStage.sort(); // Sort alphabetically within stage\n        \n        nodesInStage.forEach((node, nodeIndex) => {\n          const stackNumber = stageIndex + 1;\n          \n          categories.push({\n            category: node,\n            stack: stackNumber,\n            sort: nodeIndex + 1,\n            labels: stageIndex === 0 ? \"left\" : null\n          });\n        });\n      });\n\n      // Combine categories and links into input data\n      const inputData = [...categories, ...links];\n\n      // Create Vega spec\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega/v5.json\",\n        description: \"Sankey diagram\",\n        width: 800,\n        height: 600,\n        padding: { bottom: 20, left: 80, right: 80, top: 40 },\n        background: \"white\",\n        signals: [\n          {\n            name: \"standardGap\",\n            value: 14,\n            description: \"Gap as a percentage of full domain\"\n          },\n          {\n            name: \"base\",\n            value: \"center\",\n            description: \"How to stack (center or zero)\"\n          }\n        ],\n        data: [\n          {\n            name: \"input\",\n            values: inputData\n          },\n          {\n            name: \"stacks\",\n            source: \"input\",\n            transform: [\n              { type: \"filter\", expr: \"datum.source != null\" },\n              { type: \"formula\", as: \"end\", expr: \"['source','destination']\" },\n              { type: \"formula\", as: \"name\", expr: \"[datum.source, datum.destination]\" },\n              { type: \"project\", fields: [\"end\", \"name\", \"value\"] },\n              { type: \"flatten\", fields: [\"end\", \"name\"] },\n              {\n                type: \"lookup\",\n                from: \"input\",\n                key: \"category\",\n                values: [\"stack\", \"sort\", \"gap\", \"labels\"],\n                fields: [\"name\"],\n                as: [\"stack\", \"sort\", \"gap\", \"labels\"]\n              },\n              {\n                type: \"aggregate\",\n                fields: [\"value\", \"stack\", \"sort\", \"gap\", \"labels\"],\n                groupby: [\"end\", \"name\"],\n                ops: [\"sum\", \"max\", \"max\", \"max\", \"max\"],\n                as: [\"value\", \"stack\", \"sort\", \"gap\", \"labels\"]\n              },\n              {\n                type: \"aggregate\",\n                fields: [\"value\", \"stack\", \"sort\", \"gap\", \"labels\"],\n                groupby: [\"name\"],\n                ops: [\"max\", \"max\", \"max\", \"max\", \"max\"],\n                as: [\"value\", \"stack\", \"sort\", \"gap\", \"labels\"]\n              },\n              { type: \"formula\", as: \"gap\", expr: \"datum.gap ? datum.gap : 0\" }\n            ]\n          },\n          {\n            name: \"maxValue\",\n            source: [\"stacks\"],\n            transform: [\n              {\n                type: \"aggregate\",\n                fields: [\"value\"],\n                groupby: [\"stack\"],\n                ops: [\"sum\"],\n                as: [\"value\"]\n              },\n              {\n                type: \"aggregate\",\n                fields: [\"value\"],\n                ops: [\"max\"],\n                as: [\"value\"]\n              }\n            ]\n          },\n          {\n            name: \"plottedStacks\",\n            source: [\"stacks\"],\n            transform: [\n              {\n                type: \"formula\",\n                as: \"spacer\",\n                expr: \"(data('maxValue')[0].value/100)*(standardGap+datum.gap)\"\n              },\n              { type: \"formula\", as: \"type\", expr: \"['data','spacer']\" },\n              { type: \"formula\", as: \"spacedValue\", expr: \"[datum.value, datum.spacer]\" },\n              { type: \"flatten\", fields: [\"type\", \"spacedValue\"] },\n              {\n                type: \"stack\",\n                groupby: [\"stack\"],\n                sort: { field: \"sort\", order: \"descending\" },\n                field: \"spacedValue\",\n                offset: { signal: \"base\" }\n              },\n              { type: \"formula\", expr: \"((datum.value)/2)+datum.y0\", as: \"yc\" }\n            ]\n          },\n          {\n            name: \"finalTable\",\n            source: [\"plottedStacks\"],\n            transform: [{ type: \"filter\", expr: \"datum.type == 'data'\" }]\n          },\n          {\n            name: \"linkTable\",\n            source: [\"input\"],\n            transform: [\n              { type: \"filter\", expr: \"datum.source != null\" },\n              {\n                type: \"lookup\",\n                from: \"finalTable\",\n                key: \"name\",\n                values: [\"y0\", \"y1\", \"stack\", \"sort\"],\n                fields: [\"source\"],\n                as: [\"sourceStacky0\", \"sourceStacky1\", \"sourceStack\", \"sourceSort\"]\n              },\n              {\n                type: \"lookup\",\n                from: \"finalTable\",\n                key: \"name\",\n                values: [\"y0\", \"y1\", \"stack\", \"sort\"],\n                fields: [\"destination\"],\n                as: [\"destinationStacky0\", \"destinationStacky1\", \"destinationStack\", \"destinationSort\"]\n              },\n              {\n                type: \"stack\",\n                groupby: [\"source\"],\n                sort: { field: \"destinationSort\", order: \"descending\" },\n                field: \"value\",\n                offset: \"zero\",\n                as: [\"syi0\", \"syi1\"]\n              },\n              { type: \"formula\", expr: \"datum.syi0+datum.sourceStacky0\", as: \"sy0\" },\n              { type: \"formula\", expr: \"datum.sy0+datum.value\", as: \"sy1\" },\n              {\n                type: \"stack\",\n                groupby: [\"destination\"],\n                sort: { field: \"sourceSort\", order: \"descending\" },\n                field: \"value\",\n                offset: \"zero\",\n                as: [\"dyi0\", \"dyi1\"]\n              },\n              { type: \"formula\", expr: \"datum.dyi0+datum.destinationStacky0\", as: \"dy0\" },\n              { type: \"formula\", expr: \"datum.dy0+datum.value\", as: \"dy1\" },\n              { type: \"formula\", expr: \"((datum.value)/2)+datum.sy0\", as: \"syc\" },\n              { type: \"formula\", expr: \"((datum.value)/2)+datum.dy0\", as: \"dyc\" },\n              {\n                type: \"linkpath\",\n                orient: \"horizontal\",\n                shape: \"diagonal\",\n                sourceY: { expr: \"scale('y', datum.syc)\" },\n                sourceX: { expr: \"scale('x', toNumber(datum.sourceStack)) + bandwidth('x')\" },\n                targetY: { expr: \"scale('y', datum.dyc)\" },\n                targetX: { expr: \"scale('x', datum.destinationStack)\" }\n              },\n              { type: \"formula\", expr: \"range('y')[0]-scale('y', datum.value)\", as: \"strokeWidth\" }\n            ]\n          }\n        ],\n        scales: [\n          {\n            name: \"x\",\n            type: \"band\",\n            range: \"width\",\n            domain: { data: \"finalTable\", field: \"stack\" },\n            paddingInner: 0.88\n          },\n          {\n            name: \"y\",\n            type: \"linear\",\n            range: \"height\",\n            domain: { data: \"finalTable\", field: \"y1\" },\n            reverse: false\n          },\n          {\n            name: \"color\",\n            type: \"ordinal\",\n            range: [\n              \"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\",\n              \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \"#bcbd22\", \"#17becf\",\n              \"#aec7e8\", \"#ffbb78\", \"#98df8a\", \"#ff9896\", \"#c5b0d5\",\n              \"#c49c94\", \"#f7b6d2\", \"#c7c7c7\", \"#dbdb8d\", \"#9edae5\"\n            ],\n            domain: { data: \"stacks\", field: \"name\" }\n          }\n        ],\n        marks: [\n          {\n            type: \"rect\",\n            from: { data: \"finalTable\" },\n            encode: {\n              update: {\n                x: { scale: \"x\", field: \"stack\" },\n                width: { scale: \"x\", band: 1 },\n                y: { scale: \"y\", field: \"y0\" },\n                y2: { scale: \"y\", field: \"y1\" },\n                fill: { scale: \"color\", field: \"name\" },\n                fillOpacity: { value: 0.75 },\n                strokeWidth: { value: 0 },\n                stroke: { scale: \"color\", field: \"name\" }\n              },\n              hover: {\n                tooltip: { signal: \"{'Name': datum.name, 'Value': format(datum.value, ',.2f')}\" },\n                fillOpacity: { value: 1 }\n              }\n            }\n          },\n          {\n            type: \"path\",\n            name: \"links\",\n            from: { data: \"linkTable\" },\n            clip: true,\n            encode: {\n              update: {\n                strokeWidth: { field: \"strokeWidth\" },\n                path: { field: \"path\" },\n                strokeOpacity: { signal: \"0.3\" },\n                stroke: { field: \"destination\", scale: \"color\" }\n              },\n              hover: {\n                strokeOpacity: { value: 0.8 },\n                tooltip: {\n                  signal: \"{'Source': datum.source, 'Destination': datum.destination, 'Value': format(datum.value, ',.2f')}\"\n                }\n              }\n            }\n          },\n          {\n            type: \"group\",\n            name: \"labelText\",\n            zindex: 1,\n            from: {\n              facet: {\n                data: \"finalTable\",\n                name: \"labelFacet\",\n                groupby: [\"name\", \"stack\", \"yc\", \"value\", \"labels\"]\n              }\n            },\n            clip: false,\n            encode: {\n              update: {\n                x: {\n                  signal: \"datum.labels=='left' ? scale('x', datum.stack)-8 : scale('x', datum.stack) + bandwidth('x') + 8\"\n                },\n                yc: { scale: \"y\", signal: \"datum.yc\" },\n                width: { signal: \"0\" },\n                height: { signal: \"0\" }\n              }\n            },\n            marks: [\n              {\n                type: \"text\",\n                name: \"heading\",\n                from: { data: \"labelFacet\" },\n                encode: {\n                  update: {\n                    x: { value: 0 },\n                    y: { value: -2 },\n                    text: { field: \"name\" },\n                    align: { signal: \"datum.labels=='left' ? 'right' : 'left'\" },\n                    fontWeight: { value: \"bold\" },\n                    fontSize: { value: 11 }\n                  }\n                }\n              },\n              {\n                type: \"text\",\n                name: \"amount\",\n                from: { data: \"labelFacet\" },\n                encode: {\n                  update: {\n                    x: { value: 0 },\n                    y: { value: 12 },\n                    text: { signal: \"format(datum.value, ',.0f')\" },\n                    align: { signal: \"datum.labels=='left' ? 'right' : 'left'\" },\n                    fontSize: { value: 10 }\n                  }\n                }\n              }\n            ]\n          },\n          {\n            type: \"rect\",\n            from: { data: \"labelText\" },\n            encode: {\n              update: {\n                x: { field: \"bounds.x1\", offset: -2 },\n                x2: { field: \"bounds.x2\", offset: 2 },\n                y: { field: \"bounds.y1\", offset: -2 },\n                y2: { field: \"bounds.y2\", offset: 2 },\n                fill: { value: \"white\" },\n                opacity: { value: 0.8 },\n                cornerRadius: { value: 4 }\n              }\n            }\n          }\n        ],\n        config: {\n          view: { stroke: \"transparent\" },\n          text: { fontSize: 11, fill: \"#333333\" }\n        }\n      };\n      }\n\n      else if (chartType === \"streamgraph\") {\n        // Streamgraph requires 3 columns: Time/Date, Series, Values\n        if (headers.length < 3) {\n            throw new Error(\"Streamgraph requires 3 columns: Time/Date, Series/Category, Values\");\n        }\n\n        // Process data and detect X-axis type\n        let xAxisType = \"ordinal\"; // Default for simple values like years\n        const processedData = data.map(row => {\n            let processedRow = { ...row };\n            \n            // Check if first column needs date conversion\n            const firstColValue = row[headers[0]];\n            if (typeof firstColValue === 'number' && firstColValue > 25569) {\n            // Excel date serial\n            processedRow[headers[0]] = new Date((firstColValue - 25569) * 86400 * 1000);\n            xAxisType = \"temporal\";\n            } else if (typeof firstColValue === 'string' && firstColValue.includes('-')) {\n            // String dates like \"2020-01-01\"\n            const parsedDate = new Date(firstColValue);\n            if (!isNaN(parsedDate.getTime())) {\n                processedRow[headers[0]] = parsedDate;\n                xAxisType = \"temporal\";\n            }\n            }\n            // For simple values like 2020, 2021, keep as-is and use ordinal\n            \n            return processedRow;\n        });\n\n        // Create axis configuration based on detected type\n        const xAxisConfig = xAxisType === \"temporal\" ? {\n            field: headers[0],\n            type: \"temporal\",\n            axis: {\n            domain: false,\n            format: \"%Y-%m\",\n            tickSize: 0,\n            title: headers[0],\n            labelFontSize: 11,\n            titleFontSize: 12,\n            labelColor: \"#605e5c\",\n            titleColor: \"#323130\",\n            labelAngle: -45\n            }\n        } : {\n            field: headers[0],\n            type: \"ordinal\",\n            axis: {\n            domain: false,\n            tickSize: 0,\n            title: headers[0],\n            labelFontSize: 11,\n            titleFontSize: 12,\n            labelColor: \"#605e5c\",\n            titleColor: \"#323130\"\n            }\n        };\n\n        // Use Vega-Lite specification for streamgraph\n        spec = {\n            $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n            width: 700,\n            height: 400,\n            background: \"white\",\n            config: { view: { stroke: \"transparent\" }},\n            description: \"Streamgraph from Excel selection\",\n            data: { values: processedData },\n            mark: {\n            type: \"area\",\n            tooltip: true,\n            interpolate: \"basis\",\n            opacity: 0.8\n            },\n            encoding: {\n            x: xAxisConfig,\n            y: {\n                aggregate: \"sum\",\n                field: headers[2],\n                type: \"quantitative\",\n                axis: null,\n                stack: \"center\"\n            },\n            color: {\n                field: headers[1],\n                type: \"nominal\",\n                scale: { scheme: \"category20b\" },\n                legend: {\n                title: headers[1],\n                titleFontSize: 12,\n                labelFontSize: 11,\n                orient: \"right\"\n                }\n            },\n            tooltip: [\n                { \n                field: headers[0], \n                type: xAxisType === \"temporal\" ? \"temporal\" : \"ordinal\", \n                title: \"Period\",\n                format: xAxisType === \"temporal\" ? \"%Y-%m-%d\" : undefined\n                },\n                { field: headers[1], type: \"nominal\", title: \"Series\" },\n                { field: headers[2], type: \"quantitative\", title: \"Value\", format: \",.0f\" }\n            ]\n            },\n            config: {\n            font: \"Segoe UI\",\n            legend: {\n                titleColor: \"#323130\",\n                labelColor: \"#605e5c\"\n            }\n            }\n        };\n      }\n\n      else if (chartType === \"ribbon\") {\n        // Calculate dynamic dimensions based on data\n        const uniquePeriods = [...new Set(data.map(d => d[headers[0]]))];\n        const dynamicWidth = Math.max(600, uniquePeriods.length * 100); // More space per period\n        const dynamicHeight = 400; // Adequate height for ribbon flow\n\n        spec = {\n            $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n            description: \"Ribbon chart from Excel selection\",\n            background: \"white\",\n            width: dynamicWidth,\n            height: dynamicHeight,\n            config: { view: { stroke: \"transparent\" }},\n            data: { values: data },\n            layer: [\n            {\n                mark: { \n                type: \"area\", \n                interpolate: \"monotone\", \n                tooltip: true,\n                opacity: 0.8\n                },\n                encoding: {\n                x: {\n                    field: headers[0],\n                    type: \"ordinal\", // temporal change to \"ordinal\" if your first col is not a date\n                    scale: {\n                    type: \"point\",\n                    padding: 0.3 // Add padding between periods for more spread\n                    },\n                    axis: {\n                    title: headers[0],\n                    labelAngle: -45, // Angle labels to prevent overlap\n                    labelFontSize: 12,\n                    titleFontSize: 14,\n                    labelPadding: 10,\n                    titlePadding: 20\n                    }\n                },\n                y: {\n                    aggregate: \"sum\",\n                    field: headers[2],\n                    type: \"quantitative\",\n                    axis: {\n                    title: headers[2],\n                    labelFontSize: 12,\n                    titleFontSize: 14,\n                    grid: true,\n                    gridOpacity: 0.3\n                    },\n                    stack: \"center\"\n                },\n                color: {\n                    field: headers[1],\n                    type: \"nominal\",\n                    legend: {\n                    title: headers[1],\n                    titleFontSize: 12,\n                    labelFontSize: 11,\n                    orient: \"right\"\n                    }\n                },\n                order: {\n                    aggregate: \"sum\",\n                    field: headers[2],\n                    type: \"quantitative\"\n                }\n                }\n            }\n            ],\n            config: {\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            axis: {\n                ticks: false,\n                grid: true,\n                gridColor: \"#f0f0f0\",\n                gridOpacity: 0.5,\n                gridWidth: 1,\n                domain: false,\n                labelColor: \"#605e5c\",\n                titleColor: \"#323130\"\n            },\n            legend: {\n                titleFont: \"Segoe UI\",\n                titleFontWeight: \"bold\",\n                titleColor: \"#323130\",\n                labelFont: \"Segoe UI\",\n                labelColor: \"#605e5c\",\n                symbolType: \"circle\",\n                symbolSize: 75\n            }\n            }\n        };\n      }\n\n      else if (chartType === \"ridgeline\") {\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Ridgeline (Joyplot) chart from Excel selection\",\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        data: { values: data },\n        mark: {\n        type: \"area\",\n        fillOpacity: 0.7,\n        strokeOpacity: 1,\n        strokeWidth: 1,\n        interpolate: \"monotone\"\n        },\n        width: 400,\n        height: 20,\n        encoding: {\n        x: {\n            field: headers[0],       // date/time column\n            type: \"ordinal\",\n            title: headers[0]\n        },\n        y: {\n            aggregate: \"sum\",\n            field: headers[2],       // value column\n            type: \"quantitative\",\n            scale: { range: [20, -40] },\n            axis: {\n            title: null,\n            values: [0],\n            domain: false,\n            labels: false,\n            ticks: false\n            }\n        },\n        row: {\n            field: headers[1],       // category column\n            type: \"nominal\",\n            title: headers[1],\n            header: {\n            title: null,\n            labelAngle: 0,\n            labelOrient: \"left\",\n            labelAlign: \"left\",\n            labelPadding: 0\n            },\n            sort: { field: headers[0], op: \"max\", order: \"ascending\" }\n        },\n        fill: {\n            field: headers[1],\n            type: \"nominal\",\n            legend: null,\n            scale: { scheme: \"plasma\" }\n        }\n        },\n        resolve: { scale: { y: \"independent\" } },\n        config: {\n        view: { stroke: \"transparent\" },\n        facet: { spacing: 20 },\n        header: {\n            labelFontSize: 12,\n            labelFontWeight: 500,\n            labelAngle: 0,\n            labelAnchor: \"end\",\n            labelOrient: \"top\",\n            labelPadding: -19\n        },\n        axis: {\n            domain: false,\n            grid: false,\n            ticks: false,\n            tickCount: 5,\n            labelFontSize: 12,\n            titleFontSize: 12,\n            titleFontWeight: 400,\n            titleColor: \"#605E5C\"\n        }\n        }\n      };\n      }\n\n      else if (chartType === \"wordcloud\") {\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega/v5.json\",\n        description: \"Word cloud from Excel selection\",\n        width: 800,\n        height: 400,\n        padding: 0,\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        data: [\n        {\n            name: \"table\",\n            values: data,\n            transform: [\n            {\n                type: \"countpattern\",\n                field: headers[0], // Use first column as text source\n                case: \"upper\",\n                pattern: \"[\\\\w']{3,}\",\n                stopwords: \"(i|me|my|myself|we|us|our|ours|ourselves|you|your|yours|yourself|yourselves|he|him|his|himself|she|her|hers|herself|it|its|itself|they|them|their|theirs|themselves|what|which|who|whom|whose|this|that|these|those|am|is|are|was|were|be|been|being|have|has|had|having|do|does|did|doing|will|would|should|can|could|ought|i'm|you're|he's|she's|it's|we're|they're|i've|you've|we've|they've|i'd|you'd|he'd|she'd|we'd|they'd|i'll|you'll|he'll|she'll|we'll|they'll|isn't|aren't|wasn't|weren't|hasn't|haven't|hadn't|doesn't|don't|didn't|won't|wouldn't|shan't|shouldn't|can't|cannot|couldn't|mustn't|let's|that's|who's|what's|here's|there's|when's|where's|why's|how's|a|an|the|and|but|if|or|because|as|until|while|of|at|by|for|with|about|against|between|into|through|during|before|after|above|below|to|from|up|upon|down|in|out|on|off|over|under|again|further|then|once|here|there|when|where|why|how|all|any|both|each|few|more|most|other|some|such|no|nor|not|only|own|same|so|than|too|very|say|says|said|shall)\"\n            },\n            {\n                type: \"formula\", \n                as: \"angle\",\n                expr: \"[-45, 0, 45][~~(random() * 3)]\"\n            },\n            {\n                type: \"formula\", \n                as: \"weight\",\n                expr: \"if(datum.count > 10, 600, 300)\"\n            }\n            ]\n        }\n        ],\n        \n        scales: [\n        {\n            name: \"color\",\n            type: \"ordinal\",\n            domain: { data: \"table\", field: \"text\" },\n            range: [\"#d5a928\", \"#652c90\", \"#939597\", \"#2563eb\", \"#dc2626\", \"#059669\"]\n        }\n        ],\n        \n        marks: [\n        {\n            type: \"text\",\n            from: { data: \"table\" },\n            encode: {\n            enter: {\n                text: { field: \"text\" },\n                align: { value: \"center\" },\n                baseline: { value: \"alphabetic\" },\n                fill: { scale: \"color\", field: \"text\" }\n            },\n            update: {\n                fillOpacity: { value: 1 }\n            },\n            hover: {\n                fillOpacity: { value: 0.5 }\n            }\n            },\n            transform: [\n            {\n                type: \"wordcloud\",\n                size: [800, 400],\n                text: { field: \"text\" },\n                rotate: { field: \"datum.angle\" },\n                font: \"Helvetica Neue, Arial\",\n                fontSize: { field: \"datum.count\" },\n                fontWeight: { field: \"datum.weight\" },\n                fontSizeRange: [12, 56],\n                padding: 2\n            }\n            ]\n        }\n        ]\n      };\n      }\n\n      else if (chartType === \"area\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n          description: \"Area chart from Excel selection\",\n          background: \"white\",\n          data: { values: data },\n          mark: { \n            type: \"area\", \n            tooltip: true,\n            line: {\n              color: \"#0078d4\"\n            },\n            color: {\n              x1: 1,\n              y1: 1,\n              x2: 1,\n              y2: 0,\n              gradient: \"linear\",\n              stops: [\n                {\n                  offset: 0,\n                  color: \"white\"\n                },\n                {\n                  offset: 1,\n                  color: \"#0078d4\"\n                }\n              ]\n            }\n          },\n          encoding: {\n            x: { \n              field: headers[0], \n              type: \"ordinal\",\n              axis: {\n                title: headers[0],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            y: { \n              field: headers[1], \n              type: \"quantitative\",\n              axis: {\n                title: headers[1],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            // Add color encoding for multiple areas if 3rd column exists\n            ...(headers.length >= 3 && {\n              color: { \n                field: headers[2], \n                type: \"nominal\",\n                legend: {\n                  title: headers[2],\n                  titleFontSize: 12,\n                  labelFontSize: 11\n                }\n              }\n            })\n          },\n          config: {\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            axis: {\n              labelColor: \"#605e5c\",\n              titleColor: \"#323130\",\n              gridColor: \"#f3f2f1\"\n            },\n            legend: {\n              titleColor: \"#323130\",\n              labelColor: \"#605e5c\"\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"bar\") {\n        const categoryField = headers[0];\n        const valueField = headers[1];\n        const groupField = headers.length >= 3 ? headers[2] : null;\n        \n        // Determine if we need grouping by checking if any category has multiple groups\n        let categoryGroups = {};\n        if (groupField) {\n          data.forEach(d => {\n            const cat = d[categoryField];\n            const grp = d[groupField];\n            if (!categoryGroups[cat]) categoryGroups[cat] = new Set();\n            categoryGroups[cat].add(grp);\n          });\n        }\n        const needsGrouping = groupField && Object.values(categoryGroups).some(groups => groups.size > 1);\n        \n        // Add shadeLevel to data (counts how many duplicates per category/group)\n        let shadeCounter = {};\n        const shadedData = data.map(d => {\n          const key = `${d[categoryField]}|${groupField ? d[groupField] : \"none\"}`;\n          const level = (shadeCounter[key] || 0);\n          shadeCounter[key] = level + 1;\n          return { ...d, shadeLevel: level };\n        });\n        \n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n          description: \"Bar chart from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" } },\n          data: { values: shadedData },\n          mark: { type: \"bar\", tooltip: true },\n          encoding: {\n            y: { \n              field: categoryField, \n              type: \"nominal\",\n              axis: {\n                title: categoryField,\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            x: { \n              field: valueField, \n              type: \"quantitative\",\n              axis: {\n                title: valueField,\n                labelFontSize: 12,\n                titleFontSize: 14\n              },\n              stack: \"zero\" // stack when same category/group repeated\n            },\n            ...(needsGrouping && { yOffset: { field: groupField } }),\n            ...(groupField && {\n              color: {\n                field: groupField,\n                type: \"nominal\",\n                legend: {\n                  title: groupField,\n                  titleFontSize: 12,\n                  labelFontSize: 11\n                },\n                scale: { scheme: \"category10\" }\n              },\n              fillOpacity: {\n                field: \"shadeLevel\",\n                type: \"quantitative\",\n                scale: { domain: [0, 3], range: [1, 0.5] } // lighter for higher stack index\n              }\n            })\n          },\n          config: {\n            font: \"Segoe UI\",\n            axis: {\n              labelColor: \"#605e5c\",\n              titleColor: \"#323130\",\n              gridColor: \"#f3f2f1\"\n            },\n            legend: {\n              titleColor: \"#323130\",\n              labelColor: \"#605e5c\"\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"column\") {\n        const categoryField = headers[0];\n        const valueField = headers[1];\n        const groupField = headers.length >= 3 ? headers[2] : null;\n        \n        // Determine if we need grouping by checking if any category has multiple groups\n        let categoryGroups = {};\n        if (groupField) {\n          data.forEach(d => {\n            const cat = d[categoryField];\n            const grp = d[groupField];\n            if (!categoryGroups[cat]) categoryGroups[cat] = new Set();\n            categoryGroups[cat].add(grp);\n          });\n        }\n        const needsGrouping = groupField && Object.values(categoryGroups).some(groups => groups.size > 1);\n        \n        // Add shadeLevel to data (counts how many duplicates per category/group)\n        let shadeCounter = {};\n        const shadedData = data.map(d => {\n          const key = `${d[categoryField]}|${groupField ? d[groupField] : \"none\"}`;\n          const level = (shadeCounter[key] || 0);\n          shadeCounter[key] = level + 1;\n          return { ...d, shadeLevel: level };\n        });\n        \n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n          description: \"Column chart from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" } },\n          data: { values: shadedData },\n          mark: { type: \"bar\", tooltip: true },\n          encoding: {\n            x: { \n              field: categoryField, \n              type: \"nominal\",\n              axis: {\n                title: categoryField,\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            y: { \n              field: valueField, \n              type: \"quantitative\",\n              axis: {\n                title: valueField,\n                labelFontSize: 12,\n                titleFontSize: 14\n              },\n              stack: \"zero\" // stack when same category/group repeated\n            },\n            ...(needsGrouping && { xOffset: { field: groupField } }),\n            ...(groupField && {\n              color: {\n                field: groupField,\n                type: \"nominal\",\n                legend: {\n                  title: groupField,\n                  titleFontSize: 12,\n                  labelFontSize: 11\n                },\n                scale: { scheme: \"category10\" }\n              },\n              fillOpacity: {\n                field: \"shadeLevel\",\n                type: \"quantitative\",\n                scale: { domain: [0, 3], range: [1, 0.5] } // lighter for higher stack index\n              }\n            })\n          },\n          config: {\n            font: \"Segoe UI\",\n            axis: {\n              labelColor: \"#605e5c\",\n              titleColor: \"#323130\",\n              gridColor: \"#f3f2f1\"\n            },\n            legend: {\n              titleColor: \"#323130\",\n              labelColor: \"#605e5c\"\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"butterfly\") {\n        // Butterfly chart requires 3 columns: Category, Left Values, Right Values\n        if (headers.length < 3) {\n          console.error(\"Butterfly chart requires 3 columns (Category, Left Values, Right Values)\");\n          return;\n        }\n\n        // Calculate max value for shared scale\n        const maxLeft = Math.max(...data.map(d => Math.abs(d[headers[1]] || 0)));\n        const maxRight = Math.max(...data.map(d => Math.abs(d[headers[2]] || 0)));\n        const maxValue = Math.max(maxLeft, maxRight);\n\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n          description: \"Butterfly chart from Excel selection\",\n          background: \"white\",\n          config: { \n            view: { stroke: null },\n            axis: { grid: false }\n          },\n          data: { values: data },\n          spacing: 0,\n          hconcat: [\n            {\n              transform: [{ filter: { field: headers[1], valid: true } }],\n              title: headers[1],\n              mark: \"bar\",\n              encoding: {\n                y: {\n                  field: headers[0],\n                  axis: null,\n                  sort: \"descending\"\n                },\n                x: {\n                  aggregate: \"sum\",\n                  field: headers[1],\n                  title: null,\n                  axis: { format: \"s\" },\n                  scale: { domain: [0, maxValue] },\n                  sort: \"descending\"\n                },\n                color: {\n                  value: \"#675193\"\n                }\n              }\n            },\n            {\n              width: 20,\n              view: { stroke: null },\n              mark: {\n                type: \"text\",\n                align: \"center\"\n              },\n              encoding: {\n                y: { \n                  field: headers[0], \n                  type: \"ordinal\", \n                  axis: null, \n                  sort: \"descending\" \n                },\n                text: { field: headers[0], type: \"nominal\" }\n              }\n            },\n            {\n              transform: [{ filter: { field: headers[2], valid: true } }],\n              title: headers[2],\n              mark: \"bar\",\n              encoding: {\n                y: {\n                  field: headers[0],\n                  title: null,\n                  axis: null,\n                  sort: \"descending\"\n                },\n                x: {\n                  aggregate: \"sum\",\n                  field: headers[2],\n                  title: null,\n                  axis: { format: \"s\" },\n                  scale: { domain: [0, maxValue] }\n                },\n                color: {\n                  value: \"#ca8861\"\n                }\n              }\n            }\n          ]\n        };\n      }\n\n      else if (chartType === \"beeswarm\") {\n        if (headers.length < 2) {\n          showError(\"Beeswarm chart requires at least 2 columns (Category, Value)\");\n          return;\n        }\n\n        // Convert rows to objects with proper structure\n        const processedData = data.map((row, index) => ({\n          group: row[headers[0]],\n          value: parseFloat(row[headers[1]]) || 0,\n          id: index,\n          name: headers.length >= 3 ? row[headers[2]] : `Item ${index + 1}`\n        }));\n\n        // Calculate dynamic dimensions\n        const uniqueGroups = [...new Set(processedData.map(d => d.group))];\n        const dynamicWidth = Math.max(600, uniqueGroups.length * 150);\n        const dynamicHeight = 300;\n\n        // Full Vega specification with force simulation\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega/v5.json\",\n          description: \"Beeswarm chart using force-directed layout from Excel selection\",\n          width: dynamicWidth,\n          height: dynamicHeight,\n          padding: { left: 5, right: 5, top: 20, bottom: 40 },\n          autosize: \"none\",\n          background: \"white\",\n          \n          signals: [\n            { name: \"cx\", update: \"width / 2\" },\n            { name: \"cy\", update: \"height / 2\" },\n            { name: \"radius\", value: 6 },\n            { name: \"collide\", value: 1 },\n            { name: \"gravityX\", value: 0.3 },\n            { name: \"gravityY\", value: 0.2 },\n            { name: \"static\", value: true }\n          ],\n\n          data: [\n            {\n              name: \"people\",\n              values: processedData\n            }\n          ],\n\n          scales: [\n            {\n              name: \"xscale\",\n              type: \"band\",\n              domain: {\n                data: \"people\",\n                field: \"group\",\n                sort: true\n              },\n              range: \"width\"\n            },\n            {\n              name: \"color\",\n              type: \"ordinal\",\n              domain: { data: \"people\", field: \"group\" },\n              range: { scheme: \"tableau10\" }\n            }\n          ],\n\n          axes: [\n            { \n              orient: \"bottom\", \n              scale: \"xscale\",\n              labelAngle: -45,\n              labelAlign: \"right\",\n              labelBaseline: \"middle\",\n              labelFont: \"Segoe UI\",\n              labelFontSize: 11,\n              labelColor: \"#605e5c\",\n              titleFont: \"Segoe UI\",\n              titleFontSize: 12,\n              titleColor: \"#323130\",\n              domain: true,\n              domainColor: \"#8a8886\",\n              ticks: true,\n              tickColor: \"#8a8886\"\n            }\n          ],\n\n          marks: [\n            {\n              name: \"nodes\",\n              type: \"symbol\",\n              from: { data: \"people\" },\n              encode: {\n                enter: {\n                  fill: { scale: \"color\", field: \"group\" },\n                  xfocus: { scale: \"xscale\", field: \"group\", band: 0.5 },\n                  yfocus: { signal: \"cy\" }\n                },\n                update: {\n                  size: { signal: \"pow(2 * radius, 2)\" },\n                  stroke: { value: \"white\" },\n                  strokeWidth: { value: 1.5 },\n                  zindex: { value: 0 },\n                  tooltip: { \n                    signal: \"{'Name': datum.name, 'Group': datum.group, 'Value': datum.value}\" \n                  }\n                },\n                hover: {\n                  stroke: { value: \"#323130\" },\n                  strokeWidth: { value: 3 },\n                  zindex: { value: 1 }\n                }\n              },\n              transform: [\n                {\n                  type: \"force\",\n                  iterations: 300,\n                  static: { signal: \"static\" },\n                  forces: [\n                    { \n                      force: \"collide\", \n                      iterations: { signal: \"collide\" }, \n                      radius: { signal: \"radius + 1\" } \n                    },\n                    { \n                      force: \"x\", \n                      x: \"xfocus\", \n                      strength: { signal: \"gravityX\" } \n                    },\n                    { \n                      force: \"y\", \n                      y: \"yfocus\", \n                      strength: { signal: \"gravityY\" } \n                    }\n                  ]\n                }\n              ]\n            }\n          ],\n          \n          config: {\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\"\n          }\n        };\n      }\n\n      else if (chartType === \"funnel\") {\n        // Sort data descending\n        data.sort((a, b) => b[headers[1]] - a[headers[1]]);\n\n        const total = data.reduce((sum, d) => sum + d[headers[1]], 0);\n\n        const isPercentage = data.every(d => {\n          const val = d[headers[1]];\n          return (val >= 0 && val <= 1) || (val > 1 && val <= 100 && Number.isInteger(val));\n        });\n\n        // Add label field\n        const dataWithPercentages = data.map(d => {\n          const value = d[headers[1]];\n          const label = isPercentage\n            ? (value <= 1 ? (value * 100).toFixed(1) : value.toFixed(1)) + '%'\n            : value.toLocaleString();\n\n          return {\n            [headers[0]]: d[headers[0]],\n            [headers[1]]: value,\n            percentage: ((value / total) * 100).toFixed(1) + '%',\n            label: label\n          };\n        });\n\n        const numBars = data.length;\n        const colorRange = [];\n        for (let i = 0; i < numBars; i++) {\n          const lighten = 1 - (i / (numBars - 1)) * 0.6; // up to 60% lighter\n          const baseR = 0, baseG = 120, baseB = 212;\n          const r = Math.round(baseR + (255 - baseR) * (1 - lighten));\n          const g = Math.round(baseG + (255 - baseG) * (1 - lighten));\n          const b = Math.round(baseB + (255 - baseB) * (1 - lighten));\n          colorRange.push(`rgb(${r}, ${g}, ${b})`);\n        }\n\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n          description: \"Centered funnel chart\",\n          background: \"white\",\n          width: 400,\n          height: 250,\n          config: {\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\"\n          },\n\n          data: { values: dataWithPercentages },\n\n          encoding: {\n            y: {\n              type: \"nominal\",\n              field: headers[0],\n              sort: \"-x\", // descending by value\n              axis: {\n                labelFontSize: 11,\n                labelColor: \"#323130\",\n                title: null,\n                labelPadding: 5\n              }\n            }\n          },\n\n          layer: [\n            {\n              mark: {\n                type: \"bar\",\n                tooltip: true,\n                orient: \"horizontal\"\n              },\n              encoding: {\n                x: {\n                  field: headers[1],\n                  type: \"quantitative\",\n                  stack: \"center\", \n                  axis: null\n                },\n                color: {\n                  field: headers[0],\n                  type: \"nominal\",\n                  legend: null,\n                  scale: { range: colorRange }\n                },\n                tooltip: [\n                  { field: headers[0], type: \"nominal\", title: \"Stage\" },\n                  { field: headers[1], type: \"quantitative\", title: \"Count\", format: \",.0f\" },\n                  { field: \"percentage\", type: \"nominal\", title: \"Percentage\" }\n                ]\n              }\n            },\n            {\n              mark: {\n                type: \"text\",\n                align: \"left\",\n                dx: 5,\n                fontSize: 12,\n                fontWeight: \"nominal\",\n                color: \"#FF6347\"\n              },\n              encoding: {\n                text: { field: \"label\", type: \"nominal\" },\n                x: {\n                  field: headers[1],\n                  type: \"quantitative\",\n                  stack: \"center\",\n                  // Position text in the middle of the bar\n                  aggregate: null\n                },\n                y: { field: headers[0], type: \"nominal\" }\n              }\n            }\n          ]\n        };\n      }\n\n      else if (chartType === \"fan\") {\n        if (headers.length !== 5 && headers.length !== 7) {\n          console.warn(\"Fan chart requires exactly 5 or 7 columns of data.\");\n          return;\n        }\n        const fanData = data.map(row => {\n          const obj = { [headers[0]]: row[headers[0]] }; // X-axis value\n\n          // Columns common to both 5 and 7-column layouts\n          obj.actual   = row[headers[1]] ? parseFloat(row[headers[1]]) : null;\n          obj.p50      = row[headers[2]] ? parseFloat(row[headers[2]]) : null;\n          obj.p75_low  = row[headers[3]] ? parseFloat(row[headers[3]]) : null;\n          obj.p75_high = row[headers[4]] ? parseFloat(row[headers[4]]) : null;\n\n          // Add p95 interval data only if it's a 7-column layout\n          if (headers.length === 7) {\n            obj.p95_low  = row[headers[5]] ? parseFloat(row[headers[5]]) : null;\n            obj.p95_high = row[headers[6]] ? parseFloat(row[headers[6]]) : null;\n          } else {\n            // For the 5-column case, ensure p95 values are null\n            obj.p95_low  = null;\n            obj.p95_high = null;\n          }\n          return obj;\n        });\n\n        // Find the split point between actual and forecast data\n        let splitYear = null;\n        for (let i = 0; i < fanData.length; i++) {\n          if ((fanData[i].p75_low != null) || (fanData[i].p95_low != null)) {\n            splitYear = fanData[i][headers[0]];\n            break;\n          }\n        }\n\n        // Detect x-axis type (temporal or ordinal)\n        const isTemporalX = headers[0].toLowerCase().includes('date') ||\n                            headers[0].toLowerCase().includes('time');\n\n        const xEncoding = {\n          field: headers[0],\n          type: isTemporalX ? \"temporal\" : \"ordinal\",\n          title: headers[0],\n          sort: fanData.map(d => d[headers[0]]), // Preserve input order\n          axis: {\n            labelAngle: isTemporalX ? -45 : 0,\n            labelFontSize: 11,\n            titleFontSize: 12,\n            format: \"d\", // No commas or decimals for non-temporal data\n            values: fanData.map(d => d[headers[0]]) // Show exact tick labels\n          }\n        };\n\n        const yAxisConfig = {\n          title: \"Value\",\n          labelFontSize: 11,\n          titleFontSize: 12,\n          grid: true,\n          gridColor: \"#f3f2f1\"\n        };\n\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n          description: \"Fan chart with actual and forecast data\",\n          width: 700,\n          height: 400,\n          background: \"white\",\n          data: { values: fanData },\n          encoding: { x: xEncoding },\n          layer: [\n            ...(fanData.some(d => d.p95_low != null) ? [{\n              transform: [{ filter: `datum['${headers[0]}'] >= ${splitYear}` }],\n              mark: { type: \"area\", opacity: 0.2, color: \"steelblue\" },\n              encoding: {\n                y: { field: \"p95_high\", type: \"quantitative\", axis: yAxisConfig },\n                y2: { field: \"p95_low\", type: \"quantitative\" }\n              }\n            }] : []),\n            {\n              transform: [{ filter: `datum['${headers[0]}'] >= ${splitYear}` }],\n              mark: { type: \"area\", opacity: 0.35, color: \"steelblue\" },\n              encoding: {\n                y: { field: \"p75_high\", type: \"quantitative\", axis: yAxisConfig },\n                y2: { field: \"p75_low\", type: \"quantitative\" }\n              }\n            },\n            {\n              transform: [{ filter: `datum['${headers[0]}'] >= ${splitYear}` }],\n              mark: { type: \"line\", color: \"steelblue\", strokeDash: [4, 2], strokeWidth: 2 },\n              encoding: {\n                y: { field: \"p50\", type: \"quantitative\", axis: yAxisConfig }\n              }\n            },\n            {\n              transform: [{ filter: splitYear ? `datum['${headers[0]}'] <= ${splitYear}` : \"datum.p75_low == null\" }],\n              mark: { type: \"line\", color: \"steelblue\", strokeWidth: 2 },\n              encoding: {\n                y: { field: \"actual\", type: \"quantitative\", axis: yAxisConfig }\n              }\n            },\n            {\n              transform: [{ filter: splitYear ? `datum['${headers[0]}'] <= ${splitYear}` : \"datum.p75_low == null\" }],\n              mark: { type: \"circle\", color: \"steelblue\", size: 50 },\n              encoding: {\n                y: { field: \"actual\", type: \"quantitative\" },\n                tooltip: [\n                  { field: headers[0], title: headers[0] },\n                  { field: \"actual\", title: \"Actual Value\", format: \".1f\" }\n                ]\n              }\n            }\n          ],\n          config: {\n            font: \"Segoe UI\",\n            axis: { labelColor: \"#605e5c\", titleColor: \"#323130\" }\n          }\n        };\n      }\n\n      else if (chartType === \"circlepacking\") {\n        // Process hierarchical data for circle packing\n        const nodes = new Map();\n\n        data.forEach((row, i) => {\n          const parent = row[headers[0]] || \"\";\n          const child = row[headers[1]] || `node_${i}`;\n          const size = headers.length >= 3 ? (parseFloat(row[headers[2]]) || 1) : 1;\n          \n          // Add parent node if it doesn't exist and is not empty\n          if (parent && !nodes.has(parent)) {\n            nodes.set(parent, {\n              id: parent,\n              parent: \"\",\n              name: parent,\n              size: 0\n            });\n          }\n          \n          // Add child node\n          if (!nodes.has(child)) {\n            nodes.set(child, {\n              id: child,\n              parent: parent,\n              name: child,\n              size: size\n            });\n          } else {\n            const existingNode = nodes.get(child);\n            existingNode.parent = parent;\n            existingNode.size = size;\n          }\n        });\n        \n        // Convert Map to array\n        const hierarchicalData = Array.from(nodes.values());\n        \n        // Find root nodes (nodes with no parent or parent not in dataset)\n        const allIds = new Set(hierarchicalData.map(d => d.id));\n        hierarchicalData.forEach(node => {\n          if (node.parent && !allIds.has(node.parent)) {\n            node.parent = \"\";\n          }\n        });\n\n        // Calculate chart size based on data complexity\n        const nodeCount = hierarchicalData.length;\n        const chartSize = Math.max(500, Math.min(700, nodeCount * 20 + 300));\n\n        // Circle packing specification\n        spec = {\n          \"$schema\": \"https://vega.github.io/schema/vega/v6.json\",\n          \"description\": \"Circle packing chart from Excel selection\",\n          \"width\": chartSize,\n          \"height\": chartSize,\n          \"padding\": 5,\n          \"autosize\": \"none\",\n          \"background\": \"white\",\n          \n          \"data\": [\n            {\n              \"name\": \"tree\",\n              \"values\": hierarchicalData,\n              \"transform\": [\n                {\n                  \"type\": \"stratify\",\n                  \"key\": \"id\",\n                  \"parentKey\": \"parent\"\n                },\n                {\n                  \"type\": \"pack\",\n                  \"field\": \"size\",\n                  \"sort\": {\"field\": \"value\"},\n                  \"size\": [{\"signal\": \"width\"}, {\"signal\": \"height\"}]\n                }\n              ]\n            }\n          ],\n\n          \"scales\": [\n            {\n              \"name\": \"color\",\n              \"type\": \"ordinal\",\n              \"domain\": {\"data\": \"tree\", \"field\": \"depth\"},\n              \"range\": {\"scheme\": \"category20\"}\n            }\n          ],\n\n          \"marks\": [\n            {\n              \"type\": \"symbol\",\n              \"from\": {\"data\": \"tree\"},\n              \"encode\": {\n                \"enter\": {\n                  \"shape\": {\"value\": \"circle\"},\n                  \"fill\": {\"scale\": \"color\", \"field\": \"depth\"},\n                  \"tooltip\": {\n                    \"signal\": \"datum.name + (datum.size ? ', ' + format(datum.size, ',.0f') : '')\"\n                  }\n                },\n                \"update\": {\n                  \"x\": {\"field\": \"x\"},\n                  \"y\": {\"field\": \"y\"},\n                  \"size\": {\"signal\": \"4 * datum.r * datum.r\"},\n                  \"stroke\": {\"value\": \"white\"},\n                  \"strokeWidth\": {\"value\": 0.5},\n                  \"opacity\": {\"value\": 0.8}\n                },\n                \"hover\": {\n                  \"stroke\": {\"value\": \"#0078d4\"},\n                  \"strokeWidth\": {\"value\": 2},\n                  \"opacity\": {\"value\": 1}\n                }\n              }\n            },\n            {\n              \"type\": \"text\",\n              \"from\": {\"data\": \"tree\"},\n              \"encode\": {\n                \"enter\": {\n                  \"align\": {\"value\": \"center\"},\n                  \"baseline\": {\"value\": \"middle\"},\n                  \"fill\": {\"value\": \"#323130\"},\n                  \"font\": {\"value\": \"Segoe UI\"},\n                  \"fontWeight\": {\"value\": \"500\"}\n                },\n                \"update\": {\n                  \"x\": {\"field\": \"x\"},\n                  \"y\": {\"field\": \"y\"},\n                  \"text\": {\"signal\": \"datum.r > 15 ? datum.name : ''\"},\n                  \"fontSize\": {\"signal\": \"datum.r > 30 ? 12 : datum.r > 20 ? 10 : 8\"},\n                  \"opacity\": {\"signal\": \"datum.r > 15 ? 1 : 0\"}\n                }\n              }\n            }\n          ]\n        };\n      }\n\n      // Render hidden chart\n      const hiddenDiv = document.createElement(\"div\");\n      hiddenDiv.style.display = \"none\";\n      document.body.appendChild(hiddenDiv);\n\n      const result = await vegaEmbed(hiddenDiv, spec, { actions: false });\n      const view = result.view;\n\n      // Export chart -> PNG\n      const pngUrl = await view.toImageURL(\"png\");\n      const response = await fetch(pngUrl);\n      const blob = await response.blob();\n\n      const reader = new FileReader();\n      reader.onloadend = async () => {\n      const base64data = reader.result.split(\",\")[1];\n\n      // Insert picture above selection\n      const image = sheet.shapes.addImage(base64data);\n      image.left = range.left;\n      image.top = range.top;\n      image.lockAspectRatio = true; // keep proportions\n\n      await context.sync();\n      };\n\n      reader.readAsDataURL(blob);\n      \n      // Clean up hidden div\n      document.body.removeChild(hiddenDiv);\n    });\n  } catch (error) {\n    console.error(error);\n  }\n}","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.js\", import.meta.url);\n// Module\nvar code = \"<!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Vega Chart</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/vega@6\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/vega-lite@6\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/vega-embed@6\\\"><\" + \"/script> <\" + \"script type=\\\"module\\\" src=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\"><\" + \"/script> <style>body{font-family:-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif;margin:20px;line-height:1.4}.chart-selector{margin-bottom:15px}label{display:block;margin-bottom:5px;font-weight:600;color:#323130}.custom-dropdown{position:relative;width:100%}.dropdown-header{width:100%;padding:8px 12px;border:1px solid #8a8886;border-radius:4px;font-size:14px;background:#fff;cursor:pointer;display:flex;justify-content:space-between;align-items:center;box-sizing:border-box}.dropdown-header:hover{border-color:#0078d4}.dropdown-arrow{font-size:12px;transition:transform .2s}.dropdown-arrow.expanded{transform:rotate(180deg)}.dropdown-list{position:absolute;top:100%;left:0;right:0;background:#fff;border:1px solid #8a8886;border-top:none;border-radius:0 0 4px 4px;max-height:300px;overflow-y:auto;z-index:1000;display:none;box-shadow:0 2px 8px rgba(0,0,0,.1)}.dropdown-list.open{display:block}.folder-item{padding:8px 12px;cursor:pointer;font-weight:600;color:#0078d4;background:#f8f9fa;border-bottom:1px solid #e1e4e8;display:flex;justify-content:space-between;align-items:center}.folder-item:hover{background:#e3f2fd}.folder-arrow{font-size:10px;transition:transform .2s}.folder-arrow.expanded{transform:rotate(90deg)}.chart-item{padding:8px 12px 8px 32px;cursor:pointer;color:#323130;border-bottom:1px solid #f0f0f0;display:none}.chart-item.visible{display:block}.chart-item:hover{background:#f5f5f5}.chart-item:last-child{border-bottom:none}button{background-color:#0078d4;color:#fff;border:none;padding:10px 20px;border-radius:4px;font-size:14px;cursor:pointer;width:100%;margin-bottom:15px}button:hover{background-color:#106ebe}.data-requirements{background-color:#f8f9fa;border:1px solid #e1e4e8;border-radius:6px;padding:12px;margin-top:10px;font-size:13px}.data-requirements h4{margin:0 0 8px 0;color:#24292f;font-size:14px}.data-requirements ul{margin:0;padding-left:18px}.data-requirements li{margin-bottom:4px}.hidden{display:none}</style> </head> <body> <h2></h2> <div class=\\\"chart-selector\\\"> <label for=\\\"chartDropdown\\\">Select Chart Type:</label> <div class=\\\"custom-dropdown\\\" id=\\\"chartDropdown\\\"> <div class=\\\"dropdown-header\\\" id=\\\"dropdownHeader\\\"> <span id=\\\"selectedText\\\">Choose a chart...</span> <span class=\\\"dropdown-arrow\\\">▼</span> </div> <div class=\\\"dropdown-list\\\" id=\\\"dropdownList\\\"> <div class=\\\"folder-item\\\" data-folder=\\\"standard\\\"> <span>Standard</span> <span class=\\\"folder-arrow\\\">►</span> </div> <div class=\\\"chart-item\\\" data-chart=\\\"column\\\" data-folder=\\\"standard\\\">Column</div> <div class=\\\"chart-item\\\" data-chart=\\\"bar\\\" data-folder=\\\"standard\\\">Bar</div> <div class=\\\"chart-item\\\" data-chart=\\\"line\\\" data-folder=\\\"standard\\\">Line</div> <div class=\\\"chart-item\\\" data-chart=\\\"area\\\" data-folder=\\\"standard\\\">Area</div> <div class=\\\"chart-item\\\" data-chart=\\\"point\\\" data-folder=\\\"standard\\\">Scatter</div> <div class=\\\"chart-item\\\" data-chart=\\\"bubble\\\" data-folder=\\\"standard\\\">Bubble</div> <div class=\\\"chart-item\\\" data-chart=\\\"pie\\\" data-folder=\\\"standard\\\">Pie</div> <div class=\\\"chart-item\\\" data-chart=\\\"donut\\\" data-folder=\\\"standard\\\">Donut</div> <div class=\\\"chart-item\\\" data-chart=\\\"box\\\" data-folder=\\\"standard\\\">Box</div> <div class=\\\"chart-item\\\" data-chart=\\\"radar\\\" data-folder=\\\"standard\\\">Radar</div> <div class=\\\"chart-item\\\" data-chart=\\\"map\\\" data-folder=\\\"standard\\\">Map</div> <div class=\\\"chart-item\\\" data-chart=\\\"contour\\\" data-folder=\\\"standard\\\">Contour</div> <div class=\\\"chart-item\\\" data-chart=\\\"histogram\\\" data-folder=\\\"standard\\\">Histogram</div> <div class=\\\"chart-item\\\" data-chart=\\\"funnel\\\" data-folder=\\\"standard\\\">Funnel</div> <div class=\\\"chart-item\\\" data-chart=\\\"candlestick\\\" data-folder=\\\"standard\\\">Candlestick</div> <div class=\\\"chart-item\\\" data-chart=\\\"treemap\\\" data-folder=\\\"standard\\\">Treemap</div> <div class=\\\"chart-item\\\" data-chart=\\\"sunburst\\\" data-folder=\\\"standard\\\">Sunburst</div> <div class=\\\"chart-item\\\" data-chart=\\\"waterfall\\\" data-folder=\\\"standard\\\">Waterfall</div> <div class=\\\"folder-item\\\" data-folder=\\\"special\\\"> <span>Special</span> <span class=\\\"folder-arrow\\\">►</span> </div> <div class=\\\"chart-item\\\" data-chart=\\\"step\\\" data-folder=\\\"special\\\">Step</div> <div class=\\\"chart-item\\\" data-chart=\\\"butterfly\\\" data-folder=\\\"special\\\">Butterfly</div> <div class=\\\"chart-item\\\" data-chart=\\\"beeswarm\\\" data-folder=\\\"special\\\">Beeswarm</div> <div class=\\\"chart-item\\\" data-chart=\\\"radial\\\" data-folder=\\\"special\\\">Radial</div> <div class=\\\"chart-item\\\" data-chart=\\\"gauge\\\" data-folder=\\\"special\\\">Gauge</div> <div class=\\\"chart-item\\\" data-chart=\\\"ring\\\" data-folder=\\\"special\\\">Ring</div> <div class=\\\"chart-item\\\" data-chart=\\\"tree\\\" data-folder=\\\"special\\\">Tree</div> <div class=\\\"chart-item\\\" data-chart=\\\"arc\\\" data-folder=\\\"special\\\">Arc</div> <div class=\\\"chart-item\\\" data-chart=\\\"chord\\\" data-folder=\\\"special\\\">Chord</div> <div class=\\\"chart-item\\\" data-chart=\\\"circlepacking\\\" data-folder=\\\"special\\\">Circle Packing</div> <div class=\\\"chart-item\\\" data-chart=\\\"wordcloud\\\" data-folder=\\\"special\\\">Word Cloud</div> <div class=\\\"chart-item\\\" data-chart=\\\"gantt\\\" data-folder=\\\"special\\\">Gantt</div> <div class=\\\"chart-item\\\" data-chart=\\\"strip\\\" data-folder=\\\"special\\\">Strip</div> <div class=\\\"chart-item\\\" data-chart=\\\"density\\\" data-folder=\\\"special\\\">Density</div> <div class=\\\"chart-item\\\" data-chart=\\\"heatmap\\\" data-folder=\\\"special\\\">Heatmap</div> <div class=\\\"chart-item\\\" data-chart=\\\"bullet\\\" data-folder=\\\"special\\\">Bullet</div> <div class=\\\"chart-item\\\" data-chart=\\\"horizon\\\" data-folder=\\\"special\\\">Horizon</div> <div class=\\\"chart-item\\\" data-chart=\\\"dumbbell\\\" data-folder=\\\"special\\\">Dumbbell</div> <div class=\\\"chart-item\\\" data-chart=\\\"slope\\\" data-folder=\\\"special\\\">Slope</div> <div class=\\\"chart-item\\\" data-chart=\\\"mekko\\\" data-folder=\\\"special\\\">Mekko</div> <div class=\\\"chart-item\\\" data-chart=\\\"marimekko\\\" data-folder=\\\"special\\\">Marimekko</div> <div class=\\\"chart-item\\\" data-chart=\\\"bump\\\" data-folder=\\\"special\\\">Bump</div> <div class=\\\"chart-item\\\" data-chart=\\\"fan\\\" data-folder=\\\"special\\\">Fan</div> <div class=\\\"chart-item\\\" data-chart=\\\"waffle\\\" data-folder=\\\"special\\\">Waffle</div> <div class=\\\"chart-item\\\" data-chart=\\\"lollipop\\\" data-folder=\\\"special\\\">Lollipop</div> <div class=\\\"chart-item\\\" data-chart=\\\"violin\\\" data-folder=\\\"special\\\">Violin</div> <div class=\\\"chart-item\\\" data-chart=\\\"sankey\\\" data-folder=\\\"special\\\">Sankey</div> <div class=\\\"chart-item\\\" data-chart=\\\"streamgraph\\\" data-folder=\\\"special\\\">Streamgraph</div> <div class=\\\"chart-item\\\" data-chart=\\\"ribbon\\\" data-folder=\\\"special\\\">Ribbon</div> <div class=\\\"chart-item\\\" data-chart=\\\"ridgeline\\\" data-folder=\\\"special\\\">Ridgeline</div> <div class=\\\"chart-item\\\" data-chart=\\\"deviation\\\" data-folder=\\\"special\\\">Deviation</div> <div class=\\\"chart-item\\\" data-chart=\\\"variance\\\" data-folder=\\\"special\\\">Variance</div> </div> </div> </div> <button id=\\\"drawChart\\\">Generate Chart</button> <select id=\\\"chartType\\\" style=\\\"display:none\\\"> <option value=\\\"\\\">Choose a chart...</option> <option value=\\\"column\\\">Column</option> <option value=\\\"bar\\\">Bar</option> <option value=\\\"butterfly\\\">Butterfly</option> <option value=\\\"beeswarm\\\">Beeswarm</option> <option value=\\\"line\\\">Line</option> <option value=\\\"step\\\">Step</option> <option value=\\\"area\\\">Area</option> <option value=\\\"point\\\">Scatter</option> <option value=\\\"bubble\\\">Bubble</option> <option value=\\\"gauge\\\">Gauge</option> <option value=\\\"pie\\\">Pie</option> <option value=\\\"donut\\\">Donut</option> <option value=\\\"ring\\\">Ring</option> <option value=\\\"box\\\">Box</option> <option value=\\\"histogram\\\">Histogram</option> <option value=\\\"density\\\">Density</option> <option value=\\\"funnel\\\">Funnel</option> <option value=\\\"candlestick\\\">Candlestick</option> <option value=\\\"map\\\">Map</option> <option value=\\\"contour\\\">Contour</option> <option value=\\\"radar\\\">Radar</option> <option value=\\\"heatmap\\\">Heatmap</option> <option value=\\\"radial\\\">Radial</option> <option value=\\\"arc\\\">Arc</option> <option value=\\\"chord\\\">Chord</option> <option value=\\\"circlepack\\\">Circle Packing</option> <option value=\\\"tree\\\">Tree</option> <option value=\\\"wordcloud\\\">Word Cloud</option> <option value=\\\"gantt\\\">Gantt</option> <option value=\\\"strip\\\">Strip</option> <option value=\\\"treemap\\\">Treemap</option> <option value=\\\"sunburst\\\">Sunburst</option> <option value=\\\"bullet\\\">Bullet</option> <option value=\\\"horizon\\\">Horizon</option> <option value=\\\"dumbbell\\\">Dumbbell</option> <option value=\\\"slope\\\">Slope</option> <option value=\\\"mekko\\\">Mekko</option> <option value=\\\"marimekko\\\">Marimekko</option> <option value=\\\"bump\\\">Bump</option> <option value=\\\"fan\\\">Fan</option> <option value=\\\"waffle\\\">Waffle</option> <option value=\\\"lollipop\\\">Lollipop</option> <option value=\\\"violin\\\">Violin</option> <option value=\\\"sankey\\\">Sankey</option> <option value=\\\"streamgraph\\\">Streamgraph</option> <option value=\\\"ribbon\\\">Ribbon</option> <option value=\\\"ridgeline\\\">Ridgeline</option> <option value=\\\"deviation\\\">Deviation</option> <option value=\\\"variance\\\">Variance</option> <option value=\\\"waterfall\\\">Waterfall</option> </select> <div id=\\\"req-point\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> X-axis values (numbers)</li> <li><strong>Column 2:</strong> Y-axis values (numbers)</li> <li><strong>Column 3 (optional):</strong> Color grouping (categories for different colors)</li> <li><strong>Column 4 (optional):</strong> Shape grouping (categories for different shapes)</li> </ul> </div> <div id=\\\"req-bubble\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> X-axis values (numbers)</li> <li><strong>Column 2:</strong> Y-axis values (numbers)</li> <li><strong>Column 3:</strong> Bubble size values (numbers)</li> <li><strong>Column 4 (optional):</strong> Color grouping (categories for different colors)</li> </ul> </div> <div id=\\\"req-column\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Categories or X-axis values</li> <li><strong>Column 2:</strong> Values (numbers)</li> <li><strong>Column 3 (optional):</strong> Grouping variable for stacked and/or grouped columns</li> </ul> </div> <div id=\\\"req-bar\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Categories or Y-axis values</li> <li><strong>Column 2:</strong> Values (numbers)</li> <li><strong>Column 3 (optional):</strong> Grouping variable for stacked and/or grouped bars</li> </ul> </div> <div id=\\\"req-funnel\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Stage names</li> <li><strong>Column 2:</strong> Values</li> </ul> </div> <div id=\\\"req-butterfly\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category names (e.g., age groups, regions, products)</li> <li><strong>Column 2:</strong> Left side values (will be displayed on left)</li> <li><strong>Column 3:</strong> Right side values (will be displayed on right)</li> </ul> </div> <div id=\\\"req-beeswarm\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category/Group names</li> <li><strong>Column 2:</strong> Numeric Values</li> </ul> </div> <div id=\\\"req-line\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> X-axis values (often dates/time or categories)</li> <li><strong>Columns 2-n:</strong> Value series</li> </ul> </div> <div id=\\\"req-step\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Date/Time values (temporal data)</li> <li><strong>Column 2:</strong> Quantitative values (e.g., price, stock value)</li> </ul> </div> <div id=\\\"req-area\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> X-axis values (often dates/time)</li> <li><strong>Column 2:</strong> Y-axis values (numbers)</li> <li><strong>Column 3 (optional):</strong> Series grouping for multiple areas</li> </ul> </div> <div id=\\\"req-horizon\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> X-axis values (time periods, dates, or sequence numbers)</li> <li><strong>Column 2:</strong> Y-axis values (numeric data to visualize)</li> </ul> </div> <div id=\\\"req-dumbbell\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Categories</li> <li><strong>Column 2:</strong> First measure (number)</li> <li><strong>Column 3:</strong> Second measure (number)</li> </ul> </div> <div id=\\\"req-slope\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Time periods (e.g., \\\"2023\\\", \\\"2024\\\" or \\\"Q1\\\", \\\"Q4\\\")</li> <li><strong>Column 2:</strong> Categories/Series (e.g., \\\"Product A\\\", \\\"Region 1\\\")</li> <li><strong>Column 3:</strong> Values (numbers)</li> </ul> </div> <div id=\\\"req-radar\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Series/Category name (e.g., \\\"Product A\\\", \\\"Team 1\\\")</li> <li><strong>Columns 2-n:</strong> Dimension values (e.g., \\\"Speed\\\", \\\"Quality\\\", \\\"Cost\\\")</li> </ul> </div> <div id=\\\"req-box\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Categories/Groups (e.g., \\\"Species\\\", \\\"Department\\\", \\\"Region\\\")</li> <li><strong>Column 2:</strong> Values for distribution analysis (numbers)</li> </ul> </div> <div id=\\\"req-gauge\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Current value (numbers)</li> <li><strong>Column 2:</strong> Maximum value (numbers)</li> </ul> </div> <div id=\\\"req-pie\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category names</li> <li><strong>Column 2:</strong> Values (numbers for slice sizes)</li> </ul> </div> <div id=\\\"req-donut\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category names</li> <li><strong>Column 2:</strong> Values (numbers for slice sizes)</li> </ul> </div> <div id=\\\"req-ring\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category names (e.g., \\\"Online Sales\\\", \\\"Retail Sales\\\", \\\"Partner Sales\\\")</li> <li><strong>Column 2:</strong> Values as percentages (0-100, e.g., 75, 60, 45)</li> </ul> </div> <div id=\\\"req-histogram\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Continuous numeric values to create distribution bins</li> </ul> </div> <div id=\\\"req-density\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Numeric values</li> </ul> </div> <div id=\\\"req-map\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Country ISO (e.g., \\\"USA\\\", \\\"CAN\\\", \\\"MEX\\\")</li> <li><strong>Column 2:</strong> Values to visualize (numbers for color intensity)</li> </ul> </div> <div id=\\\"req-contour\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> X-axis values</li> <li><strong>Column 2:</strong> Y-axis values</li> <li><strong>Column 3 (Optional):</strong> Categories/Groups</li> </ul> </div> <div id=\\\"req-candlestick\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Date/Time (Excel date values or date strings)</li> <li><strong>Column 2:</strong> Open price (numbers)</li> <li><strong>Column 3:</strong> High price (numbers)</li> <li><strong>Column 4:</strong> Low price (numbers)</li> <li><strong>Column 5:</strong> Close price (numbers)</li> </ul> </div> <div id=\\\"req-radial\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category names</li> <li><strong>Column 2:</strong> Values (determines both angle and radius)</li> </ul> </div> <div id=\\\"req-arc\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Source node/entity (e.g., \\\"Person A\\\", \\\"Department 1\\\")</li> <li><strong>Column 2:</strong> Target node/entity (e.g., \\\"Person B\\\", \\\"Department 2\\\")</li> <li><strong>Column 3:</strong> Connection strength/weight (numbers, optional)</li> </ul> </div> <div id=\\\"req-chord\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Source category</li> <li><strong>Column 2:</strong> Destination category</li> <li><strong>Column 3:</strong> Flow values (numbers)</li> </ul> </div> <div id=\\\"req-circlepack\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li>Column 1: Parent category (text)</li> <li>Column 2: Child category (text)</li> <li>Column 3 (optional): Size value</li> </ul> </div> <div id=\\\"req-tree\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Parent (parent node name, empty for root nodes)</li> <li><strong>Column 2:</strong> Child (child node name)</li> <li><strong>Column 3 (optional):</strong> Value (affects node size, defaults to 1)</li> </ul> </div> <div id=\\\"req-strip\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Categories</li> <li><strong>Column 2:</strong> Values</li> <li><strong>Column 3 (optional):</strong> Color grouping (e.g., Brand, Region, Type)</li> </ul> </div> <div id=\\\"req-treemap\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Parent/Group hierarchy (e.g., Region, Division)</li> <li><strong>Column 2:</strong> Category/Item names (e.g., Product, Department, File)</li> <li><strong>Column 3:</strong> Values/Sizes (e.g., Sales, Budget, File Size)</li> </ul> </div> <div id=\\\"req-sunburst\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Parent (parent category, empty for root level)</li> <li><strong>Column 2:</strong> Child (child category or item name)</li> <li><strong>Column 3 (optional):</strong> Value (size of the segment, defaults to 1)</li> </ul> </div> <div id=\\\"req-wordcloud\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Text data (sentences, phrases, or words)</li> </ul> </div> <div id=\\\"req-gantt\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Task ID (number, empty for root tasks)</li> <li><strong>Column 2:</strong> Sub Task ID (number)</li> <li><strong>Column 3:</strong> Sub Task Name (text)</li> <li><strong>Column 4:</strong> Start Date (date)</li> <li><strong>Column 5:</strong> End Date (date)</li> <li><strong>Column 6:</strong> Progress (0-1 decimal or percentage)</li> </ul> </div> <div id=\\\"req-lollipop\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category names (e.g., \\\"Products\\\", \\\"Regions\\\", \\\"Teams\\\")</li> <li><strong>Column 2:</strong> Values (numbers for stick length and circle size)</li> </ul> </div> <div id=\\\"req-waffle\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category names (e.g., \\\"Product A\\\", \\\"Product B\\\")</li> <li><strong>Column 2:</strong> Values (numbers that will be converted to percentages)</li> </ul> </div> <div id=\\\"req-bullet\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Title/Metric name (e.g., \\\"Revenue\\\", \\\"Profit\\\")</li> <li><strong>Column 2:</strong> Poor range max</li> <li><strong>Column 3:</strong> Satisfactory range max</li> <li><strong>Column 4:</strong> Good range max</li> <li><strong>Column 5:</strong> Actual value</li> <li><strong>Column 6:</strong> Forecast value (optional)</li> <li><strong>Column 7:</strong> Target value (marker)</li> </ul> </div> <div id=\\\"req-mekko\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category (text)</li> <li><strong>Column 2:</strong> Subcategory (text)</li> <li><strong>Column 3:</strong> Value (number)</li> </ul> </div> <div id=\\\"req-marimekko\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category (text)</li> <li><strong>Column 2:</strong> Subcategory (text)</li> <li><strong>Column 3:</strong> Value (number)</li> </ul> </div> <div id=\\\"req-heatmap\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Y-axis categories (e.g., \\\"Months\\\", \\\"Products\\\", \\\"Regions\\\")</li> <li><strong>Column 2:</strong> X-axis categories (e.g., \\\"Days\\\", \\\"Quarters\\\", \\\"Sales Reps\\\")</li> <li><strong>Column 3:</strong> Values (numbers for color intensity)</li> </ul> </div> <div id=\\\"req-bump\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Time periods</li> <li><strong>Column 2:</strong> Categories (e.g., \\\"Team A\\\", \\\"Team B\\\")</li> <li><strong>Column 3:</strong> Rank values (1, 2, 3, etc.)</li> </ul> </div> <div id=\\\"req-fan\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Time periods</li> <li><strong>Column 2:</strong> Actual value</li> <li><strong>Column 3:</strong> Forecast Value</li> <li><strong>Column 4:</strong> Forecast Low (75% confidence lower bound)</li> <li><strong>Column 5:</strong> Forecast High (75% confidence upper bound)</li> <li><strong>Column 6 (optional):</strong> Forecast Low (95% confidence lower bound)</li> <li><strong>Column 7 (optional):</strong> Forecast High (95% confidence upper bound)</li> </ul> </div> <div id=\\\"req-violin\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Categories/Groups (e.g., \\\"Country A\\\", \\\"Product Line\\\", \\\"Department\\\")</li> <li><strong>Column 2:</strong> Continuous values (numbers for distribution analysis)</li> </ul> </div> <div id=\\\"req-sankey\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Source Category</li> <li><strong>Column 2:</strong> Destination Category</li> <li><strong>Column 3:</strong> Values (numbers)</li> </ul> </div> <div id=\\\"req-streamgraph\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Time/Date values (dates, Excel date serials, or time periods)</li> <li><strong>Column 2:</strong> Series/Categories (e.g., \\\"Product Lines\\\", \\\"Industries\\\", \\\"Regions\\\")</li> <li><strong>Column 3:</strong> Values (numbers for each series at each time point)</li> </ul> </div> <div id=\\\"req-ribbon\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Time periods (dates/periods)</li> <li><strong>Column 2:</strong> Categories (different series)</li> <li><strong>Column 3:</strong> Values (numbers)</li> </ul> </div> <div id=\\\"req-ridgeline\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Time periods/X-axis values</li> <li><strong>Column 2:</strong> Categories (creates separate ridges)</li> <li><strong>Column 3:</strong> Values (creates distribution shape)</li> </ul> </div> <div id=\\\"req-deviation\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Date/Period</li> <li><strong>Column 2:</strong> Actual values</li> <li><strong>Column 3:</strong> Target/Baseline values</li> </ul> </div> <div id=\\\"req-variance\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Business Unit/Category names (e.g., \\\"Channel Partners\\\", \\\"Enterprise\\\")</li> <li><strong>Column 2:</strong> First metric values (e.g., Actual, Sales, Results)</li> <li><strong>Column 3:</strong> Second metric values (e.g., Forecast, Budget, Target)</li> </ul> </div> <div id=\\\"req-waterfall\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Categories/Labels (e.g., \\\"Begin\\\", \\\"Q1\\\", \\\"Q2\\\", \\\"End\\\")</li> <li><strong>Column 2:</strong> Amount values (positive/negative numbers), 0 for total, except for beginning total</li> <li><strong>Column 3:</strong> Type (total or not)</li> </ul> </div> <div id=\\\"chart\\\"></div> <\" + \"script>document.addEventListener(\\\"DOMContentLoaded\\\",function(){const e=document.getElementById(\\\"dropdownHeader\\\"),t=document.getElementById(\\\"dropdownList\\\"),o=e.querySelector(\\\".dropdown-arrow\\\"),d=document.getElementById(\\\"selectedText\\\"),c=document.querySelectorAll(\\\".data-requirements\\\"),n=document.getElementById(\\\"chartType\\\");let s=!1;c.forEach(e=>e.classList.add(\\\"hidden\\\")),e.addEventListener(\\\"click\\\",function(){s=!s,t.classList.toggle(\\\"open\\\",s),o.classList.toggle(\\\"expanded\\\",s)}),document.addEventListener(\\\"click\\\",function(e){e.target.closest(\\\".custom-dropdown\\\")||(s=!1,t.classList.remove(\\\"open\\\"),o.classList.remove(\\\"expanded\\\"))}),document.querySelectorAll(\\\".folder-item\\\").forEach(e=>{e.addEventListener(\\\"click\\\",function(e){e.stopPropagation();const t=this.dataset.folder,o=this.querySelector(\\\".folder-arrow\\\"),d=document.querySelectorAll(`[data-folder=\\\"${t}\\\"].chart-item`),c=o.classList.contains(\\\"expanded\\\");o.classList.toggle(\\\"expanded\\\",!c),d.forEach(e=>{e.classList.toggle(\\\"visible\\\",!c)})})}),document.querySelectorAll(\\\".chart-item\\\").forEach(e=>{e.addEventListener(\\\"click\\\",function(){const e=this.dataset.chart,r=this.textContent;d.textContent=r,n.value=e,s=!1,t.classList.remove(\\\"open\\\"),o.classList.remove(\\\"expanded\\\"),document.querySelectorAll(\\\".folder-arrow\\\").forEach(e=>{e.classList.remove(\\\"expanded\\\")}),document.querySelectorAll(\\\".chart-item\\\").forEach(e=>{e.classList.remove(\\\"visible\\\")}),c.forEach(e=>e.classList.add(\\\"hidden\\\"));const l=document.getElementById(`req-${e}`);l&&l.classList.remove(\\\"hidden\\\")})})})<\" + \"/script> </body> </html>\";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","t","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","bind","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","_invoke","configurable","writable","_slicedToArray","Array","isArray","_arrayWithHoles","next","push","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_createForOfIteratorHelper","_n","F","s","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","_nonIterableSpread","toString","slice","constructor","name","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_typeof","toPrimitive","String","_toPrimitive","_toPropertyKey","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","_next","_throw","run","_run","_callee3","_t","_context3","Excel","_ref","_callee2","context","sheet","range","values","headers","rows","data","chartType","spec","numRings","ringWidth","ringGap","maxRadius","generateRingColor","transformedData","chartData","ringPositions","currentOuter","outer","inner","middle","legendStartY","_transformedData","valueColumns","excelDateToJSDate","stepData","_excelDateToJSDate","_buildHierarchy","ganttData","childrenMap","_iterator","_step","_step$value","orderedTasks","dumbellData","categories","categoryCount","dynamicHeight","paddingInner","paddingOuter","timePeriods","_categories","firstPeriod","lastPeriod","slopeData","allValues","isPercentage","formatString","_dynamicHeight","_data","_data2","horizonData","yValues","maxY","minY","_range","bandHeight","baseline","dataPoints","_dynamicWidth","nodes","treeData","allIds","nodeCount","_dynamicWidth2","_dynamicHeight2","_nodes","hierarchicalData","_allIds","_nodeCount","chartSize","radarData","dimensions","uniqueDimensions","processedData","numDataPoints","_dynamicWidth3","maxAmount","_dynamicHeight3","gaugeRow","mainValue","maxValue","numericData","_values","minVal","maxVal","binWidth","niceMin","niceMax","_excelDateToJSDate2","candlestickData","_dataPoints","_dynamicWidth4","formattedData","isoToId","worldData","filteredData","xValues","_yValues","xRange","yRange","_dynamicWidth5","_dynamicHeight4","hasGrouping","edges","nodeMap","_nodes2","edgesWithIndices","_treeData","nodeSet","nodeLabels","nodeIndex","matrix","nodeTotals","_i","j","totalSum","chords","currentAngle","totalPadding","availableAngle","_i2","angleSize","usedAngles","ribbonsPaths","innerRadius","_i3","_j","sourceChord","targetChord","sourceAngleSpan","sourceStart","sourceEnd","targetAngleSpan","targetStart","targetEnd","s0x","s0y","s1x","s1y","t0x","t0y","t1x","t1y","sourceLargeArc","targetLargeArc","path","uniqueX","_dynamicWidth6","links","assignNodeStages","nodeStages","allNodes","_categories2","stageGroups","sortedStages","inputData","xAxisType","_processedData","xAxisConfig","uniquePeriods","_dynamicWidth7","categoryField","valueField","groupField","categoryGroups","needsGrouping","shadeCounter","shadedData","_categoryField","_valueField","_groupField","_categoryGroups","_needsGrouping","_shadeCounter","_shadedData","maxLeft","maxRight","_maxValue","_processedData2","uniqueGroups","_dynamicWidth8","total","_isPercentage","dataWithPercentages","numBars","colorRange","_i4","lighten","fanData","splitYear","_i5","isTemporalX","xEncoding","yAxisConfig","_nodes3","_hierarchicalData","_allIds2","_nodeCount2","_chartSize","hiddenDiv","result","view","pngUrl","response","blob","reader","_context2","workbook","worksheets","getActiveWorksheet","getSelectedRange","load","sync","console","warn","map","row","h","getElementById","$schema","description","background","config","stroke","mark","type","size","tooltip","encoding","x","field","scale","zero","axis","title","labelFontSize","titleFontSize","color","legend","shape","font","labelColor","titleColor","gridColor","opacity","Math","max","min","index","saturation","lightness","concat","PI","assign","flat","colName","parseFloat","point","strokeWidth","labelAngle","scheme","filled","serial","Date","round","date","price","isNaN","getTime","toISOString","Boolean","buildHierarchy","_step2","parentId","level","ordered","_iterator2","task","id","err","start","end","progress","includes","startDate","endDate","dependencies","split","trim","duration","progressEnd","Map","has","set","entries","sort","width","height","layer","format","x2","align","dx","fontSize","text","strokeDash","grid","category","value1","value2","period","Set","labelAlign","offset","ticks","minExtent","domain","detail","every","autosize","contains","labelFontWeight","labelPadding","padding","datum","transform","fontWeight","op","as","order","dy","fontStyle","fill","ranges","measures","markers","dynamicWidth","toLowerCase","parent","child","existingNode","node","seriesIndex","seriesName","dimension","series","abs","y2","condition","outerRadius","theta","some","orient","floor","ceil","density","bandwidth","open","high","low","close","dateDisplay","toLocaleDateString","month","day","year","iso","rate","url","feature","lookup","fields","projection","error","top","bottom","left","right","source","ops","groupby","expr","scales","nice","axes","zindex","tickCount","tickSize","labelFont","encode","labels","update","signal","marks","fillOpacity","interactive","lineHeight","target","group","edge","default","count","enter","mult","strokeOpacity","sourceX","targetX","sourceY","targetY","angle","titleFont","thickness","gridOpacity","find","parentKey","method","ratio","hover","joinaggregate","calculate","aggregate","facet","header","titleFontWeight","symbolType","symbolSize","continuousWidth","continuousHeight","spacing","column","labelOrient","titleOrient","impute","stack","direction","titleAlign","line","strokeCap","strokeJoin","radiusOffset","radius","rangeMin","alert","add","label","dest","sourceIdx","destIdx","reduce","sum","val","startAngle","endAngle","cos","sin","sourceLabel","targetLabel","interpolate","destination","showError","inDegree","outEdges","link","queue","firstNode","processed","_loop","current","shift","currentStage","neighbor","newStage","existingStage","stage","stageIndex","nodesInStage","stackNumber","signals","reverse","band","clip","yc","cornerRadius","processedRow","firstColValue","parsedDate","titlePadding","gridWidth","labelAnchor","case","pattern","stopwords","rotate","fontSizeRange","x1","y1","gradient","stops","cat","grp","groups","shadeLevel","yOffset","xOffset","hconcat","valid","labelBaseline","domainColor","tickColor","xfocus","yfocus","iterations","static","forces","force","strength","Number","isInteger","toFixed","toLocaleString","actual","p50","p75_low","p75_high","p95_low","p95_high","createElement","style","display","body","appendChild","vegaEmbed","actions","toImageURL","fetch","FileReader","onloadend","_callee","base64data","image","_context","shapes","addImage","lockAspectRatio","readAsDataURL","removeChild","_x","Office","onReady","onclick","URL"],"sourceRoot":""}