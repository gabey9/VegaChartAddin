{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/define property getters","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/* global console, document, Excel, Office */\n\nOffice.onReady(() => {\n  document.getElementById(\"drawChart\").onclick = run;\n});\n\nexport async function run() {\n  try {\n    await Excel.run(async (context) => {\n      const sheet = context.workbook.worksheets.getActiveWorksheet();\n\n      // Get current selection\n      const range = context.workbook.getSelectedRange();\n      range.load(\"values, left, top\");\n      await context.sync();\n\n      const values = range.values;\n      if (values.length < 2) {\n        console.warn(\"Need at least header row + one data row\");\n        return;\n      }\n\n      // First row is header\n      const headers = values[0];\n      const rows = values.slice(1);\n\n      // Convert rows -> objects\n      const data = rows.map(row => {\n        let obj = {};\n        headers.forEach((h, i) => {\n          obj[h] = row[i];\n        });\n        return obj;\n      });\n\n      // Get chart type from dropdown\n      const chartType = document.getElementById(\"chartType\").value;\n\n      let spec;\n\n      function getWaterfallColors() {\n        return {\n          positive: document.getElementById('positiveColor')?.value || '#70AD47',\n          negative: document.getElementById('negativeColor')?.value || '#E15759',\n          total: document.getElementById('totalColor')?.value || '#4472C4',\n          connector: document.getElementById('connectorColor')?.value || '#FFC000'\n        };\n      }\n\n      if (chartType === \"point\") {\n        // Enhanced scatter plot with color and shape encoding\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n          description: \"Colored scatter plot from Excel selection\",\n          background: \"transparent\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          mark: { type: \"point\", size: 100, tooltip: true },\n          encoding: {\n            x: { \n              field: headers[0], \n              type: \"quantitative\",\n              scale: { zero: false },\n              axis: {\n                title: headers[0],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            y: { \n              field: headers[1], \n              type: \"quantitative\",\n              scale: { zero: false },\n              axis: {\n                title: headers[1],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            // Add color encoding if 3rd column exists\n            ...(headers.length >= 3 && {\n              color: { \n                field: headers[2], \n                type: \"nominal\",\n                legend: {\n                  title: headers[2],\n                  titleFontSize: 12,\n                  labelFontSize: 11\n                }\n              }\n            }),\n            // Add shape encoding if 4th column exists\n            ...(headers.length >= 4 && {\n              shape: { \n                field: headers[3], \n                type: \"nominal\",\n                legend: {\n                  title: headers[3],\n                  titleFontSize: 12,\n                  labelFontSize: 11\n                }\n              }\n            })\n          },\n          config: {\n            font: \"Segoe UI\",\n            axis: {\n              labelColor: \"#605e5c\",\n              titleColor: \"#323130\",\n              gridColor: \"#f3f2f1\"\n            },\n            legend: {\n              titleColor: \"#323130\",\n              labelColor: \"#605e5c\"\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"line\") {\n        // Multi-line chart\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n          description: \"Multi-line chart from Excel selection\",\n          background: \"transparent\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          mark: { \n            type: \"line\", \n            point: true,\n            tooltip: true,\n            strokeWidth: 2\n          },\n          encoding: {\n            x: { \n              field: headers[0], \n              type: \"ordinal\",\n              axis: {\n                title: headers[0],\n                labelFontSize: 12,\n                titleFontSize: 14,\n                labelAngle: 0\n              }\n            },\n            y: { \n              field: headers[1], \n              type: \"quantitative\",\n              axis: {\n                title: headers[1],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            // Add color encoding for multiple lines if 3rd column exists\n            ...(headers.length >= 3 && {\n              color: { \n                field: headers[2], \n                type: \"nominal\",\n                legend: {\n                  title: headers[2],\n                  titleFontSize: 12,\n                  labelFontSize: 11\n                }\n              }\n            })\n          },\n          config: {\n            font: \"Segoe UI\",\n            axis: {\n              labelColor: \"#605e5c\",\n              titleColor: \"#323130\",\n              gridColor: \"#f3f2f1\"\n            },\n            legend: {\n              titleColor: \"#323130\",\n              labelColor: \"#605e5c\"\n            },\n            point: {\n              size: 60,\n              filled: true\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"waterfall\") {\n        const colors = getWaterfallColors();\n        // Process waterfall data inline - set last entry's amount to 0\n        const processedData = [...data];\n        if (processedData.length > 0) {\n          processedData[processedData.length - 1] = {\n            ...processedData[processedData.length - 1],\n            [headers[1]]: 0\n          };\n        }\n\n        // Calculate dynamic dimensions\n        const numDataPoints = data.length;\n        const dynamicWidth = Math.max(400, Math.min(1200, numDataPoints * 70));\n        const maxAmount = Math.max(...data.map(d => Math.abs(d[headers[1]])));\n        const dynamicHeight = Math.max(300, Math.min(600, maxAmount / 100 + 200));\n\n        spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Waterfall chart from Excel selection\",\n\t      background: \"transparent\",\n        data: { values: processedData },\n\t      config: { view: { stroke: \"transparent\" }},\n          width: dynamicWidth,\n          height: dynamicHeight,\n          transform: [\n            {\"window\": [{\"op\": \"sum\", \"field\": headers[1], \"as\": \"sum\"}]},\n            {\"window\": [{\"op\": \"lead\", \"field\": headers[0], \"as\": \"lead\"}]},\n            {\n              \"calculate\": `datum.lead === null ? datum.${headers[0]} : datum.lead`,\n              \"as\": \"lead\"\n            },\n            {\n              \"calculate\": `datum.${headers[0]} === '${data[data.length - 1][headers[0]]}' ? 0 : datum.sum - datum.${headers[1]}`,\n              \"as\": \"previous_sum\"\n            },\n            {\n              \"calculate\": `datum.${headers[0]} === '${data[data.length - 1][headers[0]]}' ? datum.sum : datum.${headers[1]}`,\n              \"as\": \"amount\"\n            },\n            {\n              \"calculate\": `datum.${headers[0]} === '${data[0][headers[0]]}' ? datum.${headers[1]} / 2 : datum.${headers[0]} === '${data[data.length - 1][headers[0]]}' ? datum.${headers[1]} / 2 : (datum.sum + datum.previous_sum) / 2`,\n              \"as\": \"center\"\n            },\n            {\n              \"calculate\": `datum.${headers[0]} === '${data[data.length - 1][headers[0]]}' ? datum.sum : (datum.${headers[0]} !== '${data[0][headers[0]]}' && datum.${headers[0]} !== '${data[data.length - 1][headers[0]]}' && datum.${headers[1]} > 0 ? '+' : '') + datum.${headers[1]}`,\n              \"as\": \"text_amount\"\n            },\n            {\"calculate\": \"(datum.sum + datum.previous_sum) / 2\", \"as\": \"center\"}\n          ],\n          encoding: {\n            x: {\n              field: headers[0],\n              type: \"ordinal\",\n              sort: null,\n              axis: {\"labelAngle\": 0, \"title\": headers[0]},\n              scale: {\"paddingInner\": 0.1, \"paddingOuter\": 0.05}\n            }\n          },\n          layer: [\n            {\n              mark: {\"type\": \"bar\", \"size\": 60},\n              encoding: {\n                y: {\n                  field: \"previous_sum\",\n                  type: \"quantitative\",\n                  title: headers[1]\n                },\n                y2: {\"field\": \"sum\"},\n                color: {\n                  condition: [\n                    {\n                      test: `datum.${headers[0]} === '${data[0][headers[0]]}' || datum.${headers[0]} === '${data[data.length - 1][headers[0]]}'`,\n                      value: colors.total\n                    },\n                    {\"test\": \"datum.sum < datum.previous_sum\", \"value\": colors.negative}\n                  ],\n                  value: colors.positive\n                }\n              }\n            },\n            {\n              mark: {\n                type: \"rule\",\n                color: colors.connector,\n                opacity: 1,\n                strokeWidth: 2,\n                xOffset: -30,\n                x2Offset: 30\n              },\n              encoding: {\n                x2: {\"field\": \"lead\"},\n                y: {\"field\": \"sum\", \"type\": \"quantitative\"}\n              }\n            },\n            {\n              \"mark\": {\n                type: \"text\", \n                dy: {\"expr\": \"datum.amount >= 0 ? -4 : 4\"}, \n                baseline: {\"expr\": \"datum.amount >= 0 ? 'bottom' : 'top'\"}\n              },\n              encoding: {\n                y: {\"field\": \"sum\", \"type\": \"quantitative\"},\n                text: {\"field\": \"sum\", \"type\": \"nominal\"},\n                opacity: {\n                  \"condition\": {\n                    \"test\": `datum.${headers[0]} === '${data[0][headers[0]]}' || datum.${headers[0]} === '${data[data.length - 1][headers[0]]}'`,\n                    \"value\": 0\n                  },\n                  \"value\": 1\n                }\n              }\n            },\n            {\n              mark: {\"type\": \"text\", \"fontWeight\": \"bold\", \"baseline\": \"middle\"},\n              encoding: {\n                y: {\"field\": \"center\", \"type\": \"quantitative\"},\n                text: {\"field\": \"text_amount\", \"type\": \"nominal\"},\n                color: {\n                  condition: [\n                    {\n                      test: `datum.${headers[0]} === '${data[0][headers[0]]}' || datum.${headers[0]} === '${data[data.length - 1][headers[0]]}'`,\n                      value: \"#725a30\"\n                    }\n                  ],\n                  value: \"white\"\n                }\n              }\n            }\n          ],\n          config: {\"text\": {\"fontWeight\": \"bold\", \"color\": \"#404040\"}}\n        };\n      }\n\n      else if (chartType === \"bullet\") {\n      const data = rows.map(r => ({\n        title: r[0],\n        ranges: [+r[1], +r[2], +r[3]],\n        measures: [+r[4], +r[5]],\n        markers: [+r[6]]\n      }));\n\n      spec = {\n        \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",\n        background: \"transparent\",\n        config: { view: { stroke: \"transparent\" }},\n        \"data\": { \"values\": data },\n        \"facet\": {\n        \"row\": {\n            \"field\": \"title\", \"type\": \"ordinal\",\n            \"header\": { \"labelAngle\": 0, \"title\": \"\", \"labelAlign\": \"left\" }\n        }\n        },\n        \"spacing\": 10,\n        \"spec\": {\n        \"encoding\": {\n            \"x\": {\n            \"type\": \"quantitative\",\n            \"scale\": { \"nice\": false },\n            \"title\": null\n            }\n        },\n        \"layer\": [\n            { \"mark\": { \"type\": \"bar\", \"color\": \"#eee\" }, \"encoding\": { \"x\": { \"field\": \"ranges[2]\" } } },\n            { \"mark\": { \"type\": \"bar\", \"color\": \"#ddd\" }, \"encoding\": { \"x\": { \"field\": \"ranges[1]\" } } },\n            { \"mark\": { \"type\": \"bar\", \"color\": \"#ccc\" }, \"encoding\": { \"x\": { \"field\": \"ranges[0]\" } } },\n            { \"mark\": { \"type\": \"bar\", \"color\": \"lightsteelblue\", \"size\": 10 }, \"encoding\": { \"x\": { \"field\": \"measures[1]\" } } },\n            { \"mark\": { \"type\": \"bar\", \"color\": \"steelblue\", \"size\": 10 }, \"encoding\": { \"x\": { \"field\": \"measures[0]\" } } },\n            { \"mark\": { \"type\": \"tick\", \"color\": \"black\" }, \"encoding\": { \"x\": { \"field\": \"markers[0]\" } } }\n        ]\n        },\n        \"resolve\": { \"scale\": { \"x\": \"independent\" } },\n        \"config\": { \"tick\": { \"thickness\": 2 }, \"scale\": { \"barBandPaddingInner\": 0 } }\n      };\n      }\n\n      else if (chartType === \"pie\") {\n        spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        background: \"transparent\",\n        config: { view: { stroke: \"transparent\" }},\n        description: \"Pie chart from Excel selection\",\n        data: { values: data },\n        mark: { type: \"arc\", outerRadius: 120 },\n        encoding: {\n          theta: { field: headers[1], type: \"quantitative\" },\n          color: { field: headers[0], type: \"nominal\" }\n          }\n        };\n      }\n\n      else if (chartType === \"mekko\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega/v5.json\",\n          description: \"Marimekko chart from Excel selection\",\n          width: 800,\n          height: 500,\n          background: \"transparent\",\n          config: { view: { stroke: \"transparent\" }},\n          view: { stroke: null },\n          padding: { top: 60, bottom: 80, left: 60, right: 60 },\n          data: [\n            {\n              name: \"table\",\n              values: data\n            },\n            {\n              name: \"categories\",\n              source: \"table\",\n              transform: [\n                {\n                  type: \"aggregate\",\n                  fields: [headers[2]],\n                  ops: [\"sum\"],\n                  as: [\"categoryTotal\"],\n                  groupby: [headers[0]]\n                },\n                {\n                  type: \"stack\",\n                  offset: \"normalize\",\n                  sort: { field: \"categoryTotal\", order: \"descending\" },\n                  field: \"categoryTotal\",\n                  as: [\"x0\", \"x1\"]\n                },\n                {\n                  type: \"formula\",\n                  as: \"Percent\",\n                  expr: \"datum.x1-datum.x0\"\n                },\n                {\n                  type: \"formula\",\n                  as: \"Label\",\n                  expr: `datum.${headers[0]} + ' (' + format(datum.Percent,'.1%') + ')'`\n                }\n              ]\n            },\n            {\n              name: \"finalTable\",\n              source: \"table\",\n              transform: [\n                {\n                  type: \"stack\",\n                  offset: \"normalize\",\n                  groupby: [headers[0]],\n                  sort: { field: headers[2], order: \"descending\" },\n                  field: headers[2],\n                  as: [\"y0\", \"y1\"]\n                },\n                {\n                  type: \"stack\",\n                  groupby: [headers[0]],\n                  sort: { field: headers[2], order: \"descending\" },\n                  field: headers[2],\n                  as: [\"z0\", \"z1\"]\n                },\n                {\n                  type: \"lookup\",\n                  from: \"categories\",\n                  key: headers[0],\n                  values: [\"x0\", \"x1\"],\n                  fields: [headers[0]]\n                },\n                {\n                  type: \"formula\",\n                  as: \"Percent\",\n                  expr: \"datum.y1-datum.y0\"\n                },\n                {\n                  type: \"formula\",\n                  as: \"Label\",\n                  expr: `[datum.${headers[1]}, format(datum.${headers[2]}, '.0f') + ' (' + format(datum.Percent, '.1%') + ')']`\n                },\n                {\n                  type: \"window\",\n                  sort: { field: \"y0\", order: \"ascending\" },\n                  ops: [\"row_number\"],\n                  fields: [null],\n                  as: [\"rank\"],\n                  groupby: [headers[0]]\n                }\n              ]\n            }\n          ],\n          scales: [\n            {\n              name: \"x\",\n              type: \"linear\",\n              range: \"width\",\n              domain: { data: \"finalTable\", field: \"x1\" }\n            },\n            {\n              name: \"y\",\n              type: \"linear\",\n              range: \"height\",\n              nice: false,\n              zero: true,\n              domain: { data: \"finalTable\", field: \"z1\" }\n            },\n            {\n              name: \"opacity\",\n              type: \"linear\",\n              range: [1, 0.6],\n              domain: { data: \"finalTable\", field: \"rank\" }\n            },\n            {\n              name: \"color\",\n              type: \"ordinal\",\n              range: { scheme: \"category20\" },\n              domain: {\n                data: \"categories\",\n                field: headers[0],\n                sort: { field: \"x0\", order: \"ascending\", op: \"sum\" }\n              }\n            }\n          ],\n          axes: [\n            {\n              orient: \"left\",\n              scale: \"y\",\n              zindex: 1,\n              format: \"\",\n              tickCount: 5,\n              tickSize: 15,\n              labelColor: { value: \"#333740\" },\n              labelFontWeight: { value: \"normal\" },\n              labelFontSize: { value: 12 },\n              labelFont: { value: \"Segoe UI\" },\n              offset: 5,\n              domain: false,\n              encode: {\n                labels: {\n                  update: {\n                    text: { signal: `format(datum.value, '.0f')` }\n                  }\n                }\n              }\n            }\n          ],\n          marks: [\n            {\n              type: \"rect\",\n              name: \"bars\",\n              from: { data: \"finalTable\" },\n              encode: {\n                update: {\n                  x: { scale: \"x\", field: \"x0\" },\n                  x2: { scale: \"x\", field: \"x1\" },\n                  y: { scale: \"y\", field: \"z0\" },\n                  y2: { scale: \"y\", field: \"z1\" },\n                  fill: { scale: \"color\", field: headers[0] },\n                  stroke: { value: \"white\" },\n                  strokeWidth: { value: 1 },\n                  fillOpacity: { scale: \"opacity\", field: \"rank\" },\n                  tooltip: { signal: \"datum\" }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              name: \"labels\",\n              interactive: false,\n              from: { data: \"bars\" },\n              encode: {\n                update: {\n                  x: { signal: \"(datum.x2 - datum.x)*0.5 + datum.x\" },\n                  align: { value: \"center\" },\n                  text: { field: \"datum.Label\" },\n                  y: { signal: \"(datum.y2 - datum.y)*0.5 + datum.y\" },\n                  fill: { value: \"white\" },\n                  font: { value: \"Segoe UI\" },\n                  lineHeight: { value: 12 },\n                  fontSize: { value: 10 },\n                  opacity: { signal: \"(datum.x2 - datum.x) > 0.05 && (datum.y2 - datum.y) > 20 ? 1 : 0\" }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              name: \"categoryLabels\",\n              from: { data: \"categories\" },\n              encode: {\n                update: {\n                  x: { scale: \"x\", signal: \"(datum.x1-datum.x0)/2 + datum.x0\" },\n                  y: { signal: \"-15\" },\n                  text: { field: headers[0] },\n                  align: { value: \"center\" },\n                  baseline: { value: \"bottom\" },\n                  fill: { value: \"#333740\" },\n                  fontWeight: { value: \"bold\" },\n                  fontSize: { value: 12 },\n                  font: { value: \"Segoe UI\" }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              name: \"categoryPercentages\",\n              from: { data: \"categories\" },\n              encode: {\n                update: {\n                  x: { scale: \"x\", signal: \"(datum.x1-datum.x0)/2 + datum.x0\" },\n                  y: { signal: \"height + 30\" },\n                  text: { field: \"Label\" },\n                  align: { value: \"center\" },\n                  baseline: { value: \"top\" },\n                  fill: { value: \"#666666\" },\n                  fontWeight: { value: \"normal\" },\n                  fontSize: { value: 10 },\n                  font: { value: \"Segoe UI\" }\n                }\n              }\n            }\n          ]\n        };\n      }\n\n      else if (chartType === \"arc\") {\n        // Transform Excel data for arc chart\n        const edges = data.map((row, index) => ({\n          source: row[headers[0]],\n          target: row[headers[1]],\n          value: headers.length >= 3 && row[headers[2]] ? row[headers[2]] : 1,\n          group: headers.length >= 4 && row[headers[3]] ? row[headers[3]] : \"default\"\n        }));\n\n        // Get unique nodes from edges\n        const nodeMap = new Map();\n        edges.forEach(edge => {\n          if (!nodeMap.has(edge.source)) {\n            nodeMap.set(edge.source, { \n              name: edge.source, \n              group: edge.group,\n              index: nodeMap.size\n            });\n          }\n          if (!nodeMap.has(edge.target)) {\n            nodeMap.set(edge.target, { \n              name: edge.target, \n              group: edge.group,\n              index: nodeMap.size\n            });\n          }\n        });\n\n        const nodes = Array.from(nodeMap.values());\n\n        // Transform edges to use node indices\n        const edgesWithIndices = edges.map(edge => ({\n          source: nodeMap.get(edge.source).index,\n          target: nodeMap.get(edge.target).index,\n          value: edge.value\n        }));\n\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega/v5.json\",\n          description: \"Arc diagram from Excel selection\",\n          width: Math.max(600, nodes.length * 40),\n          height: 300,\n          padding: { top: 20, bottom: 80, left: 20, right: 20 },\n          \n          data: [\n            {\n              name: \"edges\",\n              values: edgesWithIndices\n            },\n            {\n              name: \"sourceDegree\",\n              source: \"edges\",\n              transform: [\n                { type: \"aggregate\", groupby: [\"source\"], as: [\"count\"] }\n              ]\n            },\n            {\n              name: \"targetDegree\", \n              source: \"edges\",\n              transform: [\n                { type: \"aggregate\", groupby: [\"target\"], as: [\"count\"] }\n              ]\n            },\n            {\n              name: \"nodes\",\n              values: nodes,\n              transform: [\n                { type: \"window\", ops: [\"rank\"], as: [\"order\"] },\n                {\n                  type: \"lookup\", from: \"sourceDegree\", key: \"source\",\n                  fields: [\"index\"], as: [\"sourceDegree\"],\n                  default: { count: 0 }\n                },\n                {\n                  type: \"lookup\", from: \"targetDegree\", key: \"target\", \n                  fields: [\"index\"], as: [\"targetDegree\"],\n                  default: { count: 0 }\n                },\n                {\n                  type: \"formula\", as: \"degree\",\n                  expr: \"(datum.sourceDegree.count || 0) + (datum.targetDegree.count || 0)\"\n                }\n              ]\n            }\n          ],\n\n          scales: [\n            {\n              name: \"position\",\n              type: \"band\",\n              domain: { data: \"nodes\", field: \"order\", sort: true },\n              range: \"width\"\n            },\n            {\n              name: \"color\",\n              type: \"ordinal\",\n              range: { scheme: \"category20\" },\n              domain: { data: \"nodes\", field: \"group\" }\n            }\n          ],\n\n          marks: [\n            {\n              type: \"symbol\",\n              name: \"layout\",\n              interactive: false,\n              from: { data: \"nodes\" },\n              encode: {\n                enter: { opacity: { value: 0 } },\n                update: {\n                  x: { scale: \"position\", field: \"order\" },\n                  y: { value: 0 },\n                  size: { field: \"degree\", mult: 8, offset: 50 },\n                  fill: { scale: \"color\", field: \"group\" }\n                }\n              }\n            },\n            {\n              type: \"path\",\n              from: { data: \"edges\" },\n              encode: {\n                update: {\n                  stroke: { value: \"#0078d4\" },\n                  strokeOpacity: { value: 0.4 },\n                  strokeWidth: { field: \"value\", mult: 2, offset: 1 }\n                }\n              },\n              transform: [\n                {\n                  type: \"lookup\", from: \"layout\", key: \"datum.index\",\n                  fields: [\"datum.source\", \"datum.target\"],\n                  as: [\"sourceNode\", \"targetNode\"]\n                },\n                {\n                  type: \"linkpath\",\n                  sourceX: { expr: \"min(datum.sourceNode.x, datum.targetNode.x)\" },\n                  targetX: { expr: \"max(datum.sourceNode.x, datum.targetNode.x)\" },\n                  sourceY: { expr: \"0\" },\n                  targetY: { expr: \"0\" },\n                  shape: \"arc\"\n                }\n              ]\n            },\n            {\n              type: \"symbol\",\n              from: { data: \"layout\" },\n              encode: {\n                update: {\n                  x: { field: \"x\" },\n                  y: { field: \"y\" },\n                  fill: { field: \"fill\" },\n                  size: { field: \"size\" },\n                  stroke: { value: \"white\" },\n                  strokeWidth: { value: 1 },\n                  tooltip: { \n                    signal: \"{'Node': datum.datum.name, 'Group': datum.datum.group, 'Connections': datum.datum.degree}\" \n                  }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              from: { data: \"nodes\" },\n              encode: {\n                update: {\n                  x: { scale: \"position\", field: \"order\" },\n                  y: { value: 25 },\n                  fontSize: { value: 10 },\n                  align: { value: \"center\" },\n                  baseline: { value: \"top\" },\n                  angle: { value: -45 },\n                  text: { field: \"name\" },\n                  fill: { value: \"#323130\" },\n                  font: { value: \"Segoe UI\" }\n                }\n              }\n            }\n          ],\n          \n          config: {\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            text: { font: \"Segoe UI\", fontSize: 10, fill: \"#605e5c\" }\n          }\n        };\n      }\n\n      else if (chartType === \"lollipop\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n          description: \"Lollipop chart from Excel selection\",\n          background: \"transparent\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          encoding: {\n            y: {\n              field: headers[0],\n              type: \"nominal\",\n              sort: \"-x\",\n              axis: {\n                domain: false,\n                title: null,\n                ticks: false,\n                labelFont: \"Segoe UI\",\n                labelFontSize: 14,\n                labelPadding: 10,\n                labelColor: \"#605e5c\"\n              }\n            },\n            x: {\n              field: headers[1],\n              type: \"quantitative\",\n              axis: {\n                domain: false,\n                ticks: false,\n                grid: true,\n                gridColor: \"#e0e0e0\",\n                labelFont: \"Segoe UI\",\n                labelFontSize: 12,\n                labelColor: \"#605e5c\",\n                title: headers[1],\n                titleFont: \"Segoe UI\",\n                titleFontSize: 14,\n                titleColor: \"#323130\"\n              }\n            },\n            color: { value: \"#0078d4\" }\n          },\n          layer: [\n            {\n              mark: {\n                type: \"rule\",\n                tooltip: true,\n                strokeWidth: 3,\n                opacity: 0.7\n              }\n            },\n            {\n              mark: {\n                type: \"circle\",\n                tooltip: true,\n                size: 300,\n                opacity: 0.9\n              },\n              encoding: {\n                size: {\n                  field: headers[1],\n                  type: \"quantitative\",\n                  scale: {\n                    range: [200, 800]\n                  },\n                  legend: null\n                }\n              }\n            }\n          ],\n          config: {\n            autosize: {\n              type: \"fit\",\n              contains: \"padding\"\n            },\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            text: { font: \"Segoe UI\", fontSize: 12, fill: \"#605E5C\" }\n          }\n        };\n      }\n\n      else if (chartType === \"strip\") {\n        // Strip plot implementation\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n          description: \"Strip plot showing distribution using tick marks\",\n          background: \"transparent\",\n          config: { \n            view: { stroke: \"transparent\" },\n            axis: {\n              labelFontSize: 11,\n              titleFontSize: 12,\n              labelColor: \"#605E5C\",\n              titleColor: \"#323130\"\n            }\n          },\n          data: { values: data },\n          mark: {\n            type: \"tick\",\n            thickness: 2,\n            size: 15,\n            color: \"#0078d4\",\n            opacity: 0.8,\n            tooltip: true\n          },\n          encoding: {\n            x: { \n              field: headers[0], \n              type: \"quantitative\",\n              axis: {\n                title: headers[0],\n                grid: true,\n                gridColor: \"#f3f2f1\",\n                gridOpacity: 0.5\n              }\n            },\n            y: { \n              field: headers[1], \n              type: \"ordinal\",\n              axis: {\n                title: headers[1],\n                labelAngle: 0\n              }\n            },\n            // Add color encoding if 3rd column exists\n            ...(headers.length > 2 && {\n              color: {\n                field: headers[2],\n                type: \"nominal\",\n                scale: { scheme: \"category10\" },\n                legend: {\n                  title: headers[2],\n                  orient: \"right\",\n                  titleFontSize: 11,\n                  labelFontSize: 10\n                }\n              }\n            }),\n            tooltip: headers.map(h => ({ field: h, type: \"nominal\" }))\n          }\n        };\n      }\n\n      else if (chartType === \"treemap\") {\n        // Treemap implementation - requires hierarchical data or will create simple treemap\n        // Expected format: Category (Column A), Value (Column B), optional Parent/Group (Column C)\n        \n        // Transform flat data into hierarchical structure for treemap\n        let treeData;\n        \n        if (headers.length >= 3) {\n          // Hierarchical data with parent column\n          treeData = data.map((d, i) => ({\n            id: `${d[headers[0]]}_${i}`,\n            name: d[headers[0]],\n            parent: d[headers[2]] || \"root\",\n            size: parseFloat(d[headers[1]]) || 0\n          }));\n          \n          // Add root and parent nodes\n          const parents = [...new Set(treeData.map(d => d.parent))];\n          parents.forEach(parent => {\n            if (parent !== \"root\" && !treeData.find(d => d.id === parent)) {\n              treeData.push({\n                id: parent,\n                name: parent,\n                parent: \"root\",\n                size: 0\n              });\n            }\n          });\n          \n          // Add root node\n          treeData.push({\n            id: \"root\",\n            name: \"Root\",\n            parent: \"\",\n            size: 0\n          });\n        } else {\n          // Simple flat data - create single level hierarchy\n          treeData = [\n            {\n              id: \"root\",\n              name: \"Root\", \n              parent: \"\",\n              size: 0\n            },\n            ...data.map((d, i) => ({\n              id: `item_${i}`,\n              name: d[headers[0]],\n              parent: \"root\",\n              size: parseFloat(d[headers[1]]) || 0\n            }))\n          ];\n        }\n\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega/v5.json\",\n          description: \"Treemap visualization from Excel data\",\n          background: \"transparent\",\n          width: 600,\n          height: 400,\n          padding: 5,\n          autosize: \"fit\",\n          \n          data: [\n            {\n              name: \"tree\",\n              values: treeData,\n              transform: [\n                {\n                  type: \"stratify\",\n                  key: \"id\",\n                  parentKey: \"parent\"\n                },\n                {\n                  type: \"treemap\",\n                  field: \"size\",\n                  sort: { field: \"value\" },\n                  round: true,\n                  method: \"squarify\",\n                  ratio: 1.6,\n                  size: [{ signal: \"width\" }, { signal: \"height\" }]\n                }\n              ]\n            },\n            {\n              name: \"nodes\",\n              source: \"tree\",\n              transform: [\n                { type: \"filter\", expr: \"datum.children\" }\n              ]\n            },\n            {\n              name: \"leaves\", \n              source: \"tree\",\n              transform: [\n                { type: \"filter\", expr: \"!datum.children\" }\n              ]\n            }\n          ],\n          \n          scales: [\n            {\n              name: \"color\",\n              type: \"ordinal\",\n              domain: { data: \"nodes\", field: \"name\" },\n              range: [\n                \"#0078d4\", \"#00bcf2\", \"#40e0d0\", \"#00cc6a\", \"#10893e\",\n                \"#107c10\", \"#bad80a\", \"#ffb900\", \"#ff8c00\", \"#d13438\"\n              ]\n            },\n            {\n              name: \"fontSize\",\n              type: \"ordinal\", \n              domain: [0, 1, 2, 3],\n              range: [20, 16, 12, 10]\n            },\n            {\n              name: \"opacity\",\n              type: \"ordinal\",\n              domain: [0, 1, 2, 3], \n              range: [0.3, 0.6, 0.8, 1.0]\n            }\n          ],\n          \n          marks: [\n            {\n              type: \"rect\",\n              from: { data: \"nodes\" },\n              interactive: false,\n              encode: {\n                enter: {\n                  fill: { scale: \"color\", field: \"name\" },\n                  fillOpacity: { scale: \"opacity\", field: \"depth\" }\n                },\n                update: {\n                  x: { field: \"x0\" },\n                  y: { field: \"y0\" },\n                  x2: { field: \"x1\" },\n                  y2: { field: \"y1\" },\n                  stroke: { value: \"#ffffff\" },\n                  strokeWidth: { value: 1 }\n                }\n              }\n            },\n            {\n              type: \"rect\",\n              from: { data: \"leaves\" },\n              encode: {\n                enter: {\n                  stroke: { value: \"#ffffff\" },\n                  strokeWidth: { value: 2 }\n                },\n                update: {\n                  x: { field: \"x0\" },\n                  y: { field: \"y0\" },\n                  x2: { field: \"x1\" },\n                  y2: { field: \"y1\" },\n                  fill: { value: \"transparent\" },\n                  tooltip: {\n                    signal: `{'Category': datum.name, 'Value': datum.size, 'Parent': datum.parent}`\n                  }\n                },\n                hover: {\n                  fill: { value: \"#323130\" },\n                  fillOpacity: { value: 0.1 }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              from: { data: \"leaves\" },\n              interactive: false,\n              encode: {\n                enter: {\n                  font: { value: \"Segoe UI, Arial, sans-serif\" },\n                  align: { value: \"center\" },\n                  baseline: { value: \"middle\" },\n                  fill: { value: \"#323130\" },\n                  fontWeight: { value: \"bold\" },\n                  text: { field: \"name\" },\n                  fontSize: { scale: \"fontSize\", field: \"depth\" }\n                },\n                update: {\n                  x: { signal: \"0.5 * (datum.x0 + datum.x1)\" },\n                  y: { signal: \"0.5 * (datum.y0 + datum.y1)\" },\n                  opacity: {\n                    signal: \"(datum.x1 - datum.x0) > 50 && (datum.y1 - datum.y0) > 20 ? 1 : 0\"\n                  }\n                }\n              }\n            }\n          ]\n        };\n      }\n\n      else if (chartType === \"waffle\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n          description: \"Waffle chart from Excel selection\",\n          background: \"transparent\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          transform: [\n            {\n              joinaggregate: [{\"op\": \"sum\", \"field\": headers[1], \"as\": \"TotalValue\"}]\n            },\n            {\n              calculate: `round(datum.${headers[1]}/datum.TotalValue * 100)`,\n              as: \"PercentOfTotal\"\n            },\n            {\n              aggregate: [{\"op\": \"min\", \"field\": \"PercentOfTotal\", \"as\": \"Percent\"}],\n              groupby: [headers[0]]\n            },\n            {\"calculate\": \"sequence(1,101)\", \"as\": \"Sequence\"},\n            {\"flatten\": [\"Sequence\"]},\n            {\n              calculate: `if(datum.Sequence <= datum.Percent, datum.${headers[0]},'_blank')`,\n              as: \"Plot\"\n            },\n            {\"calculate\": \"ceil (datum.Sequence / 10)\", \"as\": \"row\"},\n            {\"calculate\": \"datum.Sequence - datum.row * 10\", \"as\": \"col\"}\n          ],\n          facet: {\"column\": {\"field\": headers[0], \"header\": {\"labelOrient\": \"bottom\"}}},\n          spec: {\n            layer: [\n              {\n                mark: {\n                  type: \"circle\",\n                  filled: true,\n                  tooltip: true,\n                  stroke: \"#9e9b9b\",\n                  strokeWidth: 0.7\n                },\n                encoding: {\n                  x: {\"field\": \"col\", \"type\": \"ordinal\", \"axis\": null},\n                  y: {\"field\": \"row\", \"type\": \"ordinal\", \"axis\": null, \"sort\": \"-y\"},\n                  color: {\n                    condition: {\"test\": \"datum.Plot == '_blank'\", \"value\": \"#e6e3e3\"},\n                    scale: {\"scheme\": \"set1\"},\n                    field: \"Plot\",\n                    type: \"nominal\",\n                    legend: null\n                  },\n                  size: {\"value\": 241},\n                  tooltip: [{\"field\": headers[0], \"type\": \"nominal\"}]\n                }\n              },\n              {\n                mark: {\"type\": \"text\", \"fontSize\": 30, \"fontWeight\": \"bold\"},\n                encoding: {\n                  y: {\"value\": 30},\n                  text: {\n                    condition: {\n                      test: \"datum.Sequence == 1\",\n                      value: {\"expr\": \"datum.Percent + '%'\"}\n                    }\n                  },\n                  color: {\"scale\": {\"scheme\": \"set1\"}, \"field\": \"Plot\"}\n                }\n              }\n            ]\n          },\n          config: {\n            view: {\"stroke\": \"transparent\"},\n            font: \"Segoe UI\",\n            text: {\"font\": \"Segoe UI\", \"fontSize\": 12, \"fill\": \"#605E5C\"},\n            axis: {\n              ticks: false,\n              grid: false,\n              domain: false,\n              labelColor: \"#605E5C\",\n              labelFontSize: 12\n            },\n            header: {\n              titleFont: \"Segoe UI\",\n              titleFontSize: 16,\n              titleColor: \"#757575\",\n              labelFont: \"Segoe UI\",\n              labelFontSize: 13,\n              labelColor: \"#605E5C\"\n            },\n            legend: {\n              titleFont: \"Segoe UI\",\n              titleFontWeight: \"bold\",\n              titleColor: \"#605E5C\",\n              labelFont: \"Segoe UI\",\n              labelFontSize: 13,\n              labelColor: \"#605E5C\",\n              symbolType: \"circle\",\n              symbolSize: 75\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"violin\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n          description: \"Violin chart from Excel selection\",\n          background: \"transparent\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          spacing: 0,\n          facet: {\n            column: {\n              field: headers[0],\n              header: {\n                orient: \"bottom\",\n                title: null,\n                labelFontSize: 14\n              }\n            }\n          },\n          spec: {\n            width: 180,\n            height: 400,\n            encoding: {\n              y: {\n                field: headers[1],\n                type: \"quantitative\",\n                title: headers[1],\n                axis: {\n                  tickCount: 10,\n                  titleFontSize: 16,\n                  labelFontSize: 12\n                }\n              },\n              x: {\n                type: \"quantitative\",\n                axis: {\n                  labels: false,\n                  title: null,\n                  grid: false,\n                  ticks: false\n                }\n              },\n              color: {\n                field: headers[0],\n                type: \"nominal\",\n                legend: null,\n                scale: {\n                  scheme: \"category10\"\n                }\n              }\n            },\n            layer: [\n              {\n                name: \"KDE_PLOT\",\n                transform: [\n                  {\n                    density: headers[1],\n                    groupby: [headers[0]],\n                    as: [\"_kde_value\", \"_kde_density\"]\n                  },\n                  {\n                    calculate: \"datum['_kde_density'] * -1\",\n                    as: \"_negative_kde_density\"\n                  }\n                ],\n                layer: [\n                  {\n                    name: \"KDE_POSITIVE\",\n                    mark: {\n                      type: \"area\",\n                      orient: \"vertical\",\n                      opacity: 0.6\n                    },\n                    encoding: {\n                      y: { field: \"_kde_value\" },\n                      x: { field: \"_kde_density\" }\n                    }\n                  },\n                  {\n                    name: \"KDE_NEGATIVE\",\n                    mark: {\n                      type: \"area\",\n                      orient: \"vertical\",\n                      opacity: 0.6\n                    },\n                    encoding: {\n                      y: { field: \"_kde_value\" },\n                      x: { field: \"_negative_kde_density\" }\n                    }\n                  }\n                ],\n                encoding: {\n                  x2: { datum: 0 }\n                }\n              },\n              {\n                name: \"BOX_PLOT\",\n                mark: {\n                  type: \"boxplot\",\n                  extent: \"min-max\",\n                  median: {\n                    color: \"black\",\n                    strokeWidth: 2\n                  },\n                  size: 20\n                },\n                encoding: {\n                  y: { field: headers[1] },\n                  fill: { value: \"#969696\" },\n                  stroke: { value: \"black\" }\n                }\n              }\n            ]\n          },\n          config: {\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            text: { font: \"Segoe UI\", fontSize: 12, fill: \"#605E5C\" },\n            axis: {\n              ticks: false,\n              grid: true,\n              gridColor: \"#e0e0e0\",\n              domain: false,\n              labelColor: \"#605E5C\",\n              labelFontSize: 12\n            },\n            header: {\n              titleFont: \"Segoe UI\",\n              titleFontSize: 16,\n              titleColor: \"#757575\",\n              labelFont: \"Segoe UI\",\n              labelFontSize: 13,\n              labelColor: \"#605E5C\"\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"heatmap\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n          description: \"Heatmap with marginal bars from Excel selection\",\n          background: \"transparent\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          spacing: 15,\n          bounds: \"flush\",\n          vconcat: [\n            {\n              height: 60,\n              mark: {\n                type: \"bar\",\n                stroke: null,\n                cornerRadiusEnd: 2,\n                tooltip: true,\n                color: \"lightgrey\"\n              },\n              encoding: {\n                x: {\n                  field: headers[1],\n                  type: \"ordinal\",\n                  axis: null\n                },\n                y: {\n                  field: headers[2],\n                  aggregate: \"mean\",\n                  type: \"quantitative\",\n                  axis: null\n                }\n              }\n            },\n            {\n              spacing: 15,\n              bounds: \"flush\",\n              hconcat: [\n                {\n                  mark: {\n                    type: \"rect\",\n                    stroke: \"white\",\n                    tooltip: true\n                  },\n                  encoding: {\n                    y: {\n                      field: headers[0],\n                      type: \"ordinal\",\n                      title: headers[0],\n                      axis: {\n                        domain: false,\n                        ticks: false,\n                        labels: true,\n                        labelAngle: 0,\n                        labelPadding: 5\n                      }\n                    },\n                    x: {\n                      field: headers[1],\n                      type: \"ordinal\",\n                      title: headers[1],\n                      axis: {\n                        domain: false,\n                        ticks: false,\n                        labels: true,\n                        labelAngle: 0\n                      }\n                    },\n                    color: {\n                      aggregate: \"mean\",\n                      field: headers[2],\n                      type: \"quantitative\",\n                      title: headers[2],\n                      scale: {\n                        scheme: \"blues\"\n                      },\n                      legend: {\n                        direction: \"vertical\",\n                        gradientLength: 120\n                      }\n                    }\n                  }\n                },\n                {\n                  mark: {\n                    type: \"bar\",\n                    stroke: null,\n                    cornerRadiusEnd: 2,\n                    tooltip: true,\n                    color: \"lightgrey\"\n                  },\n                  width: 60,\n                  encoding: {\n                    y: {\n                      field: headers[0],\n                      type: \"ordinal\",\n                      axis: null\n                    },\n                    x: {\n                      field: headers[2],\n                      type: \"quantitative\",\n                      aggregate: \"mean\",\n                      axis: null\n                    }\n                  }\n                }\n              ]\n            }\n          ],\n          config: {\n            autosize: {\n              type: \"fit\",\n              contains: \"padding\"\n            },\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            text: { font: \"Segoe UI\", fontSize: 12, fill: \"#605E5C\" },\n            axis: {\n              ticks: false,\n              grid: false,\n              domain: false,\n              labelColor: \"#605E5C\",\n              labelFontSize: 12,\n              titleFontSize: 14,\n              titleColor: \"#323130\"\n            },\n            legend: {\n              titleFont: \"Segoe UI\",\n              titleFontWeight: \"bold\",\n              titleColor: \"#605E5C\",\n              labelFont: \"Segoe UI\",\n              labelFontSize: 12,\n              labelColor: \"#605E5C\"\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"deviation\") {\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Deviation chart from Excel selection\",\n        background: \"transparent\",\n        config: { view: { stroke: \"transparent\" }},\n        data: { values: data },\n        layer: [\n        {\n            mark: { type: \"line\", tooltip: true, color: \"grey\" },\n            encoding: {\n            x: { field: headers[0], type: \"ordinal\" },\n            y: { field: headers[1], type: \"quantitative\" }\n            }\n        },\n        {\n            mark: { type: \"circle\", size: 80, color: \"grey\", tooltip: true },\n            encoding: {\n            x: { field: headers[0], type: \"ordinal\" },\n            y: { field: headers[1], type: \"quantitative\" }\n            }\n        },\n        {\n            mark: { type: \"rule\", strokeWidth: 2, tooltip: true },\n            encoding: {\n            x: { field: headers[0], type: \"ordinal\" },\n            y: { field: headers[1], type: \"quantitative\" },\n            y2: { field: headers[2] },\n            color: {\n                condition: { test: `datum[\"${headers[1]}\"] < datum[\"${headers[2]}\"]`, value: \"red\" },\n                value: \"green\"\n            }\n            }\n        },\n        {\n            mark: { type: \"circle\", size: 60, tooltip: true },\n            encoding: {\n            x: { field: headers[0], type: \"ordinal\" },\n            y: { field: headers[2], type: \"quantitative\" },\n            color: {\n                condition: { test: `datum[\"${headers[1]}\"] < datum[\"${headers[2]}\"]`, value: \"red\" },\n                value: \"green\"\n            }\n            }\n        }\n        ],\n        encoding: {\n        x: { field: headers[0], type: \"ordinal\", axis: null },\n        y: { type: \"quantitative\", axis: { title: \"\" } }\n        },\n        config: {\n        view: { stroke: \"transparent\" },\n        line: { strokeWidth: 3, strokeCap: \"round\", strokeJoin: \"round\" },\n        axis: {\n            ticks: false,\n            grid: false,\n            domain: false,\n            labelColor: \"#605E5C\",\n            labelFontSize: 12\n        }\n        }\n      };\n      }\n\n      else if (chartType === \"radial\") {\n        spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Radial chart from Excel selection\",\n        background: \"transparent\",\n        config: { view: { stroke: \"transparent\" }},\n        data: { values: data },\n        layer: [{\n        mark: { type: \"arc\", innerRadius: 20, stroke: \"#fff\" }\n        }, {\n        mark: { type: \"text\", radiusOffset: 10 },\n        encoding: {\n            text: { field: headers[1], type: \"quantitative\" }\n        }\n        }],\n        encoding: {\n        theta: { field: headers[1], type: \"quantitative\", stack: true },\n        radius: { \n            field: headers[1], \n            scale: { type: \"sqrt\", zero: true, rangeMin: 20 }\n        },\n        color: { field: headers[0], type: \"nominal\", legend: null }\n        }\n      };\n      }\n\n      else if (chartType === \"bump\") {\n      // calculate width based on number of unique x-values\n      const uniqueX = [...new Set(data.map(d => d[headers[0]]))];\n      const dynamicWidth = Math.max(400, uniqueX.length * 80);\n\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Bump chart from Excel selection\",\n        background: \"transparent\",\n        config: { view: { stroke: \"transparent\" }},\n        data: { values: data },\n        width: dynamicWidth,\n        height: 200,   // give it some room\n        encoding: {\n          x: {\n            field: headers[0],\n            type: \"nominal\",\n            axis: { title: \"\" },\n            scale: { type: \"point\", padding: 1 }   // padding 1 for more spread\n          },\n          y: {\n            field: headers[2],      \n            type: \"ordinal\",\n            axis: false\n          }\n        },\n        layer: [\n          {\n            mark: { type: \"line\", interpolate: \"monotone\" },\n            encoding: {\n              color: {\n                field: headers[1],   \n                type: \"nominal\",\n                legend: false\n              }\n            }\n          },\n          {\n            mark: { type: \"circle\", size: 400, tooltip: true },\n            encoding: {\n              color: {\n                field: headers[1],\n                type: \"nominal\",\n                legend: false\n              }\n            }\n          },\n          {\n            mark: { type: \"text\", color: \"white\" },\n            encoding: {\n              text: { field: headers[2] }\n            }\n          },\n          {\n            // Left-side labels\n            transform: [\n              { window: [{ op: \"rank\", as: \"rank\" }], sort: [{ field: headers[0], order: \"descending\" }] },\n              { filter: \"datum.rank === 1\" }\n            ],\n            mark: {\n              type: \"text\",\n              align: \"left\",\n              baseline: \"middle\",\n              dx: 15,\n              fontWeight: \"bold\",\n              fontSize: 12\n            },\n            encoding: {\n              text: { field: headers[1], type: \"nominal\" },\n              color: { field: headers[1], type: \"nominal\", legend: false }\n            }\n          },\n          {\n            // Right-side labels\n            transform: [\n              { window: [{ op: \"rank\", as: \"rank\" }], sort: [{ field: headers[0], order: \"ascending\" }] },\n              { filter: \"datum.rank === 1\" }\n            ],\n            mark: {\n              type: \"text\",\n              align: \"right\",\n              baseline: \"middle\",\n              dx: -15,\n              fontWeight: \"bold\",\n              fontSize: 12\n            },\n            encoding: {\n              text: { field: headers[1], type: \"nominal\" },\n              color: { field: headers[1], type: \"nominal\", legend: false }\n            }\n          }\n        ],\n        config: {\n          view: { stroke: \"transparent\" },\n          line: { strokeWidth: 3, strokeCap: \"round\", strokeJoin: \"round\" },\n          axis: {\n            ticks: false,\n            grid: false,\n            domain: false,\n            labelColor: \"#666666\",\n            labelFontSize: 12\n          }\n        }\n      };\n      }\n\n      else if (chartType === \"ribbon\") {\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Ribbon chart from Excel selection\",\n        background: \"transparent\",\n        config: { view: { stroke: \"transparent\" }},\n        data: { values: data },\n        layer: [\n        {\n            mark: { type: \"area\", interpolate: \"monotone\", tooltip: true },\n            encoding: {\n            x: {\n                field: headers[0],\n                type: \"ordinal\" // temporal change to \"ordinal\" if your first col is not a date\n            },\n            y: {\n                aggregate: \"sum\",\n                field: headers[2],\n                type: \"quantitative\",\n                axis: null,\n                stack: \"center\"\n            },\n            color: {\n                field: headers[1],\n                type: \"nominal\"\n            },\n            order: {\n                aggregate: \"sum\",\n                field: headers[2],\n                type: \"quantitative\"\n            }\n            }\n        }\n        ],\n        config: {\n        view: { stroke: \"transparent\" },\n        axis: {\n            ticks: false,\n            grid: true,\n            gridColor: \"white\",\n            gridWidth: 3,\n            domain: false,\n            labelColor: \"#666666\"\n        },\n        legend: {\n            titleFont: \"Segoe UI\",\n            titleFontWeight: \"bold\",\n            titleColor: \"#666666\",\n            labelFont: \"Segoe UI\",\n            labelColor: \"#666666\",\n            symbolType: \"circle\",\n            symbolSize: 75\n        }\n        }\n      };\n      }\n\n      else if (chartType === \"ridgeline\") {\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Ridgeline (Joyplot) chart from Excel selection\",\n        background: \"transparent\",\n        config: { view: { stroke: \"transparent\" }},\n        data: { values: data },\n        mark: {\n        type: \"area\",\n        fillOpacity: 0.7,\n        strokeOpacity: 1,\n        strokeWidth: 1,\n        interpolate: \"monotone\"\n        },\n        width: 400,\n        height: 20,\n        encoding: {\n        x: {\n            field: headers[0],       // date/time column\n            type: \"ordinal\",\n            title: headers[0]\n        },\n        y: {\n            aggregate: \"sum\",\n            field: headers[2],       // value column\n            type: \"quantitative\",\n            scale: { range: [20, -40] },\n            axis: {\n            title: null,\n            values: [0],\n            domain: false,\n            labels: false,\n            ticks: false\n            }\n        },\n        row: {\n            field: headers[1],       // category column\n            type: \"nominal\",\n            title: headers[1],\n            header: {\n            title: null,\n            labelAngle: 0,\n            labelOrient: \"left\",\n            labelAlign: \"left\",\n            labelPadding: 0\n            },\n            sort: { field: headers[0], op: \"max\", order: \"ascending\" }\n        },\n        fill: {\n            field: headers[1],\n            type: \"nominal\",\n            legend: null,\n            scale: { scheme: \"plasma\" }\n        }\n        },\n        resolve: { scale: { y: \"independent\" } },\n        config: {\n        view: { stroke: \"transparent\" },\n        facet: { spacing: 20 },\n        header: {\n            labelFontSize: 12,\n            labelFontWeight: 500,\n            labelAngle: 0,\n            labelAnchor: \"end\",\n            labelOrient: \"top\",\n            labelPadding: -19\n        },\n        axis: {\n            domain: false,\n            grid: false,\n            ticks: false,\n            tickCount: 5,\n            labelFontSize: 12,\n            titleFontSize: 12,\n            titleFontWeight: 400,\n            titleColor: \"#605E5C\"\n        }\n        }\n      };\n      }\n\n      else if (chartType === \"wordcloud\") {\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega/v5.json\",\n        description: \"Word cloud from Excel selection\",\n        width: 800,\n        height: 400,\n        padding: 0,\n        \n        data: [\n        {\n            name: \"table\",\n            values: data,\n            transform: [\n            {\n                type: \"countpattern\",\n                field: headers[0], // Use first column as text source\n                case: \"upper\",\n                pattern: \"[\\\\w']{3,}\",\n                stopwords: \"(i|me|my|myself|we|us|our|ours|ourselves|you|your|yours|yourself|yourselves|he|him|his|himself|she|her|hers|herself|it|its|itself|they|them|their|theirs|themselves|what|which|who|whom|whose|this|that|these|those|am|is|are|was|were|be|been|being|have|has|had|having|do|does|did|doing|will|would|should|can|could|ought|i'm|you're|he's|she's|it's|we're|they're|i've|you've|we've|they've|i'd|you'd|he'd|she'd|we'd|they'd|i'll|you'll|he'll|she'll|we'll|they'll|isn't|aren't|wasn't|weren't|hasn't|haven't|hadn't|doesn't|don't|didn't|won't|wouldn't|shan't|shouldn't|can't|cannot|couldn't|mustn't|let's|that's|who's|what's|here's|there's|when's|where's|why's|how's|a|an|the|and|but|if|or|because|as|until|while|of|at|by|for|with|about|against|between|into|through|during|before|after|above|below|to|from|up|upon|down|in|out|on|off|over|under|again|further|then|once|here|there|when|where|why|how|all|any|both|each|few|more|most|other|some|such|no|nor|not|only|own|same|so|than|too|very|say|says|said|shall)\"\n            },\n            {\n                type: \"formula\", \n                as: \"angle\",\n                expr: \"[-45, 0, 45][~~(random() * 3)]\"\n            },\n            {\n                type: \"formula\", \n                as: \"weight\",\n                expr: \"if(datum.count > 10, 600, 300)\"\n            }\n            ]\n        }\n        ],\n        \n        scales: [\n        {\n            name: \"color\",\n            type: \"ordinal\",\n            domain: { data: \"table\", field: \"text\" },\n            range: [\"#d5a928\", \"#652c90\", \"#939597\", \"#2563eb\", \"#dc2626\", \"#059669\"]\n        }\n        ],\n        \n        marks: [\n        {\n            type: \"text\",\n            from: { data: \"table\" },\n            encode: {\n            enter: {\n                text: { field: \"text\" },\n                align: { value: \"center\" },\n                baseline: { value: \"alphabetic\" },\n                fill: { scale: \"color\", field: \"text\" }\n            },\n            update: {\n                fillOpacity: { value: 1 }\n            },\n            hover: {\n                fillOpacity: { value: 0.5 }\n            }\n            },\n            transform: [\n            {\n                type: \"wordcloud\",\n                size: [800, 400],\n                text: { field: \"text\" },\n                rotate: { field: \"datum.angle\" },\n                font: \"Helvetica Neue, Arial\",\n                fontSize: { field: \"datum.count\" },\n                fontWeight: { field: \"datum.weight\" },\n                fontSizeRange: [12, 56],\n                padding: 2\n            }\n            ]\n        }\n        ]\n      };\n      }\n\n      else if (chartType === \"area\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n          description: \"Area chart from Excel selection\",\n          background: \"transparent\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          mark: { \n            type: \"area\", \n            tooltip: true,\n            opacity: 0.7\n          },\n          encoding: {\n            x: { \n              field: headers[0], \n              type: \"ordinal\",\n              axis: {\n                title: headers[0],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            y: { \n              field: headers[1], \n              type: \"quantitative\",\n              axis: {\n                title: headers[1],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            // Add color encoding for multiple areas if 3rd column exists\n            ...(headers.length >= 3 && {\n              color: { \n                field: headers[2], \n                type: \"nominal\",\n                legend: {\n                  title: headers[2],\n                  titleFontSize: 12,\n                  labelFontSize: 11\n                }\n              }\n            })\n          },\n          config: {\n            font: \"Segoe UI\",\n            axis: {\n              labelColor: \"#605e5c\",\n              titleColor: \"#323130\",\n              gridColor: \"#f3f2f1\"\n            },\n            legend: {\n              titleColor: \"#323130\",\n              labelColor: \"#605e5c\"\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"bar\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n          description: \"Bar chart from Excel selection\",\n          background: \"transparent\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          mark: { \n            type: \"bar\", \n            tooltip: true\n          },\n          encoding: {\n            x: { \n              field: headers[0], \n              type: \"nominal\",\n              axis: {\n                title: headers[0],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            y: { \n              field: headers[1], \n              type: \"quantitative\",\n              axis: {\n                title: headers[1],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            // Add color encoding for grouped bars if 3rd column exists\n            ...(headers.length >= 3 && {\n              color: { \n                field: headers[2], \n                type: \"nominal\",\n                legend: {\n                  title: headers[2],\n                  titleFontSize: 12,\n                  labelFontSize: 11\n                }\n              }\n            })\n          },\n          config: {\n            font: \"Segoe UI\",\n            axis: {\n              labelColor: \"#605e5c\",\n              titleColor: \"#323130\",\n              gridColor: \"#f3f2f1\"\n            },\n            legend: {\n              titleColor: \"#323130\",\n              labelColor: \"#605e5c\"\n            }\n          }\n        };\n      }\n\n      // Render hidden chart\n      const hiddenDiv = document.createElement(\"div\");\n      hiddenDiv.style.display = \"none\";\n      document.body.appendChild(hiddenDiv);\n\n      const result = await vegaEmbed(hiddenDiv, spec, { actions: false });\n      const view = result.view;\n\n      // Export chart -> PNG\n      const pngUrl = await view.toImageURL(\"png\");\n      const response = await fetch(pngUrl);\n      const blob = await response.blob();\n\n      const reader = new FileReader();\n      reader.onloadend = async () => {\n      const base64data = reader.result.split(\",\")[1];\n\n      // Insert picture above selection\n      const image = sheet.shapes.addImage(base64data);\n      image.left = range.left;\n      image.top = range.top;\n      image.lockAspectRatio = true; // keep proportions\n\n      await context.sync();\n      };\n\n      reader.readAsDataURL(blob);\n      \n      // Clean up hidden div\n      document.body.removeChild(hiddenDiv);\n    });\n  } catch (error) {\n    console.error(error);\n  }\n}","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.js\", import.meta.url);\n// Module\nvar code = \"<!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Vega Chart</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/vega@6\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/vega-lite@6\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/vega-embed@6\\\"><\" + \"/script> <\" + \"script type=\\\"module\\\" src=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\"><\" + \"/script> <style>body{font-family:-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif;margin:20px;line-height:1.4}.chart-selector{margin-bottom:15px}label{display:block;margin-bottom:5px;font-weight:600;color:#323130}select{width:100%;padding:8px 12px;border:1px solid #8a8886;border-radius:4px;font-size:14px}button{background-color:#0078d4;color:#fff;border:none;padding:10px 20px;border-radius:4px;font-size:14px;cursor:pointer;width:100%;margin-bottom:15px}button:hover{background-color:#106ebe}.data-requirements{background-color:#f8f9fa;border:1px solid #e1e4e8;border-radius:6px;padding:12px;margin-top:10px;font-size:13px}.data-requirements h4{margin:0 0 8px 0;color:#24292f;font-size:14px}.data-requirements ul{margin:0;padding-left:18px}.data-requirements li{margin-bottom:4px}.chart-settings{margin-top:20px;padding:15px;background-color:#f3f2f1;border-left:3px solid #f48fb1;border-radius:2px}.chart-settings h4{margin:0 0 12px 0;color:#323130;font-size:14px;font-weight:600}.setting-group{margin-bottom:15px}.setting-label{display:block;font-weight:600;margin-bottom:6px;color:#323130;font-size:13px}.color-input-row{display:flex;align-items:center;gap:8px;margin-bottom:8px}.color-preview{width:24px;height:24px;border-radius:4px;border:2px solid #e1e1e1;cursor:pointer;transition:all .2s ease;position:relative;overflow:hidden}.color-preview:hover{border-color:#0078d4;transform:scale(1.05)}.color-input{opacity:0;position:absolute;width:100%;height:100%;cursor:pointer}.color-label{flex:1;font-size:12px;color:#605e5c}.hex-display{font-family:'Courier New',monospace;font-size:10px;color:#8a8886;background:#fff;padding:2px 4px;border-radius:2px;min-width:55px;text-align:center;border:1px solid #e1e1e1}.hidden{display:none}</style> </head> <body> <h2></h2> <div class=\\\"chart-selector\\\"> <label for=\\\"chartType\\\">Select Chart Type:</label> <select id=\\\"chartType\\\"> <option value=\\\"point\\\">Scatter</option> <option value=\\\"bar\\\">Bar</option> <option value=\\\"line\\\">Line</option> <option value=\\\"area\\\">Area</option> <option value=\\\"pie\\\">Pie</option> <option value=\\\"radial\\\">Radial</option> <option value=\\\"arc\\\">Arc</option> <option value=\\\"wordcloud\\\">Wordcloud</option> <option value=\\\"strip\\\">Strip</option> <option value=\\\"treemap\\\">Treemap</option> <option value=\\\"bullet\\\">Bullet</option> <option value=\\\"mekko\\\">Mekko</option> <option value=\\\"heatmap\\\">Heatmap</option> <option value=\\\"bump\\\">Bump</option> <option value=\\\"waffle\\\">Waffle</option> <option value=\\\"lollipop\\\">Lollipop</option> <option value=\\\"violin\\\">Violin</option> <option value=\\\"ribbon\\\">Ribbon</option> <option value=\\\"ridgeline\\\">Ridgeline</option> <option value=\\\"deviation\\\">Deviation</option> <option value=\\\"waterfall\\\">Waterfall</option> </select> </div> <button id=\\\"drawChart\\\">Generate Chart</button> <div id=\\\"req-point\\\" class=\\\"data-requirements\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> X-axis values (numbers)</li> <li><strong>Column 2:</strong> Y-axis values (numbers)</li> <li><strong>Column 3 (optional):</strong> Color grouping (categories for different colors)</li> <li><strong>Column 4 (optional):</strong> Shape grouping (categories for different shapes)</li> </ul> </div> <div id=\\\"req-bar\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Categories or X-axis values</li> <li><strong>Column 2:</strong> Values (numbers)</li> <li><strong>Column 3 (optional):</strong> Grouping variable for grouped bars</li> </ul> </div> <div id=\\\"req-line\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> X-axis values (often dates/time or categories)</li> <li><strong>Column 2:</strong> Y-axis values (numbers)</li> <li><strong>Column 3 (optional):</strong> Series grouping for multiple lines</li> </ul> </div> <div id=\\\"req-area\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> X-axis values (often dates/time)</li> <li><strong>Column 2:</strong> Y-axis values (numbers)</li> <li><strong>Column 3 (optional):</strong> Series grouping for multiple areas</li> </ul> </div> <div id=\\\"req-pie\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category names (e.g., \\\"Product A\\\", \\\"Product B\\\")</li> <li><strong>Column 2:</strong> Values (numbers for slice sizes)</li> </ul> </div> <div id=\\\"req-radial\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category names</li> <li><strong>Column 2:</strong> Values (determines both angle and radius)</li> </ul> </div> <div id=\\\"req-arc\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Source node/entity (e.g., \\\"Person A\\\", \\\"Department 1\\\")</li> <li><strong>Column 2:</strong> Target node/entity (e.g., \\\"Person B\\\", \\\"Department 2\\\")</li> <li><strong>Column 3:</strong> Connection strength/weight (numbers, optional)</li> <li><strong>Column 4:</strong> Group/Category (optional, for coloring nodes)</li> </ul> </div> <div id=\\\"req-strip\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column A:</strong> Quantitative values (e.g., Horsepower, Sales, Temperature)</li> <li><strong>Column B:</strong> Categories/Groups (e.g., Cylinders, Department, Grade)</li> <li><strong>Column C (optional):</strong> Color grouping (e.g., Brand, Region, Type)</li> </ul> </div> <div id=\\\"req-treemap\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column A:</strong> Category/Item names (e.g., Product, Department, File)</li> <li><strong>Column B:</strong> Values/Sizes (e.g., Sales, Budget, File Size)</li> <li><strong>Column C (optional):</strong> Parent/Group hierarchy (e.g., Region, Division)</li> </ul> </div> <div id=\\\"req-wordcloud\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Text data (sentences, phrases, or words)</li> </ul> </div> <div id=\\\"req-lollipop\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category names (e.g., \\\"Products\\\", \\\"Regions\\\", \\\"Teams\\\")</li> <li><strong>Column 2:</strong> Values (numbers for stick length and circle size)</li> </ul> </div> <div id=\\\"req-waffle\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category names (e.g., \\\"Product A\\\", \\\"Product B\\\")</li> <li><strong>Column 2:</strong> Values (numbers that will be converted to percentages)</li> </ul> </div> <div id=\\\"req-bullet\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Title/Metric name (e.g., \\\"Revenue\\\", \\\"Profit\\\")</li> <li><strong>Column 2:</strong> Poor range max</li> <li><strong>Column 3:</strong> Satisfactory range max</li> <li><strong>Column 4:</strong> Good range max</li> <li><strong>Column 5:</strong> Actual value</li> <li><strong>Column 6:</strong> Forecast value (optional)</li> <li><strong>Column 7:</strong> Target value (marker)</li> </ul> </div> <div id=\\\"req-mekko\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Primary categories (e.g., \\\"Continent\\\", \\\"Region\\\")</li> <li><strong>Column 2:</strong> Sub-categories (e.g., \\\"Country\\\", \\\"Product\\\")</li> <li><strong>Column 3:</strong> Values (numbers for sizing)</li> </ul> </div> <div id=\\\"req-heatmap\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Y-axis categories (e.g., \\\"Months\\\", \\\"Products\\\", \\\"Regions\\\")</li> <li><strong>Column 2:</strong> X-axis categories (e.g., \\\"Days\\\", \\\"Quarters\\\", \\\"Sales Reps\\\")</li> <li><strong>Column 3:</strong> Values (numbers for color intensity)</li> </ul> </div> <div id=\\\"req-bump\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Time periods</li> <li><strong>Column 2:</strong> Categories (e.g., \\\"Team A\\\", \\\"Team B\\\")</li> <li><strong>Column 3:</strong> Rank values (1, 2, 3, etc.)</li> </ul> </div> <div id=\\\"req-violin\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Categories/Groups (e.g., \\\"Country A\\\", \\\"Product Line\\\", \\\"Department\\\")</li> <li><strong>Column 2:</strong> Continuous values (numbers for distribution analysis)</li> </ul> </div> <div id=\\\"req-ribbon\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Time periods (dates/periods)</li> <li><strong>Column 2:</strong> Categories (different series)</li> <li><strong>Column 3:</strong> Values (numbers)</li> </ul> </div> <div id=\\\"req-ridgeline\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Time periods/X-axis values</li> <li><strong>Column 2:</strong> Categories (creates separate ridges)</li> <li><strong>Column 3:</strong> Values (creates distribution shape)</li> </ul> </div> <div id=\\\"req-deviation\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Date/Period</li> <li><strong>Column 2:</strong> Actual values</li> <li><strong>Column 3:</strong> Target/Baseline values</li> </ul> </div> <div id=\\\"req-waterfall\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Categories/Labels (e.g., \\\"Begin\\\", \\\"Q1\\\", \\\"Q2\\\", \\\"End\\\")</li> <li><strong>Column 2:</strong> Amount values (positive/negative numbers)</li> </ul> </div> <div class=\\\"chart-settings hidden\\\" id=\\\"chartSettings\\\"> <h4>Chart Settings</h4> <div class=\\\"setting-group\\\"> <label class=\\\"setting-label\\\">Waterfall Colors</label> <div class=\\\"color-input-row\\\"> <div class=\\\"color-preview\\\" style=\\\"background-color:#70ad47\\\"> <input type=\\\"color\\\" class=\\\"color-input\\\" id=\\\"positiveColor\\\" value=\\\"#70AD47\\\"> </div> <span class=\\\"color-label\\\">Positive Values</span> <span class=\\\"hex-display\\\" id=\\\"positiveHex\\\">#70AD47</span> </div> <div class=\\\"color-input-row\\\"> <div class=\\\"color-preview\\\" style=\\\"background-color:#e15759\\\"> <input type=\\\"color\\\" class=\\\"color-input\\\" id=\\\"negativeColor\\\" value=\\\"#E15759\\\"> </div> <span class=\\\"color-label\\\">Negative Values</span> <span class=\\\"hex-display\\\" id=\\\"negativeHex\\\">#E15759</span> </div> <div class=\\\"color-input-row\\\"> <div class=\\\"color-preview\\\" style=\\\"background-color:#4472c4\\\"> <input type=\\\"color\\\" class=\\\"color-input\\\" id=\\\"totalColor\\\" value=\\\"#4472C4\\\"> </div> <span class=\\\"color-label\\\">Total/Subtotal</span> <span class=\\\"hex-display\\\" id=\\\"totalHex\\\">#4472C4</span> </div> <div class=\\\"color-input-row\\\"> <div class=\\\"color-preview\\\" style=\\\"background-color:#ffc000\\\"> <input type=\\\"color\\\" class=\\\"color-input\\\" id=\\\"connectorColor\\\" value=\\\"#FFC000\\\"> </div> <span class=\\\"color-label\\\">Connectors</span> <span class=\\\"hex-display\\\" id=\\\"connectorHex\\\">#FFC000</span> </div> </div> </div> <div id=\\\"chart\\\"></div> <\" + \"script>document.getElementById(\\\"chartType\\\").addEventListener(\\\"change\\\",function(){const e=this.value;document.querySelectorAll(\\\".data-requirements\\\").forEach(e=>e.classList.add(\\\"hidden\\\"));const t=document.getElementById(`req-${e}`);t&&t.classList.remove(\\\"hidden\\\")}),document.addEventListener(\\\"DOMContentLoaded\\\",function(){document.getElementById(\\\"chartType\\\").dispatchEvent(new Event(\\\"change\\\"))});const colorInputs=[\\\"positiveColor\\\",\\\"negativeColor\\\",\\\"totalColor\\\",\\\"connectorColor\\\"];colorInputs.forEach(e=>{const t=document.getElementById(e),n=document.getElementById(e.replace(\\\"Color\\\",\\\"Hex\\\")),o=t.parentElement;t.addEventListener(\\\"input\\\",function(){const e=this.value.toUpperCase();n.textContent=e,o.style.backgroundColor=e})}),document.getElementById(\\\"chartType\\\").addEventListener(\\\"change\\\",function(){const e=this.value,t=document.getElementById(\\\"chartSettings\\\");\\\"waterfall\\\"===e?t.classList.remove(\\\"hidden\\\"):t.classList.add(\\\"hidden\\\")}),document.addEventListener(\\\"DOMContentLoaded\\\",function(){document.getElementById(\\\"chartType\\\").dispatchEvent(new Event(\\\"change\\\"))})<\" + \"/script> </body> </html>\";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","t","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","bind","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","_invoke","configurable","writable","_toConsumableArray","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","toString","slice","constructor","name","_unsupportedIterableToArray","_nonIterableSpread","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_typeof","toPrimitive","String","_toPrimitive","_toPropertyKey","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","_next","_throw","run","_run","_callee3","_t","_context3","Excel","_ref","_callee2","context","sheet","range","values","headers","rows","data","chartType","spec","getWaterfallColors","colors","processedData","numDataPoints","dynamicWidth","maxAmount","dynamicHeight","_data","edges","nodeMap","nodes","edgesWithIndices","treeData","uniqueX","_dynamicWidth","hiddenDiv","result","view","pngUrl","response","blob","reader","_context2","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","positive","getElementById","negative","total","connector","workbook","worksheets","getActiveWorksheet","getSelectedRange","load","sync","console","warn","map","row","h","$schema","description","background","config","stroke","mark","type","size","tooltip","encoding","x","field","scale","zero","axis","title","labelFontSize","titleFontSize","color","legend","shape","font","labelColor","titleColor","gridColor","point","strokeWidth","labelAngle","filled","Math","max","min","abs","width","height","transform","concat","sort","layer","y2","condition","opacity","xOffset","x2Offset","x2","dy","baseline","text","ranges","measures","markers","outerRadius","theta","padding","top","bottom","left","right","source","fields","ops","as","groupby","offset","order","expr","scales","domain","nice","scheme","op","axes","orient","zindex","format","tickCount","tickSize","labelFontWeight","labelFont","encode","labels","update","signal","marks","fill","fillOpacity","interactive","align","lineHeight","fontSize","fontWeight","index","target","group","Map","edge","has","set","default","count","enter","mult","strokeOpacity","sourceX","targetX","sourceY","targetY","angle","ticks","labelPadding","grid","titleFont","autosize","contains","thickness","gridOpacity","id","parent","parseFloat","Set","find","parentKey","round","method","ratio","hover","joinaggregate","calculate","aggregate","facet","header","titleFontWeight","symbolType","symbolSize","spacing","column","density","datum","extent","median","bounds","vconcat","cornerRadiusEnd","hconcat","direction","gradientLength","line","strokeCap","strokeJoin","innerRadius","radiusOffset","stack","radius","rangeMin","interpolate","dx","gridWidth","labelOrient","labelAlign","labelAnchor","case","pattern","stopwords","rotate","fontSizeRange","createElement","style","display","body","appendChild","vegaEmbed","actions","toImageURL","fetch","FileReader","onloadend","_callee","base64data","image","_context","split","shapes","addImage","lockAspectRatio","readAsDataURL","removeChild","_x","error","Office","onReady","onclick","URL"],"sourceRoot":""}