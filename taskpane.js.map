{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/define property getters","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/* global console, document, Excel, Office */\n\nOffice.onReady(() => {\n  document.getElementById(\"drawChart\").onclick = run;\n});\n\nexport async function run() {\n  try {\n    await Excel.run(async (context) => {\n      const sheet = context.workbook.worksheets.getActiveWorksheet();\n\n      // Get current selection\n      const range = context.workbook.getSelectedRange();\n      range.load(\"values, left, top\");\n      await context.sync();\n\n      const values = range.values;\n      if (values.length < 2) {\n        console.warn(\"Need at least header row + one data row\");\n        return;\n      }\n\n      // First row is header\n      const headers = values[0];\n      const rows = values.slice(1);\n\n      // Convert rows -> objects\n      const data = rows.map(row => {\n        let obj = {};\n        headers.forEach((h, i) => {\n          obj[h] = row[i];\n        });\n        return obj;\n      });\n\n      // Get chart type from dropdown\n      const chartType = document.getElementById(\"chartType\").value;\n\n      let spec;\n\n      if (chartType === \"point\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n          description: \"Colored scatter plot from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          mark: { type: \"point\", size: 100, tooltip: true },\n          encoding: {\n            x: { \n              field: headers[0], \n              type: \"quantitative\",\n              scale: { zero: false },\n              axis: {\n                title: headers[0],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            y: { \n              field: headers[1], \n              type: \"quantitative\",\n              scale: { zero: false },\n              axis: {\n                title: headers[1],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            // Add color encoding if 3rd column exists\n            ...(headers.length >= 3 && {\n              color: { \n                field: headers[2], \n                type: \"nominal\",\n                legend: {\n                  title: headers[2],\n                  titleFontSize: 12,\n                  labelFontSize: 11\n                }\n              }\n            }),\n            // Add shape encoding if 4th column exists\n            ...(headers.length >= 4 && {\n              shape: { \n                field: headers[3], \n                type: \"nominal\",\n                legend: {\n                  title: headers[3],\n                  titleFontSize: 12,\n                  labelFontSize: 11\n                }\n              }\n            })\n          },\n          config: {\n            font: \"Segoe UI\",\n            axis: {\n              labelColor: \"#605e5c\",\n              titleColor: \"#323130\",\n              gridColor: \"#f3f2f1\"\n            },\n            legend: {\n              titleColor: \"#323130\",\n              labelColor: \"#605e5c\"\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"line\") {\n        const transformedData = [];\n        const valueColumns = headers.slice(1);\n        data.forEach(row => {\n            valueColumns.forEach(colName => {\n            if (row[colName] !== null && row[colName] !== undefined && row[colName] !== \"\") {\n                transformedData.push({\n                [headers[0]]: row[headers[0]], // x-axis value (first column)\n                series: colName,               // series name (column header)\n                value: parseFloat(row[colName]) || 0  // y-axis value\n                });\n            }\n            });\n        });\n\n        spec = {\n            $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n            description: \"Multi-series line chart from Excel selection\",\n            background: \"white\",\n            config: { view: { stroke: \"transparent\" }},\n            data: { values: transformedData },\n            mark: { \n            type: \"line\", \n            point: false,\n            tooltip: true,\n            strokeWidth: 2\n            },\n            encoding: {\n            x: { \n                field: headers[0], \n                type: \"ordinal\",\n                axis: {\n                title: headers[0],\n                labelFontSize: 12,\n                titleFontSize: 14,\n                labelAngle: 0\n                }\n            },\n            y: { \n                field: \"value\", \n                type: \"quantitative\",\n                axis: {\n                title: \"Value\",\n                labelFontSize: 12,\n                titleFontSize: 14\n                }\n            },\n            color: { \n                field: \"series\", \n                type: \"nominal\",\n                scale: {\n                scheme: \"category10\"\n                },\n                legend: {\n                title: \"Series\",\n                titleFontSize: 12,\n                labelFontSize: 11\n                }\n            }\n            },\n            config: {\n            font: \"Segoe UI\",\n            axis: {\n                labelColor: \"#605e5c\",\n                titleColor: \"#323130\",\n                gridColor: \"#f3f2f1\"\n            },\n            legend: {\n                titleColor: \"#323130\",\n                labelColor: \"#605e5c\"\n            },\n            point: {\n                size: 60,\n                filled: true\n            }\n            }\n        };\n      }\n\n      else if (chartType === \"gantt\") {\n      function excelDateToJSDate(serial) {\n          return new Date(Math.round((serial - 25569) * 86400 * 1000));\n      }\n\n      const ganttData = rows.map(row => {\n          const id = row[0];\n          if (!id) return null;\n\n          // Start/end date handling\n          const start = typeof row[3] === \"number\" ? excelDateToJSDate(row[3]) : new Date(row[3]);\n          const end = typeof row[4] === \"number\" ? excelDateToJSDate(row[4]) : new Date(row[4]);\n\n          if (!(start instanceof Date) || isNaN(start) || !(end instanceof Date) || isNaN(end)) return null;\n\n          // Progress handling\n          let progress = 0;\n          if (row[5]) {\n              if (typeof row[5] === \"string\" && row[5].includes(\"%\")) {\n                  progress = parseFloat(row[5]) / 100;\n              } else if (row[5] > 1) {\n                  progress = row[5] / 100;\n              } else {\n                  progress = row[5];\n              }\n          }\n\n          return {\n              id,\n              parentId: row[1] || null,\n              name: row[2] || `Task ${id}`,\n              startDate: start,\n              endDate: end,\n              progress,\n              dependencies: row[6] ? String(row[6]).split(',').map(d => d.trim()) : []\n          };\n      }).filter(Boolean);\n\n      // Compute hierarchy + progressEnd\n      const taskMap = new Map(ganttData.map(t => [t.id, t]));\n      ganttData.forEach(task => {\n          let level = 0;\n          let current = task;\n          while (current.parentId && taskMap.has(current.parentId)) {\n              level++;\n              current = taskMap.get(current.parentId);\n          }\n          task.level = level;\n\n          // Precompute progressEnd\n          const duration = task.endDate - task.startDate;\n          task.progressEnd = new Date(task.startDate.getTime() + duration * task.progress);\n      });\n\n      // Sort tasks\n      ganttData.sort((a, b) => a.level - b.level || a.startDate - b.startDate);\n\n      spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n          description: \"Gantt Chart from Excel Data\",\n          width: 800,\n          height: Math.max(300, ganttData.length * 30),\n          data: { values: ganttData },\n          layer: [\n              // Background bars (full duration)\n              {\n                  mark: { type: \"bar\", opacity: 0.3, height: 20 },\n                  encoding: {\n                      y: {\n                          field: \"name\",\n                          type: \"nominal\",\n                          axis: { title: null, labelFontSize: 11 },\n                          sort: null\n                      },\n                      x: { field: \"startDate\", type: \"temporal\", axis: { title: \"Timeline\", format: \"%b %d\", labelAngle: -45 } },\n                      x2: { field: \"endDate\", type: \"temporal\" },\n                      color: {\n                          field: \"level\",\n                          type: \"ordinal\",\n                          scale: { scheme: \"category10\" },\n                          legend: { title: \"Level\" }\n                      },\n                      tooltip: [\n                          { field: \"name\", type: \"nominal\", title: \"Task\" },\n                          { field: \"startDate\", type: \"temporal\", title: \"Start\", format: \"%Y-%m-%d\" },\n                          { field: \"endDate\", type: \"temporal\", title: \"End\", format: \"%Y-%m-%d\" },\n                          { field: \"progress\", type: \"quantitative\", title: \"Progress\", format: \".0%\" }\n                      ]\n                  }\n              },\n              // Progress bars\n              {\n                  mark: { type: \"bar\", opacity: 0.8, height: 20 },\n                  encoding: {\n                      y: { field: \"name\", type: \"nominal\", sort: null },\n                      x: { field: \"startDate\", type: \"temporal\" },\n                      x2: { field: \"progressEnd\", type: \"temporal\" },\n                      color: {\n                          field: \"level\",\n                          type: \"ordinal\",\n                          scale: { scheme: \"category10\" }\n                      }\n                  }\n              },\n              // Task labels\n              {\n                  mark: { type: \"text\", align: \"left\", baseline: \"middle\", dx: 5, fontSize: 10 },\n                  encoding: {\n                      y: { field: \"name\", type: \"nominal\", sort: null },\n                      x: { field: \"endDate\", type: \"temporal\" },\n                      text: { field: \"progress\", type: \"quantitative\", format: \".0%\" },\n                      color: { value: \"#666\" }\n                  }\n              },\n              // Today line\n              {\n                  mark: { type: \"rule\", strokeDash: [4, 4], opacity: 0.5 },\n                  data: { values: [{ date: new Date().toISOString() }] },\n                  encoding: {\n                      x: { field: \"date\", type: \"temporal\" },\n                      color: { value: \"red\" },\n                      size: { value: 1 }\n                  }\n              }\n          ],\n          config: {\n              view: { stroke: null },\n              axis: { grid: true, gridColor: \"#f0f0f0\" }\n          }\n      };\n      }\n\n      else if (chartType === \"slope\") {\n        const timePeriods = [...new Set(data.map(d => d[headers[0]]))];\n        const categories = [...new Set(data.map(d => d[headers[1]]))];\n        \n        // Filter data for first and last periods only\n        const firstPeriod = timePeriods[0];\n        const lastPeriod = timePeriods[timePeriods.length - 1];\n        \n        const slopeData = data.filter(d => \n            d[headers[0]] === firstPeriod || d[headers[0]] === lastPeriod\n        );\n\n        // Check if values are percentages (between -1 and 1)\n        const allValues = slopeData.map(d => d[headers[2]]);\n        const isPercentage = allValues.every(v => v >= -1 && v <= 1);\n        const formatString = isPercentage ? \".1%\" : \",.0f\";\n\n        // Calculate dynamic dimensions based on number of categories\n        const dynamicHeight = Math.max(300, Math.min(600, categories.length * 40));\n        const dynamicWidth = 500;\n\n        spec = {\n            $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n            description: \"Slope chart from Excel selection\",\n            background: \"white\",\n            config: { \n            view: { stroke: \"transparent\" },\n            autosize: { type: \"fit\", contains: \"padding\" }\n            },\n            width: dynamicWidth,\n            height: dynamicHeight,\n            data: { values: slopeData },\n            encoding: {\n            x: {\n                field: headers[0],\n                type: \"ordinal\",\n                axis: {\n                title: null,\n                labelFontSize: 14,\n                labelFontWeight: \"bold\",\n                labelPadding: 10,\n                domain: false,\n                ticks: false,\n                labelColor: \"#323130\"\n                },\n                scale: { padding: 0.1 }\n            },\n            y: {\n                field: headers[2],\n                type: \"quantitative\",\n                axis: null,\n                scale: { zero: false }\n            },\n            color: {\n                field: headers[1],\n                type: \"nominal\",\n                legend: null,\n                scale: { scheme: \"category10\" }\n            }\n            },\n            layer: [\n            // Background grid lines\n            {\n                mark: {\n                type: \"rule\",\n                strokeDash: [2, 2],\n                opacity: 0.3\n                },\n                data: { values: [{}] },\n                encoding: {\n                x: { datum: firstPeriod },\n                x2: { datum: lastPeriod },\n                y: { value: 0 },\n                color: { value: \"#e0e0e0\" }\n                }\n            },\n            // Slope lines\n            {\n                mark: {\n                type: \"line\",\n                strokeWidth: 2,\n                opacity: 0.7,\n                tooltip: true\n                },\n                encoding: {\n                detail: { field: headers[1], type: \"nominal\" },\n                tooltip: [\n                    { field: headers[1], type: \"nominal\", title: \"Category\" },\n                    { field: headers[0], type: \"nominal\", title: \"Period\" },\n                    { field: headers[2], type: \"quantitative\", title: \"Value\", format: formatString }\n                ]\n                }\n            },\n            // Points at the ends\n            {\n                mark: {\n                type: \"circle\",\n                size: 100,\n                opacity: 1,\n                tooltip: true\n                }\n            },\n            // Left side value labels\n            {\n                transform: [\n                { filter: `datum['${headers[0]}'] == '${firstPeriod}'` }\n                ],\n                mark: {\n                type: \"text\",\n                align: \"right\",\n                baseline: \"middle\",\n                dx: -8,\n                fontSize: 11,\n                fontWeight: \"normal\"\n                },\n                encoding: {\n                text: { \n                    field: headers[2], \n                    type: \"quantitative\",\n                    format: formatString\n                }\n                }\n            },\n            // Left side category labels (for top values)\n            {\n                transform: [\n                { filter: `datum['${headers[0]}'] == '${firstPeriod}'` },\n                {\n                    window: [{ op: \"rank\", as: \"rank\" }],\n                    sort: [{ field: headers[2], order: \"descending\" }]\n                },\n                { filter: \"datum.rank <= 3\" }\n                ],\n                mark: {\n                type: \"text\",\n                align: \"right\",\n                baseline: \"bottom\",\n                dx: -8,\n                dy: -12,\n                fontSize: 10,\n                fontWeight: \"bold\",\n                fontStyle: \"italic\"\n                },\n                encoding: {\n                text: { field: headers[1], type: \"nominal\" }\n                }\n            },\n            // Right side value labels\n            {\n                transform: [\n                { filter: `datum['${headers[0]}'] == '${lastPeriod}'` }\n                ],\n                mark: {\n                type: \"text\",\n                align: \"left\",\n                baseline: \"middle\",\n                dx: 8,\n                fontSize: 11,\n                fontWeight: \"normal\"\n                },\n                encoding: {\n                text: { \n                    field: headers[2], \n                    type: \"quantitative\",\n                    format: formatString\n                }\n                }\n            },\n            // Right side category labels\n            {\n                transform: [\n                { filter: `datum['${headers[0]}'] == '${lastPeriod}'` }\n                ],\n                mark: {\n                type: \"text\",\n                align: \"left\",\n                baseline: \"middle\",\n                dx: 35,\n                fontSize: 10,\n                fontWeight: \"bold\"\n                },\n                encoding: {\n                text: { field: headers[1], type: \"nominal\" }\n                }\n            }\n            ],\n            config: {\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            text: { \n                font: \"Segoe UI\", \n                fontSize: 11, \n                fill: \"#605E5C\" \n            },\n            axis: {\n                labelColor: \"#605e5c\",\n                titleColor: \"#323130\",\n                gridColor: \"#f3f2f1\"\n            }\n            }\n        };\n      }\n\n      else if (chartType === \"horizon\") {\n        const horizonData = data.map((row, index) => ({\n            x: row[headers[0]] || index + 1,\n            y: parseFloat(row[headers[1]]) || 0\n        }));\n\n        // Calculate data range and bands\n        const yValues = horizonData.map(d => d.y);\n        const maxY = Math.max(...yValues);\n        const minY = Math.min(...yValues);\n        const range = maxY - minY;\n        \n        // Define number of bands (typically 2-4 for horizon graphs)\n        const numBands = 3;\n        const bandHeight = range / (numBands * 2); // Divide by 2 for positive and negative\n        const baseline = minY + range / 2; // Use middle as baseline\n        \n        // Calculate dynamic dimensions\n        const dataPoints = horizonData.length;\n        const dynamicWidth = Math.max(300, Math.min(800, dataPoints * 15));\n\n        spec = {\n            \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",\n            \"description\": \"Horizon Graph from Excel selection (IDL methodology)\",\n            \"width\": dynamicWidth,\n            \"height\": 60,\n            \"background\": \"white\",\n            \"config\": { \n            \"view\": { \"stroke\": \"transparent\" },\n            \"area\": {\"interpolate\": \"monotone\"}\n            },\n            \"data\": { \"values\": horizonData },\n            \"encoding\": {\n            \"x\": {\n                \"field\": \"x\",\n                \"type\": headers[0].toLowerCase().includes('date') ? \"temporal\" : \"quantitative\",\n                \"scale\": {\"zero\": false, \"nice\": false},\n                \"axis\": {\n                \"title\": headers[0],\n                \"labelFontSize\": 10,\n                \"titleFontSize\": 12,\n                \"labelColor\": \"#605e5c\",\n                \"titleColor\": \"#323130\",\n                \"font\": \"Segoe UI\"\n                }\n            },\n            \"y\": {\n                \"type\": \"quantitative\",\n                \"scale\": {\"domain\": [0, bandHeight]},\n                \"axis\": {\n                \"title\": headers[1],\n                \"orient\": \"left\",\n                \"labelFontSize\": 10,\n                \"titleFontSize\": 12,\n                \"labelColor\": \"#605e5c\",\n                \"titleColor\": \"#323130\",\n                \"font\": \"Segoe UI\",\n                \"tickCount\": 3\n                }\n            }\n            },\n            \"layer\": [\n            // Band 1 (lightest positive)\n            {\n                \"transform\": [\n                {\"calculate\": `max(0, min(datum.y - ${baseline}, ${bandHeight}))`, \"as\": \"band1\"}\n                ],\n                \"mark\": {\n                \"type\": \"area\",\n                \"clip\": true,\n                \"opacity\": 0.3,\n                \"color\": \"#4a90e2\",\n                \"interpolate\": \"monotone\"\n                },\n                \"encoding\": {\n                \"y\": {\"field\": \"band1\"}\n                }\n            },\n            // Band 2 (medium positive)\n            {\n                \"transform\": [\n                {\"calculate\": `max(0, min(datum.y - ${baseline} - ${bandHeight}, ${bandHeight}))`, \"as\": \"band2\"}\n                ],\n                \"mark\": {\n                \"type\": \"area\",\n                \"clip\": true,\n                \"opacity\": 0.6,\n                \"color\": \"#2e7bd6\",\n                \"interpolate\": \"monotone\"\n                },\n                \"encoding\": {\n                \"y\": {\"field\": \"band2\"}\n                }\n            },\n            // Band 3 (darkest positive)\n            {\n                \"transform\": [\n                {\"calculate\": `max(0, datum.y - ${baseline} - ${bandHeight * 2})`, \"as\": \"band3\"}\n                ],\n                \"mark\": {\n                \"type\": \"area\",\n                \"clip\": true,\n                \"opacity\": 0.9,\n                \"color\": \"#1a5bb8\",\n                \"interpolate\": \"monotone\"\n                },\n                \"encoding\": {\n                \"y\": {\"field\": \"band3\"}\n                }\n            },\n            // Band -1 (lightest negative, mirrored)\n            {\n                \"transform\": [\n                {\"calculate\": `max(0, min(${baseline} - datum.y, ${bandHeight}))`, \"as\": \"nband1\"}\n                ],\n                \"mark\": {\n                \"type\": \"area\",\n                \"clip\": true,\n                \"opacity\": 0.3,\n                \"color\": \"#e74c3c\",\n                \"interpolate\": \"monotone\"\n                },\n                \"encoding\": {\n                \"y\": {\"field\": \"nband1\"}\n                }\n            },\n            // Band -2 (medium negative, mirrored)\n            {\n                \"transform\": [\n                {\"calculate\": `max(0, min(${baseline} - datum.y - ${bandHeight}, ${bandHeight}))`, \"as\": \"nband2\"}\n                ],\n                \"mark\": {\n                \"type\": \"area\",\n                \"clip\": true,\n                \"opacity\": 0.6,\n                \"color\": \"#c0392b\",\n                \"interpolate\": \"monotone\"\n                },\n                \"encoding\": {\n                \"y\": {\"field\": \"nband2\"}\n                }\n            },\n            // Band -3 (darkest negative, mirrored)\n            {\n                \"transform\": [\n                {\"calculate\": `max(0, ${baseline} - datum.y - ${bandHeight * 2})`, \"as\": \"nband3\"}\n                ],\n                \"mark\": {\n                \"type\": \"area\",\n                \"clip\": true,\n                \"opacity\": 0.9,\n                \"color\": \"#a93226\",\n                \"interpolate\": \"monotone\"\n                },\n                \"encoding\": {\n                \"y\": {\"field\": \"nband3\"}\n                }\n            }\n            ]\n        };\n      }\n\n      else if (chartType === \"tree\") {\n        const nodes = new Map();\n\n        data.forEach((row, i) => {\n            const parent = row[headers[0]] || \"\";\n            const child = row[headers[1]] || `node_${i}`;\n            const value = headers.length >= 3 ? (parseFloat(row[headers[2]]) || 1) : 1;\n            \n            // Add parent node if it doesn't exist and is not empty\n            if (parent && !nodes.has(parent)) {\n            nodes.set(parent, {\n                id: parent,\n                parent: \"\",\n                name: parent,\n                value: 1\n            });\n            }\n            \n            // Add child node\n            if (!nodes.has(child)) {\n            nodes.set(child, {\n                id: child,\n                parent: parent,\n                name: child,\n                value: value\n            });\n            } else {\n            // Update parent and value if child already exists\n            const existingNode = nodes.get(child);\n            existingNode.parent = parent;\n            existingNode.value = value;\n            }\n        });\n        \n        // Convert Map to array\n        const treeData = Array.from(nodes.values());\n        \n        // Find root nodes (nodes with no parent or parent not in dataset)\n        const allIds = new Set(treeData.map(d => d.id));\n        treeData.forEach(node => {\n            if (node.parent && !allIds.has(node.parent)) {\n            node.parent = \"\"; // Make it a root node if parent doesn't exist\n            }\n        });\n\n        // Calculate dynamic dimensions based on data size\n        const nodeCount = treeData.length;\n        const dynamicWidth = Math.max(600, Math.min(1200, nodeCount * 40));\n        const dynamicHeight = Math.max(400, Math.min(1600, nodeCount * 30));\n\n        spec = {\n            \"$schema\": \"https://vega.github.io/schema/vega/v6.json\",\n            \"description\": \"Tree diagram from Excel selection\",\n            \"width\": dynamicWidth,\n            \"height\": dynamicHeight,\n            \"padding\": 20,\n            \"background\": \"white\",\n            \"config\": { \"view\": { \"stroke\": \"transparent\" }},\n\n            \"signals\": [\n            {\n                \"name\": \"layout\", \n                \"value\": \"tidy\"\n            },\n            {\n                \"name\": \"links\", \n                \"value\": \"diagonal\"\n            }\n            ],\n\n            \"data\": [\n            {\n                \"name\": \"tree\",\n                \"values\": treeData,\n                \"transform\": [\n                {\n                    \"type\": \"stratify\",\n                    \"key\": \"id\",\n                    \"parentKey\": \"parent\"\n                },\n                {\n                    \"type\": \"tree\",\n                    \"method\": {\"signal\": \"layout\"},\n                    \"size\": [{\"signal\": \"height - 40\"}, {\"signal\": \"width - 100\"}],\n                    \"as\": [\"y\", \"x\", \"depth\", \"children\"]\n                }\n                ]\n            },\n            {\n                \"name\": \"links\",\n                \"source\": \"tree\",\n                \"transform\": [\n                { \"type\": \"treelinks\" },\n                {\n                    \"type\": \"linkpath\",\n                    \"orient\": \"horizontal\",\n                    \"shape\": {\"signal\": \"links\"}\n                }\n                ]\n            }\n            ],\n\n            \"scales\": [\n            {\n                \"name\": \"color\",\n                \"type\": \"ordinal\",\n                \"range\": [\"#0078d4\", \"#00bcf2\", \"#40e0d0\", \"#00cc6a\", \"#10893e\", \"#107c10\", \"#bad80a\", \"#ffb900\", \"#ff8c00\", \"#d13438\"],\n                \"domain\": {\"data\": \"tree\", \"field\": \"depth\"}\n            },\n            {\n                \"name\": \"size\",\n                \"type\": \"linear\",\n                \"range\": [100, 400],\n                \"domain\": {\"data\": \"tree\", \"field\": \"value\"}\n            }\n            ],\n\n            \"marks\": [\n            {\n                \"type\": \"path\",\n                \"from\": {\"data\": \"links\"},\n                \"encode\": {\n                \"update\": {\n                    \"path\": {\"field\": \"path\"},\n                    \"stroke\": {\"value\": \"#8a8886\"},\n                    \"strokeWidth\": {\"value\": 2},\n                    \"strokeOpacity\": {\"value\": 0.6}\n                }\n                }\n            },\n            {\n                \"type\": \"symbol\",\n                \"from\": {\"data\": \"tree\"},\n                \"encode\": {\n                \"enter\": {\n                    \"stroke\": {\"value\": \"#ffffff\"},\n                    \"strokeWidth\": {\"value\": 2}\n                },\n                \"update\": {\n                    \"x\": {\"field\": \"x\"},\n                    \"y\": {\"field\": \"y\"},\n                    \"size\": {\"scale\": \"size\", \"field\": \"value\"},\n                    \"fill\": {\"scale\": \"color\", \"field\": \"depth\"},\n                    \"fillOpacity\": {\"value\": 0.8},\n                    \"tooltip\": {\n                    \"signal\": \"{'Name': datum.name, 'ID': datum.id, 'Parent': datum.parent, 'Depth': datum.depth, 'Value': datum.value}\"\n                    }\n                },\n                \"hover\": {\n                    \"fillOpacity\": {\"value\": 1.0},\n                    \"strokeWidth\": {\"value\": 3}\n                }\n                }\n            },\n            {\n                \"type\": \"text\",\n                \"from\": {\"data\": \"tree\"},\n                \"encode\": {\n                \"enter\": {\n                    \"fontSize\": {\"value\": 11},\n                    \"baseline\": {\"value\": \"middle\"},\n                    \"font\": {\"value\": \"Segoe UI\"},\n                    \"fontWeight\": {\"value\": \"bold\"}\n                },\n                \"update\": {\n                    \"x\": {\"field\": \"x\"},\n                    \"y\": {\"field\": \"y\"},\n                    \"text\": {\"field\": \"name\"},\n                    \"dx\": {\"signal\": \"datum.children ? -12 : 12\"},\n                    \"align\": {\"signal\": \"datum.children ? 'right' : 'left'\"},\n                    \"fill\": {\"value\": \"#323130\"}\n                }\n                }\n            }\n            ]\n        };\n      }\n\n      else if (chartType === \"sunburst\") {\n        const nodes = new Map();\n        data.forEach((row, i) => {\n            const parent = row[headers[0]] || \"\";\n            const child = row[headers[1]] || `node_${i}`;\n            const value = headers.length >= 3 ? (parseFloat(row[headers[2]]) || 1) : 1;\n            \n            // Add parent node if it doesn't exist and is not empty\n            if (parent && !nodes.has(parent)) {\n            nodes.set(parent, {\n                id: parent,\n                parent: \"\",\n                name: parent,\n                size: 0 // Will be calculated later\n            });\n            }\n            \n            // Add child node\n            if (!nodes.has(child)) {\n            nodes.set(child, {\n                id: child,\n                parent: parent,\n                name: child,\n                size: value\n            });\n            } else {\n            // Update parent and value if child already exists\n            const existingNode = nodes.get(child);\n            existingNode.parent = parent;\n            existingNode.size = value;\n            }\n        });\n        \n        // Convert Map to array\n        const hierarchicalData = Array.from(nodes.values());\n        \n        // Find root nodes (nodes with no parent or parent not in dataset)\n        const allIds = new Set(hierarchicalData.map(d => d.id));\n        hierarchicalData.forEach(node => {\n            if (node.parent && !allIds.has(node.parent)) {\n            node.parent = \"\"; // Make it a root node if parent doesn't exist\n            }\n        });\n\n        // Calculate chart size based on data complexity\n        const nodeCount = hierarchicalData.length;\n        const chartSize = Math.max(400, Math.min(600, nodeCount * 15 + 300));\n\n        spec = {\n            \"$schema\": \"https://vega.github.io/schema/vega/v6.json\",\n            \"description\": \"Sunburst chart from Excel selection\",\n            \"width\": chartSize,\n            \"height\": chartSize,\n            \"padding\": 10,\n            \"autosize\": \"none\",\n            \"background\": \"white\",\n            \"config\": { \"view\": { \"stroke\": \"transparent\" }},\n\n            \"signals\": [\n            {\n                \"name\": \"centerX\",\n                \"update\": \"width / 2\"\n            },\n            {\n                \"name\": \"centerY\", \n                \"update\": \"height / 2\"\n            },\n            {\n                \"name\": \"outerRadius\",\n                \"update\": \"min(width, height) / 2 - 10\"\n            }\n            ],\n\n            \"data\": [\n            {\n                \"name\": \"tree\",\n                \"values\": hierarchicalData,\n                \"transform\": [\n                {\n                    \"type\": \"stratify\",\n                    \"key\": \"id\",\n                    \"parentKey\": \"parent\"\n                },\n                {\n                    \"type\": \"partition\",\n                    \"field\": \"size\",\n                    \"sort\": {\"field\": \"size\", \"order\": \"descending\"},\n                    \"size\": [{\"signal\": \"2 * PI\"}, {\"signal\": \"outerRadius\"}],\n                    \"as\": [\"a0\", \"r0\", \"a1\", \"r1\", \"depth\", \"children\"]\n                }\n                ]\n            }\n            ],\n\n            \"scales\": [\n            {\n                \"name\": \"color\",\n                \"type\": \"ordinal\",\n                \"domain\": {\"data\": \"tree\", \"field\": \"depth\"},\n                \"range\": [\n                \"#0078d4\", \"#00bcf2\", \"#40e0d0\", \"#00cc6a\", \"#10893e\", \n                \"#107c10\", \"#bad80a\", \"#ffb900\", \"#ff8c00\", \"#d13438\",\n                \"#8764b8\", \"#e3008c\", \"#00b7c3\", \"#038387\", \"#486991\"\n                ]\n            },\n            {\n                \"name\": \"opacity\",\n                \"type\": \"linear\",\n                \"domain\": {\"data\": \"tree\", \"field\": \"depth\"},\n                \"range\": [0.8, 0.4]\n            }\n            ],\n\n            \"marks\": [\n            {\n                \"type\": \"arc\",\n                \"from\": {\"data\": \"tree\"},\n                \"encode\": {\n                \"enter\": {\n                    \"x\": {\"signal\": \"centerX\"},\n                    \"y\": {\"signal\": \"centerY\"},\n                    \"stroke\": {\"value\": \"white\"},\n                    \"strokeWidth\": {\"value\": 1}\n                },\n                \"update\": {\n                    \"startAngle\": {\"field\": \"a0\"},\n                    \"endAngle\": {\"field\": \"a1\"},\n                    \"innerRadius\": {\"field\": \"r0\"},\n                    \"outerRadius\": {\"field\": \"r1\"},\n                    \"fill\": {\"scale\": \"color\", \"field\": \"depth\"},\n                    \"fillOpacity\": {\"scale\": \"opacity\", \"field\": \"depth\"}\n                }\n                }\n            },\n            {\n                \"type\": \"text\",\n                \"from\": {\"data\": \"tree\"},\n                \"encode\": {\n                \"enter\": {\n                    \"x\": {\"signal\": \"centerX\"},\n                    \"y\": {\"signal\": \"centerY\"},\n                    \"radius\": {\"signal\": \"(datum.r0 + datum.r1) / 2\"},\n                    \"theta\": {\"signal\": \"(datum.a0 + datum.a1) / 2\"},\n                    \"fill\": {\"value\": \"#323130\"},\n                    \"font\": {\"value\": \"Segoe UI\"},\n                    \"fontSize\": {\"value\": 10},\n                    \"fontWeight\": {\"value\": \"bold\"},\n                    \"align\": {\"value\": \"center\"},\n                    \"baseline\": {\"value\": \"middle\"}\n                },\n                \"update\": {\n                    \"text\": {\n                    \"signal\": \"(datum.r1 - datum.r0) > 20 && (datum.a1 - datum.a0) > 0.3 ? datum.name : ''\"\n                    },\n                    \"opacity\": {\n                    \"signal\": \"(datum.r1 - datum.r0) > 20 && (datum.a1 - datum.a0) > 0.3 ? 1 : 0\"\n                    }\n                }\n                }\n            }\n            ]\n        };\n      }\n\n      else if (chartType === \"radar\") {\n        const radarData = [];\n        const dimensions = headers.slice(1); // All columns except first are dimensions\n        \n        data.forEach((row, seriesIndex) => {\n            const seriesName = row[headers[0]] || `Series ${seriesIndex + 1}`;\n            \n            dimensions.forEach(dimension => {\n            const value = parseFloat(row[dimension]) || 0;\n            radarData.push({\n                series: seriesName,\n                dimension: dimension,\n                value: value,\n                category: seriesIndex\n            });\n            });\n        });\n\n        // Get unique dimensions for grid\n        const uniqueDimensions = [...new Set(radarData.map(d => d.dimension))];\n\n        spec = {\n            \"$schema\": \"https://vega.github.io/schema/vega/v6.json\",\n            \"description\": \"Radar chart from Excel selection\",\n            \"width\": 400,\n            \"height\": 400,\n            \"padding\": 60,\n            \"autosize\": {\"type\": \"none\", \"contains\": \"padding\"},\n            \"background\": \"white\",\n            \"config\": { \"view\": { \"stroke\": \"transparent\" }},\n\n            \"signals\": [\n            {\"name\": \"radius\", \"update\": \"width / 2\"}\n            ],\n\n            \"data\": [\n            {\n                \"name\": \"table\",\n                \"values\": radarData\n            },\n            {\n                \"name\": \"dimensions\",\n                \"values\": uniqueDimensions.map(d => ({dimension: d}))\n            }\n            ],\n\n            \"scales\": [\n            {\n                \"name\": \"angular\",\n                \"type\": \"point\",\n                \"range\": {\"signal\": \"[-PI, PI]\"},\n                \"padding\": 0.5,\n                \"domain\": uniqueDimensions\n            },\n            {\n                \"name\": \"radial\",\n                \"type\": \"linear\",\n                \"range\": {\"signal\": \"[0, radius]\"},\n                \"zero\": true,\n                \"nice\": true,\n                \"domain\": {\"data\": \"table\", \"field\": \"value\"},\n                \"domainMin\": 0\n            },\n            {\n                \"name\": \"color\",\n                \"type\": \"ordinal\",\n                \"domain\": {\"data\": \"table\", \"field\": \"category\"},\n                \"range\": [\n                \"#0078d4\", \"#00bcf2\", \"#40e0d0\", \"#00cc6a\", \"#10893e\",\n                \"#107c10\", \"#bad80a\", \"#ffb900\", \"#ff8c00\", \"#d13438\"\n                ]\n            }\n            ],\n\n            \"encode\": {\n            \"enter\": {\n                \"x\": {\"signal\": \"radius\"},\n                \"y\": {\"signal\": \"radius\"}\n            }\n            },\n\n            \"marks\": [\n            {\n                \"type\": \"group\",\n                \"name\": \"categories\",\n                \"zindex\": 1,\n                \"from\": {\n                \"facet\": {\"data\": \"table\", \"name\": \"facet\", \"groupby\": [\"category\", \"series\"]}\n                },\n                \"marks\": [\n                {\n                    \"type\": \"line\",\n                    \"name\": \"category-line\",\n                    \"from\": {\"data\": \"facet\"},\n                    \"encode\": {\n                    \"enter\": {\n                        \"interpolate\": {\"value\": \"linear-closed\"},\n                        \"x\": {\"signal\": \"scale('radial', datum.value) * cos(scale('angular', datum.dimension))\"},\n                        \"y\": {\"signal\": \"scale('radial', datum.value) * sin(scale('angular', datum.dimension))\"},\n                        \"stroke\": {\"scale\": \"color\", \"field\": \"category\"},\n                        \"strokeWidth\": {\"value\": 2},\n                        \"fill\": {\"scale\": \"color\", \"field\": \"category\"},\n                        \"fillOpacity\": {\"value\": 0.1},\n                        \"strokeOpacity\": {\"value\": 0.8}\n                    }\n                    }\n                },\n                {\n                    \"type\": \"symbol\",\n                    \"name\": \"category-points\",\n                    \"from\": {\"data\": \"facet\"},\n                    \"encode\": {\n                    \"enter\": {\n                        \"x\": {\"signal\": \"scale('radial', datum.value) * cos(scale('angular', datum.dimension))\"},\n                        \"y\": {\"signal\": \"scale('radial', datum.value) * sin(scale('angular', datum.dimension))\"},\n                        \"size\": {\"value\": 50},\n                        \"fill\": {\"scale\": \"color\", \"field\": \"category\"},\n                        \"stroke\": {\"value\": \"white\"},\n                        \"strokeWidth\": {\"value\": 1}\n                    }\n                    }\n                }\n                ]\n            },\n            {\n                \"type\": \"rule\",\n                \"name\": \"radial-grid\",\n                \"from\": {\"data\": \"dimensions\"},\n                \"zindex\": 0,\n                \"encode\": {\n                \"enter\": {\n                    \"x\": {\"value\": 0},\n                    \"y\": {\"value\": 0},\n                    \"x2\": {\"signal\": \"radius * cos(scale('angular', datum.dimension))\"},\n                    \"y2\": {\"signal\": \"radius * sin(scale('angular', datum.dimension))\"},\n                    \"stroke\": {\"value\": \"#e1e4e8\"},\n                    \"strokeWidth\": {\"value\": 1}\n                }\n                }\n            },\n            {\n                \"type\": \"text\",\n                \"name\": \"dimension-label\",\n                \"from\": {\"data\": \"dimensions\"},\n                \"zindex\": 1,\n                \"encode\": {\n                \"enter\": {\n                    \"x\": {\"signal\": \"(radius + 20) * cos(scale('angular', datum.dimension))\"},\n                    \"y\": {\"signal\": \"(radius + 20) * sin(scale('angular', datum.dimension))\"},\n                    \"text\": {\"field\": \"dimension\"},\n                    \"align\": [\n                    {\n                        \"test\": \"abs(scale('angular', datum.dimension)) > PI / 2\",\n                        \"value\": \"right\"\n                    },\n                    {\n                        \"value\": \"left\"\n                    }\n                    ],\n                    \"baseline\": [\n                    {\n                        \"test\": \"scale('angular', datum.dimension) > 0\", \n                        \"value\": \"top\"\n                    },\n                    {\n                        \"test\": \"scale('angular', datum.dimension) == 0\", \n                        \"value\": \"middle\"\n                    },\n                    {\n                        \"value\": \"bottom\"\n                    }\n                    ],\n                    \"fill\": {\"value\": \"#323130\"},\n                    \"fontWeight\": {\"value\": \"bold\"},\n                    \"font\": {\"value\": \"Segoe UI\"},\n                    \"fontSize\": {\"value\": 12}\n                }\n                }\n            },\n            {\n                \"type\": \"line\",\n                \"name\": \"outer-line\",\n                \"from\": {\"data\": \"radial-grid\"},\n                \"encode\": {\n                \"enter\": {\n                    \"interpolate\": {\"value\": \"linear-closed\"},\n                    \"x\": {\"field\": \"x2\"},\n                    \"y\": {\"field\": \"y2\"},\n                    \"stroke\": {\"value\": \"#8a8886\"},\n                    \"strokeWidth\": {\"value\": 2},\n                    \"strokeOpacity\": {\"value\": 0.6}\n                }\n                }\n            }\n            ]\n        };\n      }\n\n      else if (chartType === \"waterfall\") {\n        // Process waterfall data inline - set last entry's amount to 0\n        const processedData = [...data];\n        if (processedData.length > 0) {\n          processedData[processedData.length - 1] = {\n            ...processedData[processedData.length - 1],\n            [headers[1]]: 0\n          };\n        }\n\n        // Calculate dynamic dimensions\n        const numDataPoints = data.length;\n        const dynamicWidth = Math.max(400, Math.min(1200, numDataPoints * 70));\n        const maxAmount = Math.max(...data.map(d => Math.abs(d[headers[1]])));\n        const dynamicHeight = Math.max(300, Math.min(600, maxAmount / 100 + 200));\n\n        spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Waterfall chart from Excel selection\",\n\t      background: \"white\",\n        data: { values: processedData },\n\t      config: { view: { stroke: \"transparent\" }},\n          width: dynamicWidth,\n          height: dynamicHeight,\n          transform: [\n            {\"window\": [{\"op\": \"sum\", \"field\": headers[1], \"as\": \"sum\"}]},\n            {\"window\": [{\"op\": \"lead\", \"field\": headers[0], \"as\": \"lead\"}]},\n            {\n              \"calculate\": `datum.lead === null ? datum.${headers[0]} : datum.lead`,\n              \"as\": \"lead\"\n            },\n            {\n              \"calculate\": `datum.${headers[0]} === '${data[data.length - 1][headers[0]]}' ? 0 : datum.sum - datum.${headers[1]}`,\n              \"as\": \"previous_sum\"\n            },\n            {\n              \"calculate\": `datum.${headers[0]} === '${data[data.length - 1][headers[0]]}' ? datum.sum : datum.${headers[1]}`,\n              \"as\": \"amount\"\n            },\n            {\n              \"calculate\": `datum.${headers[0]} === '${data[0][headers[0]]}' ? datum.${headers[1]} / 2 : datum.${headers[0]} === '${data[data.length - 1][headers[0]]}' ? datum.${headers[1]} / 2 : (datum.sum + datum.previous_sum) / 2`,\n              \"as\": \"center\"\n            },\n            {\n              \"calculate\": `datum.${headers[0]} === '${data[data.length - 1][headers[0]]}' ? datum.sum : (datum.${headers[0]} !== '${data[0][headers[0]]}' && datum.${headers[0]} !== '${data[data.length - 1][headers[0]]}' && datum.${headers[1]} > 0 ? '+' : '') + datum.${headers[1]}`,\n              \"as\": \"text_amount\"\n            },\n            {\"calculate\": \"(datum.sum + datum.previous_sum) / 2\", \"as\": \"center\"}\n          ],\n          encoding: {\n            x: {\n              field: headers[0],\n              type: \"ordinal\",\n              sort: null,\n              axis: {\"labelAngle\": 0, \"title\": headers[0]},\n              scale: {\"paddingInner\": 0.1, \"paddingOuter\": 0.05}\n            }\n          },\n          layer: [\n            {\n              mark: {\"type\": \"bar\", \"size\": 60},\n              encoding: {\n                y: {\n                  field: \"previous_sum\",\n                  type: \"quantitative\",\n                  title: headers[1]\n                },\n                y2: {\"field\": \"sum\"},\n                color: {\n                  condition: [\n                    {\n                      test: `datum.${headers[0]} === '${data[0][headers[0]]}' || datum.${headers[0]} === '${data[data.length - 1][headers[0]]}'`,\n                      value: \"#00B0F0\"\n                    },\n                    {\"test\": \"datum.sum < datum.previous_sum\", \"value\": \"#E15759\"}\n                  ],\n                  value: \"#70AD47\"\n                }\n              }\n            },\n            {\n              mark: {\n                type: \"rule\",\n                color: \"#8F8F8F\",\n                opacity: 1,\n                strokeWidth: 2,\n                xOffset: -30,\n                x2Offset: 30\n              },\n              encoding: {\n                x2: {\"field\": \"lead\"},\n                y: {\"field\": \"sum\", \"type\": \"quantitative\"}\n              }\n            },\n            {\n              \"mark\": {\n                type: \"text\", \n                dy: {\"expr\": \"datum.amount >= 0 ? -4 : 4\"}, \n                baseline: {\"expr\": \"datum.amount >= 0 ? 'bottom' : 'top'\"}\n              },\n              encoding: {\n                y: {\"field\": \"sum\", \"type\": \"quantitative\"},\n                text: {\"field\": \"sum\", \"type\": \"nominal\"},\n                opacity: {\n                  \"condition\": {\n                    \"test\": `datum.${headers[0]} === '${data[0][headers[0]]}' || datum.${headers[0]} === '${data[data.length - 1][headers[0]]}'`,\n                    \"value\": 0\n                  },\n                  \"value\": 1\n                }\n              }\n            },\n            {\n              mark: {\"type\": \"text\", \"fontWeight\": \"bold\", \"baseline\": \"middle\"},\n              encoding: {\n                y: {\"field\": \"center\", \"type\": \"quantitative\"},\n                text: {\"field\": \"text_amount\", \"type\": \"nominal\"},\n                color: {\n                  condition: [\n                    {\n                      test: `datum.${headers[0]} === '${data[0][headers[0]]}' || datum.${headers[0]} === '${data[data.length - 1][headers[0]]}'`,\n                      value: \"#725a30\"\n                    }\n                  ],\n                  value: \"white\"\n                }\n              }\n            }\n          ],\n          config: {\"text\": {\"fontWeight\": \"bold\", \"color\": \"#D9D9D9\"}}\n        };\n      }\n\n      else if (chartType === \"bullet\") {\n      const data = rows.map(r => ({\n        title: r[0],\n        ranges: [+r[1], +r[2], +r[3]],\n        measures: [+r[4], +r[5]],\n        markers: [+r[6]]\n      }));\n\n      spec = {\n        \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        \"data\": { \"values\": data },\n        \"facet\": {\n        \"row\": {\n            \"field\": \"title\", \"type\": \"ordinal\",\n            \"header\": { \"labelAngle\": 0, \"title\": \"\", \"labelAlign\": \"left\" }\n        }\n        },\n        \"spacing\": 10,\n        \"spec\": {\n        \"encoding\": {\n            \"x\": {\n            \"type\": \"quantitative\",\n            \"scale\": { \"nice\": false },\n            \"title\": null\n            }\n        },\n        \"layer\": [\n            { \"mark\": { \"type\": \"bar\", \"color\": \"#eee\" }, \"encoding\": { \"x\": { \"field\": \"ranges[2]\" } } },\n            { \"mark\": { \"type\": \"bar\", \"color\": \"#ddd\" }, \"encoding\": { \"x\": { \"field\": \"ranges[1]\" } } },\n            { \"mark\": { \"type\": \"bar\", \"color\": \"#ccc\" }, \"encoding\": { \"x\": { \"field\": \"ranges[0]\" } } },\n            { \"mark\": { \"type\": \"bar\", \"color\": \"lightsteelblue\", \"size\": 10 }, \"encoding\": { \"x\": { \"field\": \"measures[1]\" } } },\n            { \"mark\": { \"type\": \"bar\", \"color\": \"steelblue\", \"size\": 10 }, \"encoding\": { \"x\": { \"field\": \"measures[0]\" } } },\n            { \"mark\": { \"type\": \"tick\", \"color\": \"black\" }, \"encoding\": { \"x\": { \"field\": \"markers[0]\" } } }\n        ]\n        },\n        \"resolve\": { \"scale\": { \"x\": \"independent\" } },\n        \"config\": { \"tick\": { \"thickness\": 2 }, \"scale\": { \"barBandPaddingInner\": 0 } }\n      };\n      }\n\n      else if (chartType === \"box\") {\n      // Expect headers: Category | Value\n      const data = rows\n        .filter(r => r[0] && !isNaN(+r[1]))\n        .map(r => ({\n          category: r[0],\n          value: +r[1]\n        }));\n\n      spec = {\n        \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",\n        \"description\": \"Box plot from Excel selection\",\n        \"data\": { \"values\": data },\n        \"mark\": {\n          \"type\": \"boxplot\",\n          \"extent\": \"min-max\"   // show whiskers from min to max\n        },\n        \"encoding\": {\n          \"x\": { \"field\": \"category\", \"type\": \"nominal\" },\n          \"y\": {\n            \"field\": \"value\",\n            \"type\": \"quantitative\",\n            \"scale\": { \"zero\": false }\n          },\n          \"color\": {\n            \"field\": \"category\",\n            \"type\": \"nominal\",\n            \"legend\": null\n          }\n        }\n      };\n      }\n\n      else if (chartType === \"pie\") {\n        spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        description: \"Pie chart from Excel selection\",\n        data: { values: data },\n        mark: { type: \"arc\", outerRadius: 120 },\n        encoding: {\n          theta: { field: headers[1], type: \"quantitative\" },\n          color: { field: headers[0], type: \"nominal\" }\n          }\n        };\n      }\n\n      else if (chartType === \"histogram\") {\n      // Expect a single numeric column\n      const data = rows\n        .filter(r => !isNaN(+r[0]))\n        .map(r => ({ value: +r[0] }));\n\n      spec = {\n        \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",\n        \"description\": \"Histogram from Excel selection\",\n        \"data\": { \"values\": data },\n        \"mark\": \"bar\",\n        \"encoding\": {\n          \"x\": {\n            \"field\": \"value\",\n            \"bin\": { \"maxbins\": 20 },   // adjust bin count here\n            \"type\": \"quantitative\",\n            \"axis\": { \"title\": \"Value\" }\n          },\n          \"y\": {\n            \"aggregate\": \"count\",\n            \"type\": \"quantitative\",\n            \"axis\": { \"title\": \"Count\" }\n          }\n        }\n      };\n      }\n\n      else if (chartType === \"mekko\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega/v5.json\",\n          description: \"Marimekko chart from Excel selection\",\n          width: 800,\n          height: 500,\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          view: { stroke: null },\n          padding: { top: 60, bottom: 80, left: 60, right: 60 },\n          data: [\n            {\n              name: \"table\",\n              values: data\n            },\n            {\n              name: \"categories\",\n              source: \"table\",\n              transform: [\n                {\n                  type: \"aggregate\",\n                  fields: [headers[2]],\n                  ops: [\"sum\"],\n                  as: [\"categoryTotal\"],\n                  groupby: [headers[0]]\n                },\n                {\n                  type: \"stack\",\n                  offset: \"normalize\",\n                  sort: { field: \"categoryTotal\", order: \"descending\" },\n                  field: \"categoryTotal\",\n                  as: [\"x0\", \"x1\"]\n                },\n                {\n                  type: \"formula\",\n                  as: \"Percent\",\n                  expr: \"datum.x1-datum.x0\"\n                },\n                {\n                  type: \"formula\",\n                  as: \"Label\",\n                  expr: `datum.${headers[0]} + ' (' + format(datum.Percent,'.1%') + ')'`\n                }\n              ]\n            },\n            {\n              name: \"finalTable\",\n              source: \"table\",\n              transform: [\n                {\n                  type: \"stack\",\n                  offset: \"normalize\",\n                  groupby: [headers[0]],\n                  sort: { field: headers[2], order: \"descending\" },\n                  field: headers[2],\n                  as: [\"y0\", \"y1\"]\n                },\n                {\n                  type: \"stack\",\n                  groupby: [headers[0]],\n                  sort: { field: headers[2], order: \"descending\" },\n                  field: headers[2],\n                  as: [\"z0\", \"z1\"]\n                },\n                {\n                  type: \"lookup\",\n                  from: \"categories\",\n                  key: headers[0],\n                  values: [\"x0\", \"x1\"],\n                  fields: [headers[0]]\n                },\n                {\n                  type: \"formula\",\n                  as: \"Percent\",\n                  expr: \"datum.y1-datum.y0\"\n                },\n                {\n                  type: \"formula\",\n                  as: \"Label\",\n                  expr: `[datum.${headers[1]}, format(datum.${headers[2]}, '.0f') + ' (' + format(datum.Percent, '.1%') + ')']`\n                },\n                {\n                  type: \"window\",\n                  sort: { field: \"y0\", order: \"ascending\" },\n                  ops: [\"row_number\"],\n                  fields: [null],\n                  as: [\"rank\"],\n                  groupby: [headers[0]]\n                }\n              ]\n            }\n          ],\n          scales: [\n            {\n              name: \"x\",\n              type: \"linear\",\n              range: \"width\",\n              domain: { data: \"finalTable\", field: \"x1\" }\n            },\n            {\n              name: \"y\",\n              type: \"linear\",\n              range: \"height\",\n              nice: false,\n              zero: true,\n              domain: { data: \"finalTable\", field: \"z1\" }\n            },\n            {\n              name: \"opacity\",\n              type: \"linear\",\n              range: [1, 0.6],\n              domain: { data: \"finalTable\", field: \"rank\" }\n            },\n            {\n              name: \"color\",\n              type: \"ordinal\",\n              range: { scheme: \"category20\" },\n              domain: {\n                data: \"categories\",\n                field: headers[0],\n                sort: { field: \"x0\", order: \"ascending\", op: \"sum\" }\n              }\n            }\n          ],\n          axes: [\n            {\n              orient: \"left\",\n              scale: \"y\",\n              zindex: 1,\n              format: \"\",\n              tickCount: 5,\n              tickSize: 15,\n              labelColor: { value: \"#333740\" },\n              labelFontWeight: { value: \"normal\" },\n              labelFontSize: { value: 12 },\n              labelFont: { value: \"Segoe UI\" },\n              offset: 5,\n              domain: false,\n              encode: {\n                labels: {\n                  update: {\n                    text: { signal: `format(datum.value, '.0f')` }\n                  }\n                }\n              }\n            }\n          ],\n          marks: [\n            {\n              type: \"rect\",\n              name: \"bars\",\n              from: { data: \"finalTable\" },\n              encode: {\n                update: {\n                  x: { scale: \"x\", field: \"x0\" },\n                  x2: { scale: \"x\", field: \"x1\" },\n                  y: { scale: \"y\", field: \"z0\" },\n                  y2: { scale: \"y\", field: \"z1\" },\n                  fill: { scale: \"color\", field: headers[0] },\n                  stroke: { value: \"white\" },\n                  strokeWidth: { value: 1 },\n                  fillOpacity: { scale: \"opacity\", field: \"rank\" },\n                  tooltip: { signal: \"datum\" }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              name: \"labels\",\n              interactive: false,\n              from: { data: \"bars\" },\n              encode: {\n                update: {\n                  x: { signal: \"(datum.x2 - datum.x)*0.5 + datum.x\" },\n                  align: { value: \"center\" },\n                  text: { field: \"datum.Label\" },\n                  y: { signal: \"(datum.y2 - datum.y)*0.5 + datum.y\" },\n                  fill: { value: \"white\" },\n                  font: { value: \"Segoe UI\" },\n                  lineHeight: { value: 12 },\n                  fontSize: { value: 10 },\n                  opacity: { signal: \"(datum.x2 - datum.x) > 0.05 && (datum.y2 - datum.y) > 20 ? 1 : 0\" }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              name: \"categoryLabels\",\n              from: { data: \"categories\" },\n              encode: {\n                update: {\n                  x: { scale: \"x\", signal: \"(datum.x1-datum.x0)/2 + datum.x0\" },\n                  y: { signal: \"-15\" },\n                  text: { field: headers[0] },\n                  align: { value: \"center\" },\n                  baseline: { value: \"bottom\" },\n                  fill: { value: \"#333740\" },\n                  fontWeight: { value: \"bold\" },\n                  fontSize: { value: 12 },\n                  font: { value: \"Segoe UI\" }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              name: \"categoryPercentages\",\n              from: { data: \"categories\" },\n              encode: {\n                update: {\n                  x: { scale: \"x\", signal: \"(datum.x1-datum.x0)/2 + datum.x0\" },\n                  y: { signal: \"height + 30\" },\n                  text: { field: \"Label\" },\n                  align: { value: \"center\" },\n                  baseline: { value: \"top\" },\n                  fill: { value: \"#666666\" },\n                  fontWeight: { value: \"normal\" },\n                  fontSize: { value: 10 },\n                  font: { value: \"Segoe UI\" }\n                }\n              }\n            }\n          ]\n        };\n      }\n\n      if (chartType === \"marimekko\") {\n      if (headers.length < 3) {\n        console.warn(\"Marimekko chart requires at least 3 columns: Category, Subcategory, Value\");\n        return;\n      }\n\n      spec = {\n        \"$schema\": \"https://vega.github.io/schema/vega/v5.json\",\n        \"description\": \"Marimekko Chart from Excel selection\",\n        \"width\": 600,\n        \"height\": 400,\n        \"background\": \"white\",\n        \"config\": { \"view\": { \"stroke\": \"transparent\" }},\n        \"padding\": { \"top\": 30, \"bottom\": 60, \"left\": 60, \"right\": 60 },\n        \"data\": [\n          {\n            \"name\": \"table\",\n            \"values\": data,\n            \"transform\": [\n              {\n                \"type\": \"formula\",\n                \"as\": \"Category\",\n                \"expr\": `datum['${headers[0]}']`\n              },\n              {\n                \"type\": \"formula\", \n                \"as\": \"Subcategory\",\n                \"expr\": `datum['${headers[1]}']`\n              },\n              {\n                \"type\": \"formula\",\n                \"as\": \"Value\", \n                \"expr\": `datum['${headers[2]}']`\n              }\n            ]\n          },\n          {\n            \"name\": \"categories\",\n            \"source\": \"table\",\n            \"transform\": [\n              {\n                \"type\": \"aggregate\",\n                \"fields\": [\"Value\"],\n                \"ops\": [\"sum\"],\n                \"as\": [\"categoryTotal\"],\n                \"groupby\": [\"Category\"]\n              },\n              {\n                \"type\": \"stack\",\n                \"offset\": \"normalize\",\n                \"sort\": { \"field\": \"categoryTotal\", \"order\": \"descending\" },\n                \"field\": \"categoryTotal\",\n                \"as\": [\"x0\", \"x1\"]\n              },\n              {\n                \"type\": \"formula\",\n                \"as\": \"Percent\",\n                \"expr\": \"datum.x1 - datum.x0\"\n              }\n            ]\n          },\n          {\n            \"name\": \"finalTable\",\n            \"source\": \"table\",\n            \"transform\": [\n              {\n                \"type\": \"stack\",\n                \"offset\": \"normalize\",\n                \"groupby\": [\"Category\"],\n                \"sort\": { \"field\": \"Value\", \"order\": \"descending\" },\n                \"field\": \"Value\",\n                \"as\": [\"y0\", \"y1\"]\n              },\n              {\n                \"type\": \"lookup\",\n                \"from\": \"categories\",\n                \"key\": \"Category\",\n                \"values\": [\"x0\", \"x1\"],\n                \"fields\": [\"Category\"]\n              },\n              {\n                \"type\": \"formula\",\n                \"as\": \"Percent\",\n                \"expr\": \"datum.y1 - datum.y0\"\n              }\n            ]\n          }\n        ],\n        \"scales\": [\n          {\n            \"name\": \"x\",\n            \"type\": \"linear\",\n            \"range\": \"width\",\n            \"domain\": { \"data\": \"finalTable\", \"field\": \"x1\" }\n          },\n          {\n            \"name\": \"y\",\n            \"type\": \"linear\",\n            \"range\": \"height\",\n            \"nice\": false,\n            \"zero\": true,\n            \"domain\": { \"data\": \"finalTable\", \"field\": \"y1\" }\n          },\n          {\n            \"name\": \"color\",\n            \"type\": \"ordinal\",\n            \"range\": { \"scheme\": \"category20\" },\n            \"domain\": {\n              \"data\": \"categories\",\n              \"field\": \"Category\",\n              \"sort\": { \"field\": \"x0\", \"order\": \"ascending\", \"op\": \"sum\" }\n            }\n          }\n        ],\n        \"axes\": [\n          {\n            \"orient\": \"left\",\n            \"scale\": \"y\",\n            \"format\": \"%\",\n            \"tickCount\": 5,\n            \"labelColor\": \"#333333\",\n            \"labelFontSize\": 11,\n            \"domain\": false\n          },\n          {\n            \"orient\": \"bottom\",\n            \"scale\": \"x\",\n            \"format\": \"%\",\n            \"tickCount\": 5,\n            \"labelColor\": \"#333333\", \n            \"labelFontSize\": 11,\n            \"domain\": false\n          }\n        ],\n        \"marks\": [\n          {\n            \"type\": \"rect\",\n            \"name\": \"bars\",\n            \"from\": { \"data\": \"finalTable\" },\n            \"encode\": {\n              \"update\": {\n                \"x\": { \"scale\": \"x\", \"field\": \"x0\" },\n                \"x2\": { \"scale\": \"x\", \"field\": \"x1\" },\n                \"y\": { \"scale\": \"y\", \"field\": \"y0\" },\n                \"y2\": { \"scale\": \"y\", \"field\": \"y1\" },\n                \"fill\": { \"scale\": \"color\", \"field\": \"Category\" },\n                \"stroke\": { \"value\": \"white\" },\n                \"strokeWidth\": { \"value\": 1 },\n                \"opacity\": { \"value\": 0.8 },\n                \"tooltip\": { \n                  \"signal\": \"{'Category': datum.Category, 'Subcategory': datum.Subcategory, 'Value': datum.Value, 'Percentage': format(datum.Percent, '.1%')}\" \n                }\n              },\n              \"hover\": {\n                \"opacity\": { \"value\": 1.0 }\n              }\n            }\n          },\n          {\n            \"type\": \"text\",\n            \"name\": \"valueLabels\",\n            \"from\": { \"data\": \"finalTable\" },\n            \"encode\": {\n              \"update\": {\n                \"x\": { \"scale\": \"x\", \"signal\": \"(datum.x1 - datum.x0)/2 + datum.x0\" },\n                \"y\": { \"scale\": \"y\", \"signal\": \"(datum.y1 - datum.y0)/2 + datum.y0\" },\n                \"text\": { \n                  \"signal\": \"datum.Percent > 0.027 ? [datum.Subcategory, format(datum.Value, ',.0f') + ' (' + format(datum.Percent, '.0%') + ')'] : []\" \n                },\n                \"align\": { \"value\": \"center\" },\n                \"baseline\": { \"value\": \"middle\" },\n                \"fill\": { \"value\": \"white\" },\n                \"fontSize\": { \"value\": 10 },\n                \"fontWeight\": { \"value\": \"normal\" },\n                \"font\": { \"value\": \"Segoe UI\" },\n                \"lineHeight\": { \"value\": 12 },\n                \"opacity\": { \"signal\": \"datum.Percent > 0.027 ? 1 : 0\" }\n              }\n            }\n          }\n        ]\n      };\n      }\n\n      else if (chartType === \"arc\") {\n        // Transform Excel data for arc chart\n        const edges = data.map((row, index) => ({\n          source: row[headers[0]],\n          target: row[headers[1]],\n          value: headers.length >= 3 && row[headers[2]] ? row[headers[2]] : 1,\n          group: headers.length >= 4 && row[headers[3]] ? row[headers[3]] : \"default\"\n        }));\n\n        // Get unique nodes from edges\n        const nodeMap = new Map();\n        edges.forEach(edge => {\n          if (!nodeMap.has(edge.source)) {\n            nodeMap.set(edge.source, { \n              name: edge.source, \n              group: edge.group,\n              index: nodeMap.size\n            });\n          }\n          if (!nodeMap.has(edge.target)) {\n            nodeMap.set(edge.target, { \n              name: edge.target, \n              group: edge.group,\n              index: nodeMap.size\n            });\n          }\n        });\n\n        const nodes = Array.from(nodeMap.values());\n\n        // Transform edges to use node indices\n        const edgesWithIndices = edges.map(edge => ({\n          source: nodeMap.get(edge.source).index,\n          target: nodeMap.get(edge.target).index,\n          value: edge.value\n        }));\n\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega/v5.json\",\n          description: \"Arc diagram from Excel selection\",\n          width: Math.max(600, nodes.length * 40),\n          height: 300,\n          padding: { top: 20, bottom: 80, left: 20, right: 20 },\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: [\n            {\n              name: \"edges\",\n              values: edgesWithIndices\n            },\n            {\n              name: \"sourceDegree\",\n              source: \"edges\",\n              transform: [\n                { type: \"aggregate\", groupby: [\"source\"], as: [\"count\"] }\n              ]\n            },\n            {\n              name: \"targetDegree\", \n              source: \"edges\",\n              transform: [\n                { type: \"aggregate\", groupby: [\"target\"], as: [\"count\"] }\n              ]\n            },\n            {\n              name: \"nodes\",\n              values: nodes,\n              transform: [\n                { type: \"window\", ops: [\"rank\"], as: [\"order\"] },\n                {\n                  type: \"lookup\", from: \"sourceDegree\", key: \"source\",\n                  fields: [\"index\"], as: [\"sourceDegree\"],\n                  default: { count: 0 }\n                },\n                {\n                  type: \"lookup\", from: \"targetDegree\", key: \"target\", \n                  fields: [\"index\"], as: [\"targetDegree\"],\n                  default: { count: 0 }\n                },\n                {\n                  type: \"formula\", as: \"degree\",\n                  expr: \"(datum.sourceDegree.count || 0) + (datum.targetDegree.count || 0)\"\n                }\n              ]\n            }\n          ],\n\n          scales: [\n            {\n              name: \"position\",\n              type: \"band\",\n              domain: { data: \"nodes\", field: \"order\", sort: true },\n              range: \"width\"\n            },\n            {\n              name: \"color\",\n              type: \"ordinal\",\n              range: { scheme: \"category20\" },\n              domain: { data: \"nodes\", field: \"group\" }\n            }\n          ],\n\n          marks: [\n            {\n              type: \"symbol\",\n              name: \"layout\",\n              interactive: false,\n              from: { data: \"nodes\" },\n              encode: {\n                enter: { opacity: { value: 0 } },\n                update: {\n                  x: { scale: \"position\", field: \"order\" },\n                  y: { value: 0 },\n                  size: { field: \"degree\", mult: 8, offset: 50 },\n                  fill: { scale: \"color\", field: \"group\" }\n                }\n              }\n            },\n            {\n              type: \"path\",\n              from: { data: \"edges\" },\n              encode: {\n                update: {\n                  stroke: { value: \"#0078d4\" },\n                  strokeOpacity: { value: 0.4 },\n                  strokeWidth: { field: \"value\", mult: 2, offset: 1 }\n                }\n              },\n              transform: [\n                {\n                  type: \"lookup\", from: \"layout\", key: \"datum.index\",\n                  fields: [\"datum.source\", \"datum.target\"],\n                  as: [\"sourceNode\", \"targetNode\"]\n                },\n                {\n                  type: \"linkpath\",\n                  sourceX: { expr: \"min(datum.sourceNode.x, datum.targetNode.x)\" },\n                  targetX: { expr: \"max(datum.sourceNode.x, datum.targetNode.x)\" },\n                  sourceY: { expr: \"0\" },\n                  targetY: { expr: \"0\" },\n                  shape: \"arc\"\n                }\n              ]\n            },\n            {\n              type: \"symbol\",\n              from: { data: \"layout\" },\n              encode: {\n                update: {\n                  x: { field: \"x\" },\n                  y: { field: \"y\" },\n                  fill: { field: \"fill\" },\n                  size: { field: \"size\" },\n                  stroke: { value: \"white\" },\n                  strokeWidth: { value: 1 },\n                  tooltip: { \n                    signal: \"{'Node': datum.datum.name, 'Group': datum.datum.group, 'Connections': datum.datum.degree}\" \n                  }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              from: { data: \"nodes\" },\n              encode: {\n                update: {\n                  x: { scale: \"position\", field: \"order\" },\n                  y: { value: 25 },\n                  fontSize: { value: 10 },\n                  align: { value: \"center\" },\n                  baseline: { value: \"top\" },\n                  angle: { value: -45 },\n                  text: { field: \"name\" },\n                  fill: { value: \"#323130\" },\n                  font: { value: \"Segoe UI\" }\n                }\n              }\n            }\n          ],\n          \n          config: {\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            text: { font: \"Segoe UI\", fontSize: 10, fill: \"#605e5c\" }\n          }\n        };\n      }\n\n      else if (chartType === \"lollipop\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n          description: \"Lollipop chart from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          encoding: {\n            y: {\n              field: headers[0],\n              type: \"nominal\",\n              sort: \"-x\",\n              axis: {\n                domain: false,\n                title: null,\n                ticks: false,\n                labelFont: \"Segoe UI\",\n                labelFontSize: 14,\n                labelPadding: 10,\n                labelColor: \"#605e5c\"\n              }\n            },\n            x: {\n              field: headers[1],\n              type: \"quantitative\",\n              axis: {\n                domain: false,\n                ticks: false,\n                grid: true,\n                gridColor: \"#e0e0e0\",\n                labelFont: \"Segoe UI\",\n                labelFontSize: 12,\n                labelColor: \"#605e5c\",\n                title: headers[1],\n                titleFont: \"Segoe UI\",\n                titleFontSize: 14,\n                titleColor: \"#323130\"\n              }\n            },\n            color: { value: \"#0078d4\" }\n          },\n          layer: [\n            {\n              mark: {\n                type: \"rule\",\n                tooltip: true,\n                strokeWidth: 3,\n                opacity: 0.7\n              }\n            },\n            {\n              mark: {\n                type: \"circle\",\n                tooltip: true,\n                size: 300,\n                opacity: 0.9\n              },\n              encoding: {\n                size: {\n                  field: headers[1],\n                  type: \"quantitative\",\n                  scale: {\n                    range: [200, 800]\n                  },\n                  legend: null\n                }\n              }\n            }\n          ],\n          config: {\n            autosize: {\n              type: \"fit\",\n              contains: \"padding\"\n            },\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            text: { font: \"Segoe UI\", fontSize: 12, fill: \"#605E5C\" }\n          }\n        };\n      }\n\n      else if (chartType === \"strip\") {\n        // Strip plot implementation\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n          description: \"Strip plot showing distribution using tick marks\",\n          background: \"white\",\n          config: { \n            view: { stroke: \"transparent\" },\n            axis: {\n              labelFontSize: 11,\n              titleFontSize: 12,\n              labelColor: \"#605E5C\",\n              titleColor: \"#323130\"\n            }\n          },\n          data: { values: data },\n          mark: {\n            type: \"tick\",\n            thickness: 2,\n            size: 15,\n            color: \"#0078d4\",\n            opacity: 0.8,\n            tooltip: true\n          },\n          encoding: {\n            x: { \n              field: headers[0], \n              type: \"quantitative\",\n              axis: {\n                title: headers[0],\n                grid: true,\n                gridColor: \"#f3f2f1\",\n                gridOpacity: 0.5\n              }\n            },\n            y: { \n              field: headers[1], \n              type: \"ordinal\",\n              axis: {\n                title: headers[1],\n                labelAngle: 0\n              }\n            },\n            // Add color encoding if 3rd column exists\n            ...(headers.length > 2 && {\n              color: {\n                field: headers[2],\n                type: \"nominal\",\n                scale: { scheme: \"category10\" },\n                legend: {\n                  title: headers[2],\n                  orient: \"right\",\n                  titleFontSize: 11,\n                  labelFontSize: 10\n                }\n              }\n            }),\n            tooltip: headers.map(h => ({ field: h, type: \"nominal\" }))\n          }\n        };\n      }\n\n      else if (chartType === \"treemap\") {\n        let treeData;\n        \n        if (headers.length >= 3) {\n          // Hierarchical data with parent column\n          treeData = data.map((d, i) => ({\n            id: `${d[headers[1]]}_${i}`,\n            name: d[headers[1]],\n            parent: d[headers[0]] || \"root\",\n            size: parseFloat(d[headers[2]]) || 0\n          }));\n          \n          // Add root and parent nodes\n          const parents = [...new Set(treeData.map(d => d.parent))];\n          parents.forEach(parent => {\n            if (parent !== \"root\" && !treeData.find(d => d.id === parent)) {\n              treeData.push({\n                id: parent,\n                name: parent,\n                parent: \"root\",\n                size: 0\n              });\n            }\n          });\n          \n          // Add root node\n          treeData.push({\n            id: \"root\",\n            name: \"Root\",\n            parent: \"\",\n            size: 0\n          });\n        } else {\n          // Simple flat data - create single level hierarchy\n          treeData = [\n            {\n              id: \"root\",\n              name: \"Root\", \n              parent: \"\",\n              size: 0\n            },\n            ...data.map((d, i) => ({\n              id: `item_${i}`,\n              name: d[headers[1]],\n              parent: \"root\",\n              size: parseFloat(d[headers[2]]) || 0\n            }))\n          ];\n        }\n\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega/v5.json\",\n          description: \"Treemap visualization from Excel data\",\n          background: \"white\",\n          width: 600,\n          height: 400,\n          padding: 5,\n          autosize: \"fit\",\n          \n          data: [\n            {\n              name: \"tree\",\n              values: treeData,\n              transform: [\n                {\n                  type: \"stratify\",\n                  key: \"id\",\n                  parentKey: \"parent\"\n                },\n                {\n                  type: \"treemap\",\n                  field: \"size\",\n                  sort: { field: \"value\" },\n                  round: true,\n                  method: \"squarify\",\n                  ratio: 1.6,\n                  size: [{ signal: \"width\" }, { signal: \"height\" }]\n                }\n              ]\n            },\n            {\n              name: \"nodes\",\n              source: \"tree\",\n              transform: [\n                { type: \"filter\", expr: \"datum.children\" }\n              ]\n            },\n            {\n              name: \"leaves\", \n              source: \"tree\",\n              transform: [\n                { type: \"filter\", expr: \"!datum.children\" }\n              ]\n            }\n          ],\n          \n          scales: [\n            {\n              name: \"color\",\n              type: \"ordinal\",\n              domain: { data: \"nodes\", field: \"name\" },\n              range: [\n                \"#0078d4\", \"#00bcf2\", \"#40e0d0\", \"#00cc6a\", \"#10893e\",\n                \"#107c10\", \"#bad80a\", \"#ffb900\", \"#ff8c00\", \"#d13438\"\n              ]\n            },\n            {\n              name: \"fontSize\",\n              type: \"ordinal\", \n              domain: [0, 1, 2, 3],\n              range: [20, 16, 12, 10]\n            },\n            {\n              name: \"opacity\",\n              type: \"ordinal\",\n              domain: [0, 1, 2, 3], \n              range: [0.3, 0.6, 0.8, 1.0]\n            }\n          ],\n          \n          marks: [\n            {\n              type: \"rect\",\n              from: { data: \"nodes\" },\n              interactive: false,\n              encode: {\n                enter: {\n                  fill: { scale: \"color\", field: \"name\" },\n                  fillOpacity: { scale: \"opacity\", field: \"depth\" }\n                },\n                update: {\n                  x: { field: \"x0\" },\n                  y: { field: \"y0\" },\n                  x2: { field: \"x1\" },\n                  y2: { field: \"y1\" },\n                  stroke: { value: \"#ffffff\" },\n                  strokeWidth: { value: 1 }\n                }\n              }\n            },\n            {\n              type: \"rect\",\n              from: { data: \"leaves\" },\n              encode: {\n                enter: {\n                  stroke: { value: \"#ffffff\" },\n                  strokeWidth: { value: 2 }\n                },\n                update: {\n                  x: { field: \"x0\" },\n                  y: { field: \"y0\" },\n                  x2: { field: \"x1\" },\n                  y2: { field: \"y1\" },\n                  fill: { value: \"transparent\" },\n                  tooltip: {\n                    signal: `{'Category': datum.name, 'Value': datum.size, 'Parent': datum.parent}`\n                  }\n                },\n                hover: {\n                  fill: { value: \"#323130\" },\n                  fillOpacity: { value: 0.1 }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              from: { data: \"leaves\" },\n              interactive: false,\n              encode: {\n                enter: {\n                  font: { value: \"Segoe UI, Arial, sans-serif\" },\n                  align: { value: \"center\" },\n                  baseline: { value: \"middle\" },\n                  fill: { value: \"#323130\" },\n                  fontWeight: { value: \"bold\" },\n                  text: { field: \"name\" },\n                  fontSize: { scale: \"fontSize\", field: \"depth\" }\n                },\n                update: {\n                  x: { signal: \"0.5 * (datum.x0 + datum.x1)\" },\n                  y: { signal: \"0.5 * (datum.y0 + datum.y1)\" },\n                  opacity: {\n                    signal: \"(datum.x1 - datum.x0) > 50 && (datum.y1 - datum.y0) > 20 ? 1 : 0\"\n                  }\n                }\n              }\n            }\n          ]\n        };\n      }\n      \n      else if (chartType === \"waffle\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n          description: \"Waffle chart from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          transform: [\n            {\n              joinaggregate: [{\"op\": \"sum\", \"field\": headers[1], \"as\": \"TotalValue\"}]\n            },\n            {\n              calculate: `round(datum.${headers[1]}/datum.TotalValue * 100)`,\n              as: \"PercentOfTotal\"\n            },\n            {\n              aggregate: [{\"op\": \"min\", \"field\": \"PercentOfTotal\", \"as\": \"Percent\"}],\n              groupby: [headers[0]]\n            },\n            {\"calculate\": \"sequence(1,101)\", \"as\": \"Sequence\"},\n            {\"flatten\": [\"Sequence\"]},\n            {\n              calculate: `if(datum.Sequence <= datum.Percent, datum.${headers[0]},'_blank')`,\n              as: \"Plot\"\n            },\n            {\"calculate\": \"ceil (datum.Sequence / 10)\", \"as\": \"row\"},\n            {\"calculate\": \"datum.Sequence - datum.row * 10\", \"as\": \"col\"}\n          ],\n          facet: {\"column\": {\"field\": headers[0], \"header\": {\"labelOrient\": \"bottom\"}}},\n          spec: {\n            layer: [\n              {\n                mark: {\n                  type: \"circle\",\n                  filled: true,\n                  tooltip: true,\n                  stroke: \"#9e9b9b\",\n                  strokeWidth: 0.7\n                },\n                encoding: {\n                  x: {\"field\": \"col\", \"type\": \"ordinal\", \"axis\": null},\n                  y: {\"field\": \"row\", \"type\": \"ordinal\", \"axis\": null, \"sort\": \"-y\"},\n                  color: {\n                    condition: {\"test\": \"datum.Plot == '_blank'\", \"value\": \"#e6e3e3\"},\n                    scale: {\"scheme\": \"set1\"},\n                    field: \"Plot\",\n                    type: \"nominal\",\n                    legend: null\n                  },\n                  size: {\"value\": 241},\n                  tooltip: [{\"field\": headers[0], \"type\": \"nominal\"}]\n                }\n              },\n              {\n                mark: {\"type\": \"text\", \"fontSize\": 30, \"fontWeight\": \"bold\"},\n                encoding: {\n                  y: {\"value\": 30},\n                  text: {\n                    condition: {\n                      test: \"datum.Sequence == 1\",\n                      value: {\"expr\": \"datum.Percent + '%'\"}\n                    }\n                  },\n                  color: {\"scale\": {\"scheme\": \"set1\"}, \"field\": \"Plot\"}\n                }\n              }\n            ]\n          },\n          config: {\n            view: {\"stroke\": \"transparent\"},\n            font: \"Segoe UI\",\n            text: {\"font\": \"Segoe UI\", \"fontSize\": 12, \"fill\": \"#605E5C\"},\n            axis: {\n              ticks: false,\n              grid: false,\n              domain: false,\n              labelColor: \"#605E5C\",\n              labelFontSize: 12\n            },\n            header: {\n              titleFont: \"Segoe UI\",\n              titleFontSize: 16,\n              titleColor: \"#757575\",\n              labelFont: \"Segoe UI\",\n              labelFontSize: 13,\n              labelColor: \"#605E5C\"\n            },\n            legend: {\n              titleFont: \"Segoe UI\",\n              titleFontWeight: \"bold\",\n              titleColor: \"#605E5C\",\n              labelFont: \"Segoe UI\",\n              labelFontSize: 13,\n              labelColor: \"#605E5C\",\n              symbolType: \"circle\",\n              symbolSize: 75\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"violin\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n          description: \"Violin chart from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          spacing: 0,\n          facet: {\n            column: {\n              field: headers[0],\n              header: {\n                orient: \"bottom\",\n                title: null,\n                labelFontSize: 14\n              }\n            }\n          },\n          spec: {\n            width: 180,\n            height: 400,\n            encoding: {\n              y: {\n                field: headers[1],\n                type: \"quantitative\",\n                title: headers[1],\n                axis: {\n                  tickCount: 10,\n                  titleFontSize: 16,\n                  labelFontSize: 12\n                }\n              },\n              x: {\n                type: \"quantitative\",\n                axis: {\n                  labels: false,\n                  title: null,\n                  grid: false,\n                  ticks: false\n                }\n              },\n              color: {\n                field: headers[0],\n                type: \"nominal\",\n                legend: null,\n                scale: {\n                  scheme: \"category10\"\n                }\n              }\n            },\n            layer: [\n              {\n                name: \"KDE_PLOT\",\n                transform: [\n                  {\n                    density: headers[1],\n                    groupby: [headers[0]],\n                    as: [\"_kde_value\", \"_kde_density\"]\n                  },\n                  {\n                    calculate: \"datum['_kde_density'] * -1\",\n                    as: \"_negative_kde_density\"\n                  }\n                ],\n                layer: [\n                  {\n                    name: \"KDE_POSITIVE\",\n                    mark: {\n                      type: \"area\",\n                      orient: \"vertical\",\n                      opacity: 0.6\n                    },\n                    encoding: {\n                      y: { field: \"_kde_value\" },\n                      x: { field: \"_kde_density\" }\n                    }\n                  },\n                  {\n                    name: \"KDE_NEGATIVE\",\n                    mark: {\n                      type: \"area\",\n                      orient: \"vertical\",\n                      opacity: 0.6\n                    },\n                    encoding: {\n                      y: { field: \"_kde_value\" },\n                      x: { field: \"_negative_kde_density\" }\n                    }\n                  }\n                ],\n                encoding: {\n                  x2: { datum: 0 }\n                }\n              },\n              {\n                name: \"BOX_PLOT\",\n                mark: {\n                  type: \"boxplot\",\n                  extent: \"min-max\",\n                  median: {\n                    color: \"black\",\n                    strokeWidth: 2\n                  },\n                  size: 20\n                },\n                encoding: {\n                  y: { field: headers[1] },\n                  fill: { value: \"#969696\" },\n                  stroke: { value: \"black\" }\n                }\n              }\n            ]\n          },\n          config: {\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            text: { font: \"Segoe UI\", fontSize: 12, fill: \"#605E5C\" },\n            axis: {\n              ticks: false,\n              grid: true,\n              gridColor: \"#e0e0e0\",\n              domain: false,\n              labelColor: \"#605E5C\",\n              labelFontSize: 12\n            },\n            header: {\n              titleFont: \"Segoe UI\",\n              titleFontSize: 16,\n              titleColor: \"#757575\",\n              labelFont: \"Segoe UI\",\n              labelFontSize: 13,\n              labelColor: \"#605E5C\"\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"heatmap\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n          description: \"Heatmap with marginal bars from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          spacing: 15,\n          bounds: \"flush\",\n          vconcat: [\n            {\n              height: 60,\n              mark: {\n                type: \"bar\",\n                stroke: null,\n                cornerRadiusEnd: 2,\n                tooltip: true,\n                color: \"lightgrey\"\n              },\n              encoding: {\n                x: {\n                  field: headers[1],\n                  type: \"ordinal\",\n                  axis: null\n                },\n                y: {\n                  field: headers[2],\n                  aggregate: \"mean\",\n                  type: \"quantitative\",\n                  axis: null\n                }\n              }\n            },\n            {\n              spacing: 15,\n              bounds: \"flush\",\n              hconcat: [\n                {\n                  mark: {\n                    type: \"rect\",\n                    stroke: \"white\",\n                    tooltip: true\n                  },\n                  encoding: {\n                    y: {\n                      field: headers[0],\n                      type: \"ordinal\",\n                      title: headers[0],\n                      axis: {\n                        domain: false,\n                        ticks: false,\n                        labels: true,\n                        labelAngle: 0,\n                        labelPadding: 5\n                      }\n                    },\n                    x: {\n                      field: headers[1],\n                      type: \"ordinal\",\n                      title: headers[1],\n                      axis: {\n                        domain: false,\n                        ticks: false,\n                        labels: true,\n                        labelAngle: 0\n                      }\n                    },\n                    color: {\n                      aggregate: \"mean\",\n                      field: headers[2],\n                      type: \"quantitative\",\n                      title: headers[2],\n                      scale: {\n                        scheme: \"blues\"\n                      },\n                      legend: {\n                        direction: \"vertical\",\n                        gradientLength: 120\n                      }\n                    }\n                  }\n                },\n                {\n                  mark: {\n                    type: \"bar\",\n                    stroke: null,\n                    cornerRadiusEnd: 2,\n                    tooltip: true,\n                    color: \"lightgrey\"\n                  },\n                  width: 60,\n                  encoding: {\n                    y: {\n                      field: headers[0],\n                      type: \"ordinal\",\n                      axis: null\n                    },\n                    x: {\n                      field: headers[2],\n                      type: \"quantitative\",\n                      aggregate: \"mean\",\n                      axis: null\n                    }\n                  }\n                }\n              ]\n            }\n          ],\n          config: {\n            autosize: {\n              type: \"fit\",\n              contains: \"padding\"\n            },\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            text: { font: \"Segoe UI\", fontSize: 12, fill: \"#605E5C\" },\n            axis: {\n              ticks: false,\n              grid: false,\n              domain: false,\n              labelColor: \"#605E5C\",\n              labelFontSize: 12,\n              titleFontSize: 14,\n              titleColor: \"#323130\"\n            },\n            legend: {\n              titleFont: \"Segoe UI\",\n              titleFontWeight: \"bold\",\n              titleColor: \"#605E5C\",\n              labelFont: \"Segoe UI\",\n              labelFontSize: 12,\n              labelColor: \"#605E5C\"\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"deviation\") {\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Deviation chart from Excel selection\",\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        data: { values: data },\n        layer: [\n        {\n            mark: { type: \"line\", tooltip: true, color: \"grey\" },\n            encoding: {\n            x: { field: headers[0], type: \"ordinal\" },\n            y: { field: headers[1], type: \"quantitative\" }\n            }\n        },\n        {\n            mark: { type: \"circle\", size: 80, color: \"grey\", tooltip: true },\n            encoding: {\n            x: { field: headers[0], type: \"ordinal\" },\n            y: { field: headers[1], type: \"quantitative\" }\n            }\n        },\n        {\n            mark: { type: \"rule\", strokeWidth: 2, tooltip: true },\n            encoding: {\n            x: { field: headers[0], type: \"ordinal\" },\n            y: { field: headers[1], type: \"quantitative\" },\n            y2: { field: headers[2] },\n            color: {\n                condition: { test: `datum[\"${headers[1]}\"] < datum[\"${headers[2]}\"]`, value: \"red\" },\n                value: \"green\"\n            }\n            }\n        },\n        {\n            mark: { type: \"circle\", size: 60, tooltip: true },\n            encoding: {\n            x: { field: headers[0], type: \"ordinal\" },\n            y: { field: headers[2], type: \"quantitative\" },\n            color: {\n                condition: { test: `datum[\"${headers[1]}\"] < datum[\"${headers[2]}\"]`, value: \"red\" },\n                value: \"green\"\n            }\n            }\n        }\n        ],\n        encoding: {\n        x: { \n            field: headers[0], \n            type: \"ordinal\", \n            axis: { \n                title: null,\n                labelAngle: 0       // Optional: adjust label angle if needed\n            } \n        },\n        y: { type: \"quantitative\", axis: { title: \"\" } }\n        },\n        config: {\n        view: { stroke: \"transparent\" },\n        line: { strokeWidth: 3, strokeCap: \"round\", strokeJoin: \"round\" },\n        axis: {\n            ticks: false,\n            grid: false,\n            domain: false,\n            labelColor: \"#605E5C\",\n            labelFontSize: 12\n        }\n        }\n      };\n      }\n\n      else if (chartType === \"radial\") {\n        spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Radial chart from Excel selection\",\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        data: { values: data },\n        layer: [{\n        mark: { type: \"arc\", innerRadius: 20, stroke: \"#fff\" }\n        }, {\n        mark: { type: \"text\", radiusOffset: 10 },\n        encoding: {\n            text: { field: headers[1], type: \"quantitative\" }\n        }\n        }],\n        encoding: {\n        theta: { field: headers[1], type: \"quantitative\", stack: true },\n        radius: { \n            field: headers[1], \n            scale: { type: \"sqrt\", zero: true, rangeMin: 20 }\n        },\n        color: { field: headers[0], type: \"nominal\", legend: null }\n        }\n      };\n      }\n\n      else if (chartType === \"bump\") {\n      // calculate width based on number of unique x-values\n      const uniqueX = [...new Set(data.map(d => d[headers[0]]))];\n      const dynamicWidth = Math.max(400, uniqueX.length * 80);\n\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Bump chart from Excel selection\",\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        data: { values: data },\n        width: dynamicWidth,\n        height: 200,   // give it some room\n        encoding: {\n          x: {\n            field: headers[0],\n            type: \"nominal\",\n            axis: { title: \"\" },\n            scale: { type: \"point\", padding: 1 }   // padding 1 for more spread\n          },\n          y: {\n            field: headers[2],      \n            type: \"ordinal\",\n            axis: false\n          }\n        },\n        layer: [\n          {\n            mark: { type: \"line\", interpolate: \"monotone\" },\n            encoding: {\n              color: {\n                field: headers[1],   \n                type: \"nominal\",\n                legend: false\n              }\n            }\n          },\n          {\n            mark: { type: \"circle\", size: 400, tooltip: true },\n            encoding: {\n              color: {\n                field: headers[1],\n                type: \"nominal\",\n                legend: false\n              }\n            }\n          },\n          {\n            mark: { type: \"text\", color: \"white\" },\n            encoding: {\n              text: { field: headers[2] }\n            }\n          },\n          {\n            // Left-side labels\n            transform: [\n              { window: [{ op: \"rank\", as: \"rank\" }], sort: [{ field: headers[0], order: \"descending\" }] },\n              { filter: \"datum.rank === 1\" }\n            ],\n            mark: {\n              type: \"text\",\n              align: \"left\",\n              baseline: \"middle\",\n              dx: 15,\n              fontWeight: \"bold\",\n              fontSize: 12\n            },\n            encoding: {\n              text: { field: headers[1], type: \"nominal\" },\n              color: { field: headers[1], type: \"nominal\", legend: false }\n            }\n          },\n          {\n            // Right-side labels\n            transform: [\n              { window: [{ op: \"rank\", as: \"rank\" }], sort: [{ field: headers[0], order: \"ascending\" }] },\n              { filter: \"datum.rank === 1\" }\n            ],\n            mark: {\n              type: \"text\",\n              align: \"right\",\n              baseline: \"middle\",\n              dx: -15,\n              fontWeight: \"bold\",\n              fontSize: 12\n            },\n            encoding: {\n              text: { field: headers[1], type: \"nominal\" },\n              color: { field: headers[1], type: \"nominal\", legend: false }\n            }\n          }\n        ],\n        config: {\n          view: { stroke: \"transparent\" },\n          line: { strokeWidth: 3, strokeCap: \"round\", strokeJoin: \"round\" },\n          axis: {\n            ticks: false,\n            grid: false,\n            domain: false,\n            labelColor: \"#666666\",\n            labelFontSize: 12\n          }\n        }\n      };\n      }\n\n      else if (chartType === \"sankey\") {\n      const data = rows\n        .filter(r => r[0] && r[1] && !isNaN(+r[2]))\n        .map(r => ({\n          key: { stk1: r[0], stk2: r[1] },\n          doc_count: +r[2]\n        }));\n\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega/v5.2.json\",\n        height: 300,\n        width: 600,\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        data: [\n          {\n            name: \"rawData\",\n            values: data,\n            transform: [\n              { type: \"formula\", expr: \"datum.key.stk1\", as: \"stk1\" },\n              { type: \"formula\", expr: \"datum.key.stk2\", as: \"stk2\" },\n              { type: \"formula\", expr: \"datum.doc_count\", as: \"size\" }\n            ]\n          },\n          {\n            name: \"nodes\",\n            source: \"rawData\",\n            transform: [\n              {\n                type: \"filter\",\n                expr:\n                  \"!groupSelector || groupSelector.stk1 == datum.stk1 || groupSelector.stk2 == datum.stk2\"\n              },\n              { type: \"formula\", expr: \"datum.stk1+datum.stk2\", as: \"key\" },\n              { type: \"fold\", fields: [\"stk1\", \"stk2\"], as: [\"stack\", \"grpId\"] },\n              {\n                type: \"formula\",\n                expr:\n                  \"datum.stack == 'stk1' ? datum.stk1+' '+datum.stk2 : datum.stk2+' '+datum.stk1\",\n                as: \"sortField\"\n              },\n              {\n                type: \"stack\",\n                groupby: [\"stack\"],\n                sort: { field: \"sortField\", order: \"descending\" },\n                field: \"size\"\n              },\n              { type: \"formula\", expr: \"(datum.y0+datum.y1)/2\", as: \"yc\" }\n            ]\n          },\n          {\n            name: \"groups\",\n            source: \"nodes\",\n            transform: [\n              {\n                type: \"aggregate\",\n                groupby: [\"stack\", \"grpId\"],\n                fields: [\"size\"],\n                ops: [\"sum\"],\n                as: [\"total\"]\n              },\n              {\n                type: \"stack\",\n                groupby: [\"stack\"],\n                sort: { field: \"grpId\", order: \"descending\" },\n                field: \"total\"\n              },\n              { type: \"formula\", expr: \"scale('y', datum.y0)\", as: \"scaledY0\" },\n              { type: \"formula\", expr: \"scale('y', datum.y1)\", as: \"scaledY1\" },\n              { type: \"formula\", expr: \"datum.stack == 'stk1'\", as: \"rightLabel\" },\n              { type: \"formula\", expr: \"datum.total/domain('y')[1]\", as: \"percentage\" }\n            ]\n          },\n          {\n            name: \"destinationNodes\",\n            source: \"nodes\",\n            transform: [{ type: \"filter\", expr: \"datum.stack == 'stk2'\" }]\n          },\n          {\n            name: \"edges\",\n            source: \"nodes\",\n            transform: [\n              { type: \"filter\", expr: \"datum.stack == 'stk1'\" },\n              {\n                type: \"lookup\",\n                from: \"destinationNodes\",\n                key: \"key\",\n                fields: [\"key\"],\n                as: [\"target\"]\n              },\n              {\n                type: \"linkpath\",\n                orient: \"horizontal\",\n                shape: \"diagonal\",\n                sourceY: { expr: \"scale('y', datum.yc)\" },\n                sourceX: { expr: \"scale('x', 'stk1') + bandwidth('x')\" },\n                targetY: { expr: \"scale('y', datum.target.yc)\" },\n                targetX: { expr: \"scale('x', 'stk2')\" }\n              },\n              { type: \"formula\", expr: \"range('y')[0]-scale('y', datum.size)\", as: \"strokeWidth\" },\n              { type: \"formula\", expr: \"datum.size/domain('y')[1]\", as: \"percentage\" }\n            ]\n          }\n        ],\n        scales: [\n          {\n            name: \"x\",\n            type: \"band\",\n            range: \"width\",\n            domain: [\"stk1\", \"stk2\"],\n            paddingOuter: 0.05,\n            paddingInner: 0.95\n          },\n          {\n            name: \"y\",\n            type: \"linear\",\n            range: \"height\",\n            domain: { data: \"nodes\", field: \"y1\" }\n          },\n          {\n            name: \"color\",\n            type: \"ordinal\",\n            range: \"category\",\n            domain: {\n              fields: [\n                { data: \"rawData\", field: \"stk1\" },\n                { data: \"rawData\", field: \"stk2\" }\n              ]\n            }\n          },\n          {\n            name: \"stackNames\",\n            type: \"ordinal\",\n            range: [\"Source\", \"Destination\"],\n            domain: [\"stk1\", \"stk2\"]\n          }\n        ],\n        axes: [\n          {\n            orient: \"bottom\",\n            scale: \"x\",\n            encode: {\n              labels: { update: { text: { scale: \"stackNames\", field: \"value\" } } }\n            }\n          },\n          { orient: \"left\", scale: \"y\" }\n        ],\n        marks: [\n          {\n            type: \"path\",\n            name: \"edgeMark\",\n            from: { data: \"edges\" },\n            clip: true,\n            encode: {\n              update: {\n                stroke: { scale: \"color\", field: \"stk1\" }, // links colored by source\n                strokeWidth: { field: \"strokeWidth\" },\n                path: { field: \"path\" },\n                strokeOpacity: {\n                  signal:\n                    \"!groupSelector && (groupHover.stk1 == datum.stk1 || groupHover.stk2 == datum.stk2) ? 0.9 : 0.3\"\n                },\n                zindex: {\n                  signal:\n                    \"!groupSelector && (groupHover.stk1 == datum.stk1 || groupHover.stk2 == datum.stk2) ? 1 : 0\"\n                },\n                tooltip: {\n                  signal:\n                    \"datum.stk1 + ' → ' + datum.stk2 + '    ' + format(datum.size, ',.0f') + '   (' + format(datum.percentage, '.1%') + ')'\"\n                }\n              },\n              hover: { strokeOpacity: { value: 1 } }\n            }\n          },\n          {\n            type: \"rect\",\n            name: \"groupMark\",\n            from: { data: \"groups\" },\n            encode: {\n              enter: {\n                fill: { scale: \"color\", field: \"grpId\" }, // both source & destination use union colors\n                width: { scale: \"x\", band: 1 }\n              },\n              update: {\n                x: { scale: \"x\", field: \"stack\" },\n                y: { field: \"scaledY0\" },\n                y2: { field: \"scaledY1\" },\n                fillOpacity: { value: 0.6 },\n                tooltip: {\n                  signal:\n                    \"datum.grpId + '   ' + format(datum.total, ',.0f') + '   (' + format(datum.percentage, '.1%') + ')'\"\n                }\n              },\n              hover: { fillOpacity: { value: 1 } }\n            }\n          },\n          {\n            type: \"text\",\n            from: { data: \"groups\" },\n            interactive: false,\n            encode: {\n              update: {\n                x: {\n                  signal:\n                    \"scale('x', datum.stack) + (datum.rightLabel ? bandwidth('x') + 8 : -8)\"\n                },\n                yc: { signal: \"(datum.scaledY0 + datum.scaledY1)/2\" },\n                align: { signal: \"datum.rightLabel ? 'left' : 'right'\" },\n                baseline: { value: \"middle\" },\n                fontWeight: { value: \"bold\" },\n                text: {\n                  signal: \"abs(datum.scaledY0-datum.scaledY1) > 13 ? datum.grpId : ''\"\n                }\n              }\n            }\n          }\n        ],\n        signals: [\n          {\n            name: \"groupHover\",\n            value: {},\n            on: [\n              {\n                events: \"@groupMark:mouseover\",\n                update:\n                  \"{stk1:datum.stack=='stk1' && datum.grpId, stk2:datum.stack=='stk2' && datum.grpId}\"\n              },\n              { events: \"mouseout\", update: \"{}\" }\n            ]\n          },\n          {\n            name: \"groupSelector\",\n            value: false,\n            on: [\n              {\n                events: \"@groupMark:click!\",\n                update:\n                  \"{stack:datum.stack, stk1:datum.stack=='stk1' && datum.grpId, stk2:datum.stack=='stk2' && datum.grpId}\"\n              },\n              {\n                events: [\n                  { type: \"click\", markname: \"groupReset\" },\n                  { type: \"dblclick\" }\n                ],\n                update: \"false\"\n              }\n            ]\n          }\n        ]\n      };\n      }\n\n      else if (chartType === \"ribbon\") {\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Ribbon chart from Excel selection\",\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        data: { values: data },\n        layer: [\n        {\n            mark: { type: \"area\", interpolate: \"monotone\", tooltip: true },\n            encoding: {\n            x: {\n                field: headers[0],\n                type: \"ordinal\" // temporal change to \"ordinal\" if your first col is not a date\n            },\n            y: {\n                aggregate: \"sum\",\n                field: headers[2],\n                type: \"quantitative\",\n                axis: null,\n                stack: \"center\"\n            },\n            color: {\n                field: headers[1],\n                type: \"nominal\"\n            },\n            order: {\n                aggregate: \"sum\",\n                field: headers[2],\n                type: \"quantitative\"\n            }\n            }\n        }\n        ],\n        config: {\n        view: { stroke: \"transparent\" },\n        axis: {\n            ticks: false,\n            grid: true,\n            gridColor: \"white\",\n            gridWidth: 3,\n            domain: false,\n            labelColor: \"#666666\"\n        },\n        legend: {\n            titleFont: \"Segoe UI\",\n            titleFontWeight: \"bold\",\n            titleColor: \"#666666\",\n            labelFont: \"Segoe UI\",\n            labelColor: \"#666666\",\n            symbolType: \"circle\",\n            symbolSize: 75\n        }\n        }\n      };\n      }\n\n      else if (chartType === \"ridgeline\") {\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Ridgeline (Joyplot) chart from Excel selection\",\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        data: { values: data },\n        mark: {\n        type: \"area\",\n        fillOpacity: 0.7,\n        strokeOpacity: 1,\n        strokeWidth: 1,\n        interpolate: \"monotone\"\n        },\n        width: 400,\n        height: 20,\n        encoding: {\n        x: {\n            field: headers[0],       // date/time column\n            type: \"ordinal\",\n            title: headers[0]\n        },\n        y: {\n            aggregate: \"sum\",\n            field: headers[2],       // value column\n            type: \"quantitative\",\n            scale: { range: [20, -40] },\n            axis: {\n            title: null,\n            values: [0],\n            domain: false,\n            labels: false,\n            ticks: false\n            }\n        },\n        row: {\n            field: headers[1],       // category column\n            type: \"nominal\",\n            title: headers[1],\n            header: {\n            title: null,\n            labelAngle: 0,\n            labelOrient: \"left\",\n            labelAlign: \"left\",\n            labelPadding: 0\n            },\n            sort: { field: headers[0], op: \"max\", order: \"ascending\" }\n        },\n        fill: {\n            field: headers[1],\n            type: \"nominal\",\n            legend: null,\n            scale: { scheme: \"plasma\" }\n        }\n        },\n        resolve: { scale: { y: \"independent\" } },\n        config: {\n        view: { stroke: \"transparent\" },\n        facet: { spacing: 20 },\n        header: {\n            labelFontSize: 12,\n            labelFontWeight: 500,\n            labelAngle: 0,\n            labelAnchor: \"end\",\n            labelOrient: \"top\",\n            labelPadding: -19\n        },\n        axis: {\n            domain: false,\n            grid: false,\n            ticks: false,\n            tickCount: 5,\n            labelFontSize: 12,\n            titleFontSize: 12,\n            titleFontWeight: 400,\n            titleColor: \"#605E5C\"\n        }\n        }\n      };\n      }\n\n      else if (chartType === \"wordcloud\") {\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega/v5.json\",\n        description: \"Word cloud from Excel selection\",\n        width: 800,\n        height: 400,\n        padding: 0,\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        data: [\n        {\n            name: \"table\",\n            values: data,\n            transform: [\n            {\n                type: \"countpattern\",\n                field: headers[0], // Use first column as text source\n                case: \"upper\",\n                pattern: \"[\\\\w']{3,}\",\n                stopwords: \"(i|me|my|myself|we|us|our|ours|ourselves|you|your|yours|yourself|yourselves|he|him|his|himself|she|her|hers|herself|it|its|itself|they|them|their|theirs|themselves|what|which|who|whom|whose|this|that|these|those|am|is|are|was|were|be|been|being|have|has|had|having|do|does|did|doing|will|would|should|can|could|ought|i'm|you're|he's|she's|it's|we're|they're|i've|you've|we've|they've|i'd|you'd|he'd|she'd|we'd|they'd|i'll|you'll|he'll|she'll|we'll|they'll|isn't|aren't|wasn't|weren't|hasn't|haven't|hadn't|doesn't|don't|didn't|won't|wouldn't|shan't|shouldn't|can't|cannot|couldn't|mustn't|let's|that's|who's|what's|here's|there's|when's|where's|why's|how's|a|an|the|and|but|if|or|because|as|until|while|of|at|by|for|with|about|against|between|into|through|during|before|after|above|below|to|from|up|upon|down|in|out|on|off|over|under|again|further|then|once|here|there|when|where|why|how|all|any|both|each|few|more|most|other|some|such|no|nor|not|only|own|same|so|than|too|very|say|says|said|shall)\"\n            },\n            {\n                type: \"formula\", \n                as: \"angle\",\n                expr: \"[-45, 0, 45][~~(random() * 3)]\"\n            },\n            {\n                type: \"formula\", \n                as: \"weight\",\n                expr: \"if(datum.count > 10, 600, 300)\"\n            }\n            ]\n        }\n        ],\n        \n        scales: [\n        {\n            name: \"color\",\n            type: \"ordinal\",\n            domain: { data: \"table\", field: \"text\" },\n            range: [\"#d5a928\", \"#652c90\", \"#939597\", \"#2563eb\", \"#dc2626\", \"#059669\"]\n        }\n        ],\n        \n        marks: [\n        {\n            type: \"text\",\n            from: { data: \"table\" },\n            encode: {\n            enter: {\n                text: { field: \"text\" },\n                align: { value: \"center\" },\n                baseline: { value: \"alphabetic\" },\n                fill: { scale: \"color\", field: \"text\" }\n            },\n            update: {\n                fillOpacity: { value: 1 }\n            },\n            hover: {\n                fillOpacity: { value: 0.5 }\n            }\n            },\n            transform: [\n            {\n                type: \"wordcloud\",\n                size: [800, 400],\n                text: { field: \"text\" },\n                rotate: { field: \"datum.angle\" },\n                font: \"Helvetica Neue, Arial\",\n                fontSize: { field: \"datum.count\" },\n                fontWeight: { field: \"datum.weight\" },\n                fontSizeRange: [12, 56],\n                padding: 2\n            }\n            ]\n        }\n        ]\n      };\n      }\n\n      else if (chartType === \"area\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n          description: \"Area chart from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          mark: { \n            type: \"area\", \n            tooltip: true,\n            opacity: 0.7\n          },\n          encoding: {\n            x: { \n              field: headers[0], \n              type: \"ordinal\",\n              axis: {\n                title: headers[0],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            y: { \n              field: headers[1], \n              type: \"quantitative\",\n              axis: {\n                title: headers[1],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            // Add color encoding for multiple areas if 3rd column exists\n            ...(headers.length >= 3 && {\n              color: { \n                field: headers[2], \n                type: \"nominal\",\n                legend: {\n                  title: headers[2],\n                  titleFontSize: 12,\n                  labelFontSize: 11\n                }\n              }\n            })\n          },\n          config: {\n            font: \"Segoe UI\",\n            axis: {\n              labelColor: \"#605e5c\",\n              titleColor: \"#323130\",\n              gridColor: \"#f3f2f1\"\n            },\n            legend: {\n              titleColor: \"#323130\",\n              labelColor: \"#605e5c\"\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"bar\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n          description: \"Bar chart from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          mark: { \n            type: \"bar\", \n            tooltip: true\n          },\n          encoding: {\n            x: { \n              field: headers[0], \n              type: \"nominal\",\n              axis: {\n                title: headers[0],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            y: { \n              field: headers[1], \n              type: \"quantitative\",\n              axis: {\n                title: headers[1],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            // Add color encoding for grouped bars if 3rd column exists\n            ...(headers.length >= 3 && {\n              color: { \n                field: headers[2], \n                type: \"nominal\",\n                legend: {\n                  title: headers[2],\n                  titleFontSize: 12,\n                  labelFontSize: 11\n                }\n              }\n            })\n          },\n          config: {\n            font: \"Segoe UI\",\n            axis: {\n              labelColor: \"#605e5c\",\n              titleColor: \"#323130\",\n              gridColor: \"#f3f2f1\"\n            },\n            legend: {\n              titleColor: \"#323130\",\n              labelColor: \"#605e5c\"\n            }\n          }\n        };\n      }\n\n      // Render hidden chart\n      const hiddenDiv = document.createElement(\"div\");\n      hiddenDiv.style.display = \"none\";\n      document.body.appendChild(hiddenDiv);\n\n      const result = await vegaEmbed(hiddenDiv, spec, { actions: false });\n      const view = result.view;\n\n      // Export chart -> PNG\n      const pngUrl = await view.toImageURL(\"png\");\n      const response = await fetch(pngUrl);\n      const blob = await response.blob();\n\n      const reader = new FileReader();\n      reader.onloadend = async () => {\n      const base64data = reader.result.split(\",\")[1];\n\n      // Insert picture above selection\n      const image = sheet.shapes.addImage(base64data);\n      image.left = range.left;\n      image.top = range.top;\n      image.lockAspectRatio = true; // keep proportions\n\n      await context.sync();\n      };\n\n      reader.readAsDataURL(blob);\n      \n      // Clean up hidden div\n      document.body.removeChild(hiddenDiv);\n    });\n  } catch (error) {\n    console.error(error);\n  }\n}","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.js\", import.meta.url);\n// Module\nvar code = \"<!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Vega Chart</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/vega@6\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/vega-lite@6\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/vega-embed@6\\\"><\" + \"/script> <\" + \"script type=\\\"module\\\" src=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\"><\" + \"/script> <style>body{font-family:-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif;margin:20px;line-height:1.4}.chart-selector{margin-bottom:15px}label{display:block;margin-bottom:5px;font-weight:600;color:#323130}.custom-dropdown{position:relative;width:100%}.dropdown-header{width:100%;padding:8px 12px;border:1px solid #8a8886;border-radius:4px;font-size:14px;background:#fff;cursor:pointer;display:flex;justify-content:space-between;align-items:center;box-sizing:border-box}.dropdown-header:hover{border-color:#0078d4}.dropdown-arrow{font-size:12px;transition:transform .2s}.dropdown-arrow.expanded{transform:rotate(180deg)}.dropdown-list{position:absolute;top:100%;left:0;right:0;background:#fff;border:1px solid #8a8886;border-top:none;border-radius:0 0 4px 4px;max-height:300px;overflow-y:auto;z-index:1000;display:none;box-shadow:0 2px 8px rgba(0,0,0,.1)}.dropdown-list.open{display:block}.folder-item{padding:8px 12px;cursor:pointer;font-weight:600;color:#0078d4;background:#f8f9fa;border-bottom:1px solid #e1e4e8;display:flex;justify-content:space-between;align-items:center}.folder-item:hover{background:#e3f2fd}.folder-arrow{font-size:10px;transition:transform .2s}.folder-arrow.expanded{transform:rotate(90deg)}.chart-item{padding:8px 12px 8px 32px;cursor:pointer;color:#323130;border-bottom:1px solid #f0f0f0;display:none}.chart-item.visible{display:block}.chart-item:hover{background:#f5f5f5}.chart-item:last-child{border-bottom:none}button{background-color:#0078d4;color:#fff;border:none;padding:10px 20px;border-radius:4px;font-size:14px;cursor:pointer;width:100%;margin-bottom:15px}button:hover{background-color:#106ebe}.data-requirements{background-color:#f8f9fa;border:1px solid #e1e4e8;border-radius:6px;padding:12px;margin-top:10px;font-size:13px}.data-requirements h4{margin:0 0 8px 0;color:#24292f;font-size:14px}.data-requirements ul{margin:0;padding-left:18px}.data-requirements li{margin-bottom:4px}.hidden{display:none}</style> </head> <body> <h2></h2> <div class=\\\"chart-selector\\\"> <label for=\\\"chartDropdown\\\">Select Chart Type:</label> <div class=\\\"custom-dropdown\\\" id=\\\"chartDropdown\\\"> <div class=\\\"dropdown-header\\\" id=\\\"dropdownHeader\\\"> <span id=\\\"selectedText\\\">Choose a chart...</span> <span class=\\\"dropdown-arrow\\\">▼</span> </div> <div class=\\\"dropdown-list\\\" id=\\\"dropdownList\\\"> <div class=\\\"folder-item\\\" data-folder=\\\"basic\\\"> <span>Basic</span> <span class=\\\"folder-arrow\\\">►</span> </div> <div class=\\\"chart-item\\\" data-chart=\\\"bar\\\" data-folder=\\\"basic\\\">Bar</div> <div class=\\\"chart-item\\\" data-chart=\\\"line\\\" data-folder=\\\"basic\\\">Line</div> <div class=\\\"chart-item\\\" data-chart=\\\"area\\\" data-folder=\\\"basic\\\">Area</div> <div class=\\\"chart-item\\\" data-chart=\\\"point\\\" data-folder=\\\"basic\\\">Scatter</div> <div class=\\\"chart-item\\\" data-chart=\\\"pie\\\" data-folder=\\\"basic\\\">Pie</div> <div class=\\\"chart-item\\\" data-chart=\\\"box\\\" data-folder=\\\"basic\\\">Box</div> <div class=\\\"chart-item\\\" data-chart=\\\"radar\\\" data-folder=\\\"basic\\\">Radar</div> <div class=\\\"chart-item\\\" data-chart=\\\"histogram\\\" data-folder=\\\"basic\\\">Histogram</div> <div class=\\\"chart-item\\\" data-chart=\\\"treemap\\\" data-folder=\\\"basic\\\">Treemap</div> <div class=\\\"chart-item\\\" data-chart=\\\"sunburst\\\" data-folder=\\\"basic\\\">Sunburst</div> <div class=\\\"chart-item\\\" data-chart=\\\"waterfall\\\" data-folder=\\\"basic\\\">Waterfall</div> <div class=\\\"folder-item\\\" data-folder=\\\"special\\\"> <span>Special</span> <span class=\\\"folder-arrow\\\">►</span> </div> <div class=\\\"chart-item\\\" data-chart=\\\"radial\\\" data-folder=\\\"special\\\">Radial</div> <div class=\\\"chart-item\\\" data-chart=\\\"arc\\\" data-folder=\\\"special\\\">Arc</div> <div class=\\\"chart-item\\\" data-chart=\\\"tree\\\" data-folder=\\\"special\\\">Tree</div> <div class=\\\"chart-item\\\" data-chart=\\\"wordcloud\\\" data-folder=\\\"special\\\">Wordcloud</div> <div class=\\\"chart-item\\\" data-chart=\\\"gantt\\\" data-folder=\\\"special\\\">Gantt</div> <div class=\\\"chart-item\\\" data-chart=\\\"strip\\\" data-folder=\\\"special\\\">Strip</div> <div class=\\\"chart-item\\\" data-chart=\\\"heatmap\\\" data-folder=\\\"special\\\">Heatmap</div> <div class=\\\"chart-item\\\" data-chart=\\\"bullet\\\" data-folder=\\\"special\\\">Bullet</div> <div class=\\\"chart-item\\\" data-chart=\\\"horizon\\\" data-folder=\\\"special\\\">Horizon</div> <div class=\\\"chart-item\\\" data-chart=\\\"slope\\\" data-folder=\\\"special\\\">Slope</div> <div class=\\\"chart-item\\\" data-chart=\\\"mekko\\\" data-folder=\\\"special\\\">Mekko</div> <div class=\\\"chart-item\\\" data-chart=\\\"marimekko\\\" data-folder=\\\"special\\\">Marimekko</div> <div class=\\\"chart-item\\\" data-chart=\\\"bump\\\" data-folder=\\\"special\\\">Bump</div> <div class=\\\"chart-item\\\" data-chart=\\\"waffle\\\" data-folder=\\\"special\\\">Waffle</div> <div class=\\\"chart-item\\\" data-chart=\\\"lollipop\\\" data-folder=\\\"special\\\">Lollipop</div> <div class=\\\"chart-item\\\" data-chart=\\\"violin\\\" data-folder=\\\"special\\\">Violin</div> <div class=\\\"chart-item\\\" data-chart=\\\"sankey\\\" data-folder=\\\"special\\\">Sankey</div> <div class=\\\"chart-item\\\" data-chart=\\\"ribbon\\\" data-folder=\\\"special\\\">Ribbon</div> <div class=\\\"chart-item\\\" data-chart=\\\"ridgeline\\\" data-folder=\\\"special\\\">Ridgeline</div> <div class=\\\"chart-item\\\" data-chart=\\\"deviation\\\" data-folder=\\\"special\\\">Deviation</div> </div> </div> </div> <button id=\\\"drawChart\\\">Generate Chart</button> <select id=\\\"chartType\\\" style=\\\"display:none\\\"> <option value=\\\"\\\">Choose a chart...</option> <option value=\\\"bar\\\">Bar</option> <option value=\\\"line\\\">Line</option> <option value=\\\"area\\\">Area</option> <option value=\\\"point\\\">Scatter</option> <option value=\\\"pie\\\">Pie</option> <option value=\\\"box\\\">Box</option> <option value=\\\"histogram\\\">Histogram</option> <option value=\\\"radar\\\">Radar</option> <option value=\\\"heatmap\\\">Heatmap</option> <option value=\\\"radial\\\">Radial</option> <option value=\\\"arc\\\">Arc</option> <option value=\\\"tree\\\">Tree</option> <option value=\\\"wordcloud\\\">Wordcloud</option> <option value=\\\"gantt\\\">Gantt</option> <option value=\\\"strip\\\">Strip</option> <option value=\\\"treemap\\\">Treemap</option> <option value=\\\"sunburst\\\">Sunburst</option> <option value=\\\"bullet\\\">Bullet</option> <option value=\\\"horizon\\\">Horizon</option> <option value=\\\"slope\\\">Slope</option> <option value=\\\"mekko\\\">Mekko</option> <option value=\\\"marimekko\\\">Marimekko</option> <option value=\\\"bump\\\">Bump</option> <option value=\\\"waffle\\\">Waffle</option> <option value=\\\"lollipop\\\">Lollipop</option> <option value=\\\"violin\\\">Violin</option> <option value=\\\"sankey\\\">Sankey</option> <option value=\\\"ribbon\\\">Ribbon</option> <option value=\\\"ridgeline\\\">Ridgeline</option> <option value=\\\"deviation\\\">Deviation</option> <option value=\\\"waterfall\\\">Waterfall</option> </select> <div id=\\\"req-point\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> X-axis values (numbers)</li> <li><strong>Column 2:</strong> Y-axis values (numbers)</li> <li><strong>Column 3 (optional):</strong> Color grouping (categories for different colors)</li> <li><strong>Column 4 (optional):</strong> Shape grouping (categories for different shapes)</li> </ul> </div> <div id=\\\"req-bar\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Categories or X-axis values</li> <li><strong>Column 2:</strong> Values (numbers)</li> <li><strong>Column 3 (optional):</strong> Grouping variable for grouped bars</li> </ul> </div> <div id=\\\"req-line\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> X-axis values (often dates/time or categories)</li> <li><strong>Column 2-n:</strong> Value series</li> </ul> </div> <div id=\\\"req-area\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> X-axis values (often dates/time)</li> <li><strong>Column 2:</strong> Y-axis values (numbers)</li> <li><strong>Column 3 (optional):</strong> Series grouping for multiple areas</li> </ul> </div> <div id=\\\"req-horizon\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> X-axis values (time periods, dates, or sequence numbers)</li> <li><strong>Column 2:</strong> Y-axis values (numeric data to visualize)</li> </ul> </div> <div id=\\\"req-slope\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Time periods (e.g., \\\"2023\\\", \\\"2024\\\" or \\\"Q1\\\", \\\"Q4\\\")</li> <li><strong>Column 2:</strong> Categories/Series (e.g., \\\"Product A\\\", \\\"Region 1\\\")</li> <li><strong>Column 3:</strong> Values (numbers)</li> </ul> </div> <div id=\\\"req-radar\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Series/Category name (e.g., \\\"Product A\\\", \\\"Team 1\\\")</li> <li><strong>Columns 2-n:</strong> Dimension values (e.g., \\\"Speed\\\", \\\"Quality\\\", \\\"Cost\\\")</li> </ul> </div> <div id=\\\"req-box\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Categories/Groups (e.g., \\\"Species\\\", \\\"Department\\\", \\\"Region\\\")</li> <li><strong>Column 2:</strong> Values for distribution analysis (numbers)</li> </ul> </div> <div id=\\\"req-pie\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Values (numbers for slice sizes)</li> </ul> </div> <div id=\\\"req-histogram\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Continuous numeric values to create distribution bins</li> <li><strong>Column 2 (optional):</strong> Grouping variable for colored/separate histograms</li> </ul> </div> <div id=\\\"req-radial\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category names</li> <li><strong>Column 2:</strong> Values (determines both angle and radius)</li> </ul> </div> <div id=\\\"req-arc\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Source node/entity (e.g., \\\"Person A\\\", \\\"Department 1\\\")</li> <li><strong>Column 2:</strong> Target node/entity (e.g., \\\"Person B\\\", \\\"Department 2\\\")</li> <li><strong>Column 3:</strong> Connection strength/weight (numbers, optional)</li> <li><strong>Column 4:</strong> Group/Category (optional, for coloring nodes)</li> </ul> </div> <div id=\\\"req-tree\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Parent (parent node name, empty for root nodes)</li> <li><strong>Column 2:</strong> Child (child node name)</li> <li><strong>Column 3 (optional):</strong> Value (affects node size, defaults to 1)</li> </ul> </div> <div id=\\\"req-strip\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column A:</strong> Quantitative values (e.g., Horsepower, Sales, Temperature)</li> <li><strong>Column B:</strong> Categories/Groups (e.g., Cylinders, Department, Grade)</li> <li><strong>Column C (optional):</strong> Color grouping (e.g., Brand, Region, Type)</li> </ul> </div> <div id=\\\"req-treemap\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column A:</strong> Parent/Group hierarchy (e.g., Region, Division)</li> <li><strong>Column B:</strong> Category/Item names (e.g., Product, Department, File)</li> <li><strong>Column C:</strong> Values/Sizes (e.g., Sales, Budget, File Size)</li> </ul> </div> <div id=\\\"req-sunburst\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Parent (parent category, empty for root level)</li> <li><strong>Column 2:</strong> Child (child category or item name)</li> <li><strong>Column 3 (optional):</strong> Value (size of the segment, defaults to 1)</li> </ul> </div> <div id=\\\"req-wordcloud\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Text data (sentences, phrases, or words)</li> </ul> </div> <div id=\\\"req-gantt\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column A:</strong> Task ID (number)</li> <li><strong>Column B:</strong> Parent ID (number, empty for root tasks)</li> <li><strong>Column C:</strong> Task Name (text)</li> <li><strong>Column D:</strong> Start Date (date)</li> <li><strong>Column E:</strong> End Date (date)</li> <li><strong>Column F:</strong> Progress (0-1 decimal or percentage)</li> <li><strong>Column G (optional):</strong> Dependencies (comma-separated task IDs)</li> </ul> </div> <div id=\\\"req-lollipop\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category names (e.g., \\\"Products\\\", \\\"Regions\\\", \\\"Teams\\\")</li> <li><strong>Column 2:</strong> Values (numbers for stick length and circle size)</li> </ul> </div> <div id=\\\"req-waffle\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category names (e.g., \\\"Product A\\\", \\\"Product B\\\")</li> <li><strong>Column 2:</strong> Values (numbers that will be converted to percentages)</li> </ul> </div> <div id=\\\"req-bullet\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Title/Metric name (e.g., \\\"Revenue\\\", \\\"Profit\\\")</li> <li><strong>Column 2:</strong> Poor range max</li> <li><strong>Column 3:</strong> Satisfactory range max</li> <li><strong>Column 4:</strong> Good range max</li> <li><strong>Column 5:</strong> Actual value</li> <li><strong>Column 6:</strong> Forecast value (optional)</li> <li><strong>Column 7:</strong> Target value (marker)</li> </ul> </div> <div id=\\\"req-mekko\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category (text)</li> <li><strong>Column 2:</strong> Subcategory (text)</li> <li><strong>Column 3:</strong> Value (number)</li> </ul> </div> <div id=\\\"req-marimekko\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category (text)</li> <li><strong>Column 2:</strong> Subcategory (text)</li> <li><strong>Column 3:</strong> Value (number)</li> </ul> </div> <div id=\\\"req-heatmap\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Y-axis categories (e.g., \\\"Months\\\", \\\"Products\\\", \\\"Regions\\\")</li> <li><strong>Column 2:</strong> X-axis categories (e.g., \\\"Days\\\", \\\"Quarters\\\", \\\"Sales Reps\\\")</li> <li><strong>Column 3:</strong> Values (numbers for color intensity)</li> </ul> </div> <div id=\\\"req-bump\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Time periods</li> <li><strong>Column 2:</strong> Categories (e.g., \\\"Team A\\\", \\\"Team B\\\")</li> <li><strong>Column 3:</strong> Rank values (1, 2, 3, etc.)</li> </ul> </div> <div id=\\\"req-violin\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Categories/Groups (e.g., \\\"Country A\\\", \\\"Product Line\\\", \\\"Department\\\")</li> <li><strong>Column 2:</strong> Continuous values (numbers for distribution analysis)</li> </ul> </div> <div id=\\\"req-sankey\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Source Category</li> <li><strong>Column 2:</strong> Destination Category</li> <li><strong>Column 3:</strong> Values (numbers)</li> </ul> </div> <div id=\\\"req-ribbon\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Time periods (dates/periods)</li> <li><strong>Column 2:</strong> Categories (different series)</li> <li><strong>Column 3:</strong> Values (numbers)</li> </ul> </div> <div id=\\\"req-ridgeline\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Time periods/X-axis values</li> <li><strong>Column 2:</strong> Categories (creates separate ridges)</li> <li><strong>Column 3:</strong> Values (creates distribution shape)</li> </ul> </div> <div id=\\\"req-deviation\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Date/Period</li> <li><strong>Column 2:</strong> Actual values</li> <li><strong>Column 3:</strong> Target/Baseline values</li> </ul> </div> <div id=\\\"req-waterfall\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Categories/Labels (e.g., \\\"Begin\\\", \\\"Q1\\\", \\\"Q2\\\", \\\"End\\\")</li> <li><strong>Column 2:</strong> Amount values (positive/negative numbers)</li> </ul> </div> <div id=\\\"chart\\\"></div> <\" + \"script>document.addEventListener(\\\"DOMContentLoaded\\\",function(){const e=document.getElementById(\\\"dropdownHeader\\\"),t=document.getElementById(\\\"dropdownList\\\"),o=e.querySelector(\\\".dropdown-arrow\\\"),d=document.getElementById(\\\"selectedText\\\"),c=document.querySelectorAll(\\\".data-requirements\\\"),n=document.getElementById(\\\"chartType\\\");let s=!1;c.forEach(e=>e.classList.add(\\\"hidden\\\")),e.addEventListener(\\\"click\\\",function(){s=!s,t.classList.toggle(\\\"open\\\",s),o.classList.toggle(\\\"expanded\\\",s)}),document.addEventListener(\\\"click\\\",function(e){e.target.closest(\\\".custom-dropdown\\\")||(s=!1,t.classList.remove(\\\"open\\\"),o.classList.remove(\\\"expanded\\\"))}),document.querySelectorAll(\\\".folder-item\\\").forEach(e=>{e.addEventListener(\\\"click\\\",function(e){e.stopPropagation();const t=this.dataset.folder,o=this.querySelector(\\\".folder-arrow\\\"),d=document.querySelectorAll(`[data-folder=\\\"${t}\\\"].chart-item`),c=o.classList.contains(\\\"expanded\\\");o.classList.toggle(\\\"expanded\\\",!c),d.forEach(e=>{e.classList.toggle(\\\"visible\\\",!c)})})}),document.querySelectorAll(\\\".chart-item\\\").forEach(e=>{e.addEventListener(\\\"click\\\",function(){const e=this.dataset.chart,r=this.textContent;d.textContent=r,n.value=e,s=!1,t.classList.remove(\\\"open\\\"),o.classList.remove(\\\"expanded\\\"),document.querySelectorAll(\\\".folder-arrow\\\").forEach(e=>{e.classList.remove(\\\"expanded\\\")}),document.querySelectorAll(\\\".chart-item\\\").forEach(e=>{e.classList.remove(\\\"visible\\\")}),c.forEach(e=>e.classList.add(\\\"hidden\\\"));const l=document.getElementById(`req-${e}`);l&&l.classList.remove(\\\"hidden\\\")})})})<\" + \"/script> </body> </html>\";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","t","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","bind","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","_invoke","configurable","writable","_toConsumableArray","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","toString","slice","constructor","name","_unsupportedIterableToArray","_nonIterableSpread","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_typeof","toPrimitive","String","_toPrimitive","_toPropertyKey","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","_next","_throw","run","_run","_callee3","_t","_context3","Excel","_ref","_callee2","context","sheet","range","values","headers","rows","data","chartType","spec","transformedData","valueColumns","excelDateToJSDate","ganttData","taskMap","timePeriods","categories","firstPeriod","lastPeriod","slopeData","allValues","isPercentage","formatString","dynamicHeight","horizonData","yValues","maxY","minY","_range","bandHeight","baseline","dataPoints","_dynamicWidth","nodes","treeData","allIds","nodeCount","_dynamicWidth2","_dynamicHeight","_nodes","hierarchicalData","_allIds","_nodeCount","chartSize","radarData","dimensions","uniqueDimensions","processedData","numDataPoints","_dynamicWidth3","maxAmount","_dynamicHeight2","_data","_data2","_data3","edges","nodeMap","_nodes2","edgesWithIndices","_treeData","uniqueX","_dynamicWidth4","_data4","hiddenDiv","result","view","pngUrl","response","blob","reader","_context2","workbook","worksheets","getActiveWorksheet","getSelectedRange","load","sync","console","warn","map","row","h","getElementById","$schema","description","background","config","stroke","mark","type","size","tooltip","encoding","x","field","scale","zero","axis","title","labelFontSize","titleFontSize","color","legend","shape","font","labelColor","titleColor","gridColor","colName","parseFloat","point","strokeWidth","labelAngle","scheme","filled","serial","Date","Math","round","id","start","end","isNaN","progress","includes","parentId","concat","startDate","endDate","dependencies","split","trim","Boolean","Map","task","level","current","has","duration","progressEnd","getTime","sort","width","height","max","layer","opacity","format","x2","align","dx","fontSize","text","strokeDash","date","toISOString","grid","Set","every","min","autosize","contains","labelFontWeight","labelPadding","domain","ticks","padding","datum","detail","transform","fontWeight","op","as","order","dy","fontStyle","fill","index","dynamicWidth","toLowerCase","parent","child","set","existingNode","node","seriesIndex","seriesName","dimension","series","category","abs","y2","condition","xOffset","x2Offset","ranges","measures","markers","outerRadius","theta","top","bottom","left","right","source","fields","ops","groupby","offset","expr","scales","nice","axes","orient","zindex","tickCount","tickSize","labelFont","encode","labels","update","signal","marks","fillOpacity","interactive","lineHeight","target","group","edge","default","count","enter","mult","strokeOpacity","sourceX","targetX","sourceY","targetY","angle","titleFont","thickness","gridOpacity","find","parentKey","method","ratio","hover","joinaggregate","calculate","aggregate","facet","header","titleFontWeight","symbolType","symbolSize","spacing","column","density","extent","median","bounds","vconcat","cornerRadiusEnd","hconcat","direction","gradientLength","line","strokeCap","strokeJoin","innerRadius","radiusOffset","stack","radius","rangeMin","interpolate","stk1","stk2","doc_count","paddingOuter","paddingInner","clip","path","band","yc","signals","on","events","markname","gridWidth","labelOrient","labelAlign","labelAnchor","case","pattern","stopwords","rotate","fontSizeRange","createElement","style","display","body","appendChild","vegaEmbed","actions","toImageURL","fetch","FileReader","onloadend","_callee","base64data","image","_context","shapes","addImage","lockAspectRatio","readAsDataURL","removeChild","_x","error","Office","onReady","onclick","URL"],"sourceRoot":""}