{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://excel-custom-functions-js/webpack/bootstrap","webpack://excel-custom-functions-js/webpack/runtime/define property getters","webpack://excel-custom-functions-js/webpack/runtime/global","webpack://excel-custom-functions-js/webpack/runtime/hasOwnProperty shorthand","webpack://excel-custom-functions-js/webpack/runtime/publicPath","webpack://excel-custom-functions-js/webpack/runtime/jsonp chunk loading","webpack://excel-custom-functions-js/./src/taskpane/taskpane.js","webpack://excel-custom-functions-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/* global console, document, Excel, Office */\n\nOffice.onReady(() => {\n  document.getElementById(\"drawChart\").onclick = run;\n});\n\nexport async function run() {\n  try {\n    await Excel.run(async (context) => {\n      const sheet = context.workbook.worksheets.getActiveWorksheet();\n\n      // Get current selection\n      const range = context.workbook.getSelectedRange();\n      range.load(\"values, left, top\");\n      await context.sync();\n\n      const values = range.values;\n      if (values.length < 2) {\n        console.warn(\"Need at least header row + one data row\");\n        return;\n      }\n\n      // First row is header\n      const headers = values[0];\n      const rows = values.slice(1);\n\n      // Convert rows -> objects\n      const data = rows.map(row => {\n        let obj = {};\n        headers.forEach((h, i) => {\n          obj[h] = row[i];\n        });\n        return obj;\n      });\n\n      // Get chart type from dropdown\n      const chartType = document.getElementById(\"chartType\").value;\n\n      let spec;\n\n      if (chartType === \"point\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n          description: \"Colored scatter plot from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          mark: { type: \"point\", size: 100, tooltip: true },\n          encoding: {\n            x: { \n              field: headers[0], \n              type: \"quantitative\",\n              scale: { zero: false },\n              axis: {\n                title: headers[0],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            y: { \n              field: headers[1], \n              type: \"quantitative\",\n              scale: { zero: false },\n              axis: {\n                title: headers[1],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            // Add color encoding if 3rd column exists\n            ...(headers.length >= 3 && {\n              color: { \n                field: headers[2], \n                type: \"nominal\",\n                legend: {\n                  title: headers[2],\n                  titleFontSize: 12,\n                  labelFontSize: 11\n                }\n              }\n            }),\n            // Add shape encoding if 4th column exists\n            ...(headers.length >= 4 && {\n              shape: { \n                field: headers[3], \n                type: \"nominal\",\n                legend: {\n                  title: headers[3],\n                  titleFontSize: 12,\n                  labelFontSize: 11\n                }\n              }\n            })\n          },\n          config: {\n            font: \"Segoe UI\",\n            axis: {\n              labelColor: \"#605e5c\",\n              titleColor: \"#323130\",\n              gridColor: \"#f3f2f1\"\n            },\n            legend: {\n              titleColor: \"#323130\",\n              labelColor: \"#605e5c\"\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"line\") {\n        const transformedData = [];\n        const valueColumns = headers.slice(1);\n        data.forEach(row => {\n            valueColumns.forEach(colName => {\n            if (row[colName] !== null && row[colName] !== undefined && row[colName] !== \"\") {\n                transformedData.push({\n                [headers[0]]: row[headers[0]], // x-axis value (first column)\n                series: colName,               // series name (column header)\n                value: parseFloat(row[colName]) || 0  // y-axis value\n                });\n            }\n            });\n        });\n\n        spec = {\n            $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n            description: \"Multi-series line chart from Excel selection\",\n            background: \"white\",\n            config: { view: { stroke: \"transparent\" }},\n            data: { values: transformedData },\n            mark: { \n            type: \"line\", \n            point: false,\n            tooltip: true,\n            strokeWidth: 2\n            },\n            encoding: {\n            x: { \n                field: headers[0], \n                type: \"ordinal\",\n                axis: {\n                title: headers[0],\n                labelFontSize: 12,\n                titleFontSize: 14,\n                labelAngle: 0\n                }\n            },\n            y: { \n                field: \"value\", \n                type: \"quantitative\",\n                axis: {\n                title: \"Value\",\n                labelFontSize: 12,\n                titleFontSize: 14\n                }\n            },\n            color: { \n                field: \"series\", \n                type: \"nominal\",\n                scale: {\n                scheme: \"category10\"\n                },\n                legend: {\n                title: \"Series\",\n                titleFontSize: 12,\n                labelFontSize: 11\n                }\n            }\n            },\n            config: {\n            font: \"Segoe UI\",\n            axis: {\n                labelColor: \"#605e5c\",\n                titleColor: \"#323130\",\n                gridColor: \"#f3f2f1\"\n            },\n            legend: {\n                titleColor: \"#323130\",\n                labelColor: \"#605e5c\"\n            },\n            point: {\n                size: 60,\n                filled: true\n            }\n            }\n        };\n      }\n\n      else if (chartType === \"gantt\") {\n      function excelDateToJSDate(serial) {\n          return new Date(Math.round((serial - 25569) * 86400 * 1000));\n      }\n\n      const ganttData = rows.map(row => {\n          const parentId = row[0] || null;   // col 1 = parent id\n          const id = row[1];                 // col 2 = task id\n          const name = row[2] || `Task ${id}`;\n          if (!id) return null;\n\n          const start = typeof row[3] === \"number\" ? excelDateToJSDate(row[3]) : new Date(row[3]);\n          const end = typeof row[4] === \"number\" ? excelDateToJSDate(row[4]) : new Date(row[4]);\n          if (!(start instanceof Date) || isNaN(start) || !(end instanceof Date) || isNaN(end)) return null;\n\n          let progress = 0;\n          if (row[5]) {\n              if (typeof row[5] === \"string\" && row[5].includes(\"%\")) {\n                  progress = parseFloat(row[5]) / 100;\n              } else if (row[5] > 1) {\n                  progress = row[5] / 100;\n              } else {\n                  progress = row[5];\n              }\n          }\n\n          const dependencies = row[6] ? String(row[6]).split(\",\").map(d => d.trim()) : [];\n\n          return { id, parentId, name, startDate: start, endDate: end, progress, dependencies };\n      }).filter(Boolean);\n\n      // Precompute progressEnd\n      ganttData.forEach(task => {\n          const duration = task.endDate - task.startDate;\n          task.progressEnd = new Date(task.startDate.getTime() + duration * task.progress);\n      });\n\n      // Build parent->children map\n      const childrenMap = new Map();\n      ganttData.forEach(task => {\n          if (!childrenMap.has(task.parentId)) {\n              childrenMap.set(task.parentId, []);\n          }\n          childrenMap.get(task.parentId).push(task);\n      });\n\n      // Sort children by startDate\n      for (let [pid, childList] of childrenMap.entries()) {\n          childList.sort((a, b) => a.startDate - b.startDate);\n      }\n\n      // Recursive hierarchy ordering\n      function buildHierarchy(parentId = null, level = 0) {\n          const ordered = [];\n          const tasks = childrenMap.get(parentId) || [];\n          for (const task of tasks) {\n              task.level = level;\n              ordered.push(task);\n              ordered.push(...buildHierarchy(task.id, level + 1));\n          }\n          return ordered;\n      }\n\n      const orderedTasks = buildHierarchy(null);\n\n      spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n          description: \"Gantt Chart from Excel Data\",\n          width: 800,\n          height: Math.max(300, orderedTasks.length * 30),\n          data: { values: orderedTasks },\n          layer: [\n              {\n                  mark: { type: \"bar\", opacity: 0.3, height: 20 },\n                  encoding: {\n                      y: { field: \"name\", type: \"nominal\", axis: { title: null, labelFontSize: 11 }, sort: null },\n                      x: { field: \"startDate\", type: \"temporal\", axis: { title: \"Timeline\", format: \"%b %d\", labelAngle: -45 } },\n                      x2: { field: \"endDate\", type: \"temporal\" },\n                      color: { field: \"level\", type: \"ordinal\", scale: { scheme: \"category10\" }, legend: { title: \"Level\" } },\n                      tooltip: [\n                          { field: \"name\", type: \"nominal\", title: \"Task\" },\n                          { field: \"startDate\", type: \"temporal\", title: \"Start\", format: \"%Y-%m-%d\" },\n                          { field: \"endDate\", type: \"temporal\", title: \"End\", format: \"%Y-%m-%d\" },\n                          { field: \"progress\", type: \"quantitative\", title: \"Progress\", format: \".0%\" }\n                      ]\n                  }\n              },\n              {\n                  mark: { type: \"bar\", opacity: 0.8, height: 20 },\n                  encoding: {\n                      y: { field: \"name\", type: \"nominal\", sort: null },\n                      x: { field: \"startDate\", type: \"temporal\" },\n                      x2: { field: \"progressEnd\", type: \"temporal\" },\n                      color: { field: \"level\", type: \"ordinal\", scale: { scheme: \"category10\" } }\n                  }\n              },\n              {\n                  mark: { type: \"text\", align: \"left\", baseline: \"middle\", dx: 5, fontSize: 10 },\n                  encoding: {\n                      y: { field: \"name\", type: \"nominal\", sort: null },\n                      x: { field: \"endDate\", type: \"temporal\" },\n                      text: { field: \"progress\", type: \"quantitative\", format: \".0%\" },\n                      color: { value: \"#666\" }\n                  }\n              },\n              {\n                  mark: { type: \"rule\", strokeDash: [4, 4], opacity: 0.5 },\n                  data: { values: [{ date: new Date().toISOString() }] },\n                  encoding: {\n                      x: { field: \"date\", type: \"temporal\" },\n                      color: { value: \"red\" },\n                      size: { value: 1 }\n                  }\n              }\n          ],\n          config: { view: { stroke: null }, axis: { grid: true, gridColor: \"#f0f0f0\" } }\n        };\n      }\n\n      else if (chartType === \"slope\") {\n        const timePeriods = [...new Set(data.map(d => d[headers[0]]))];\n        const categories = [...new Set(data.map(d => d[headers[1]]))];\n        \n        // Filter data for first and last periods only\n        const firstPeriod = timePeriods[0];\n        const lastPeriod = timePeriods[timePeriods.length - 1];\n        \n        const slopeData = data.filter(d => \n            d[headers[0]] === firstPeriod || d[headers[0]] === lastPeriod\n        );\n\n        // Check if values are percentages (between -1 and 1)\n        const allValues = slopeData.map(d => d[headers[2]]);\n        const isPercentage = allValues.every(v => v >= -1 && v <= 1);\n        const formatString = isPercentage ? \".1%\" : \",.0f\";\n\n        // Calculate dynamic dimensions based on number of categories\n        const dynamicHeight = Math.max(300, Math.min(600, categories.length * 40));\n        const dynamicWidth = 500;\n\n        spec = {\n            $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n            description: \"Slope chart from Excel selection\",\n            background: \"white\",\n            config: { \n            view: { stroke: \"transparent\" },\n            autosize: { type: \"fit\", contains: \"padding\" }\n            },\n            width: dynamicWidth,\n            height: dynamicHeight,\n            data: { values: slopeData },\n            encoding: {\n            x: {\n                field: headers[0],\n                type: \"ordinal\",\n                axis: {\n                title: null,\n                labelFontSize: 14,\n                labelFontWeight: \"bold\",\n                labelPadding: 10,\n                domain: false,\n                ticks: false,\n                labelColor: \"#323130\"\n                },\n                scale: { padding: 0.1 }\n            },\n            y: {\n                field: headers[2],\n                type: \"quantitative\",\n                axis: null,\n                scale: { zero: false }\n            },\n            color: {\n                field: headers[1],\n                type: \"nominal\",\n                legend: null,\n                scale: { scheme: \"category10\" }\n            }\n            },\n            layer: [\n            // Background grid lines\n            {\n                mark: {\n                type: \"rule\",\n                strokeDash: [2, 2],\n                opacity: 0.3\n                },\n                data: { values: [{}] },\n                encoding: {\n                x: { datum: firstPeriod },\n                x2: { datum: lastPeriod },\n                y: { value: 0 },\n                color: { value: \"#e0e0e0\" }\n                }\n            },\n            // Slope lines\n            {\n                mark: {\n                type: \"line\",\n                strokeWidth: 2,\n                opacity: 0.7,\n                tooltip: true\n                },\n                encoding: {\n                detail: { field: headers[1], type: \"nominal\" },\n                tooltip: [\n                    { field: headers[1], type: \"nominal\", title: \"Category\" },\n                    { field: headers[0], type: \"nominal\", title: \"Period\" },\n                    { field: headers[2], type: \"quantitative\", title: \"Value\", format: formatString }\n                ]\n                }\n            },\n            // Points at the ends\n            {\n                mark: {\n                type: \"circle\",\n                size: 100,\n                opacity: 1,\n                tooltip: true\n                }\n            },\n            // Left side value labels\n            {\n                transform: [\n                { filter: `datum['${headers[0]}'] == '${firstPeriod}'` }\n                ],\n                mark: {\n                type: \"text\",\n                align: \"right\",\n                baseline: \"middle\",\n                dx: -8,\n                fontSize: 11,\n                fontWeight: \"normal\"\n                },\n                encoding: {\n                text: { \n                    field: headers[2], \n                    type: \"quantitative\",\n                    format: formatString\n                }\n                }\n            },\n            // Left side category labels (for top values)\n            {\n                transform: [\n                { filter: `datum['${headers[0]}'] == '${firstPeriod}'` },\n                {\n                    window: [{ op: \"rank\", as: \"rank\" }],\n                    sort: [{ field: headers[2], order: \"descending\" }]\n                },\n                { filter: \"datum.rank <= 3\" }\n                ],\n                mark: {\n                type: \"text\",\n                align: \"right\",\n                baseline: \"bottom\",\n                dx: -8,\n                dy: -12,\n                fontSize: 10,\n                fontWeight: \"bold\",\n                fontStyle: \"italic\"\n                },\n                encoding: {\n                text: { field: headers[1], type: \"nominal\" }\n                }\n            },\n            // Right side value labels\n            {\n                transform: [\n                { filter: `datum['${headers[0]}'] == '${lastPeriod}'` }\n                ],\n                mark: {\n                type: \"text\",\n                align: \"left\",\n                baseline: \"middle\",\n                dx: 8,\n                fontSize: 11,\n                fontWeight: \"normal\"\n                },\n                encoding: {\n                text: { \n                    field: headers[2], \n                    type: \"quantitative\",\n                    format: formatString\n                }\n                }\n            },\n            // Right side category labels\n            {\n                transform: [\n                { filter: `datum['${headers[0]}'] == '${lastPeriod}'` }\n                ],\n                mark: {\n                type: \"text\",\n                align: \"left\",\n                baseline: \"middle\",\n                dx: 35,\n                fontSize: 10,\n                fontWeight: \"bold\"\n                },\n                encoding: {\n                text: { field: headers[1], type: \"nominal\" }\n                }\n            }\n            ],\n            config: {\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            text: { \n                font: \"Segoe UI\", \n                fontSize: 11, \n                fill: \"#605E5C\" \n            },\n            axis: {\n                labelColor: \"#605e5c\",\n                titleColor: \"#323130\",\n                gridColor: \"#f3f2f1\"\n            }\n            }\n        };\n      }\n\n      else if (chartType === \"bullet\") {\n      const data = rows.map(r => ({\n        title: r[0],\n        ranges: [+r[1], +r[2], +r[3]],\n        measures: [+r[4], +r[5]],\n        markers: [+r[6]]\n      }));\n\n      spec = {\n        \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        \"data\": { \"values\": data },\n        \"facet\": {\n        \"row\": {\n            \"field\": \"title\", \"type\": \"ordinal\",\n            \"header\": { \"labelAngle\": 0, \"title\": \"\", \"labelAlign\": \"left\" }\n        }\n        },\n        \"spacing\": 10,\n        \"spec\": {\n        \"encoding\": {\n            \"x\": {\n            \"type\": \"quantitative\",\n            \"scale\": { \"nice\": false },\n            \"title\": null\n            }\n        },\n        \"layer\": [\n            { \"mark\": { \"type\": \"bar\", \"color\": \"#eee\" }, \"encoding\": { \"x\": { \"field\": \"ranges[2]\" } } },\n            { \"mark\": { \"type\": \"bar\", \"color\": \"#ddd\" }, \"encoding\": { \"x\": { \"field\": \"ranges[1]\" } } },\n            { \"mark\": { \"type\": \"bar\", \"color\": \"#ccc\" }, \"encoding\": { \"x\": { \"field\": \"ranges[0]\" } } },\n            { \"mark\": { \"type\": \"bar\", \"color\": \"lightsteelblue\", \"size\": 10 }, \"encoding\": { \"x\": { \"field\": \"measures[1]\" } } },\n            { \"mark\": { \"type\": \"bar\", \"color\": \"steelblue\", \"size\": 10 }, \"encoding\": { \"x\": { \"field\": \"measures[0]\" } } },\n            { \"mark\": { \"type\": \"tick\", \"color\": \"black\" }, \"encoding\": { \"x\": { \"field\": \"markers[0]\" } } }\n        ]\n        },\n        \"resolve\": { \"scale\": { \"x\": \"independent\" } },\n        \"config\": { \"tick\": { \"thickness\": 2 }, \"scale\": { \"barBandPaddingInner\": 0 } }\n      };\n      }\n\n      else if (chartType === \"box\") {\n      // Expect headers: Category | Value\n      const data = rows\n        .filter(r => r[0] && !isNaN(+r[1]))\n        .map(r => ({\n          category: r[0],\n          value: +r[1]\n        }));\n\n      spec = {\n        \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",\n        \"description\": \"Box plot from Excel selection\",\n        \"data\": { \"values\": data },\n        \"mark\": {\n          \"type\": \"boxplot\",\n          \"extent\": \"min-max\"   // show whiskers from min to max\n        },\n        \"encoding\": {\n          \"x\": { \"field\": \"category\", \"type\": \"nominal\" },\n          \"y\": {\n            \"field\": \"value\",\n            \"type\": \"quantitative\",\n            \"scale\": { \"zero\": false }\n          },\n          \"color\": {\n            \"field\": \"category\",\n            \"type\": \"nominal\",\n            \"legend\": null\n          }\n        }\n      };\n      }\n\n      else if (chartType === \"horizon\") {\n        const horizonData = data.map((row, index) => ({\n            x: row[headers[0]] || index + 1,\n            y: parseFloat(row[headers[1]]) || 0\n        }));\n\n        // Calculate data range and bands\n        const yValues = horizonData.map(d => d.y);\n        const maxY = Math.max(...yValues);\n        const minY = Math.min(...yValues);\n        const range = maxY - minY;\n        \n        // Define number of bands (typically 2-4 for horizon graphs)\n        const numBands = 3;\n        const bandHeight = range / (numBands * 2); // Divide by 2 for positive and negative\n        const baseline = minY + range / 2; // Use middle as baseline\n        \n        // Calculate dynamic dimensions\n        const dataPoints = horizonData.length;\n        const dynamicWidth = Math.max(300, Math.min(800, dataPoints * 15));\n\n        spec = {\n            \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",\n            \"description\": \"Horizon Graph from Excel selection (IDL methodology)\",\n            \"width\": dynamicWidth,\n            \"height\": 60,\n            \"background\": \"white\",\n            \"config\": { \n            \"view\": { \"stroke\": \"transparent\" },\n            \"area\": {\"interpolate\": \"monotone\"}\n            },\n            \"data\": { \"values\": horizonData },\n            \"encoding\": {\n            \"x\": {\n                \"field\": \"x\",\n                \"type\": headers[0].toLowerCase().includes('date') ? \"temporal\" : \"quantitative\",\n                \"scale\": {\"zero\": false, \"nice\": false},\n                \"axis\": {\n                \"title\": headers[0],\n                \"labelFontSize\": 10,\n                \"titleFontSize\": 12,\n                \"labelColor\": \"#605e5c\",\n                \"titleColor\": \"#323130\",\n                \"font\": \"Segoe UI\"\n                }\n            },\n            \"y\": {\n                \"type\": \"quantitative\",\n                \"scale\": {\"domain\": [0, bandHeight]},\n                \"axis\": {\n                \"title\": headers[1],\n                \"orient\": \"left\",\n                \"labelFontSize\": 10,\n                \"titleFontSize\": 12,\n                \"labelColor\": \"#605e5c\",\n                \"titleColor\": \"#323130\",\n                \"font\": \"Segoe UI\",\n                \"tickCount\": 3\n                }\n            }\n            },\n            \"layer\": [\n            // Band 1 (lightest positive)\n            {\n                \"transform\": [\n                {\"calculate\": `max(0, min(datum.y - ${baseline}, ${bandHeight}))`, \"as\": \"band1\"}\n                ],\n                \"mark\": {\n                \"type\": \"area\",\n                \"clip\": true,\n                \"opacity\": 0.3,\n                \"color\": \"#4a90e2\",\n                \"interpolate\": \"monotone\"\n                },\n                \"encoding\": {\n                \"y\": {\"field\": \"band1\"}\n                }\n            },\n            // Band 2 (medium positive)\n            {\n                \"transform\": [\n                {\"calculate\": `max(0, min(datum.y - ${baseline} - ${bandHeight}, ${bandHeight}))`, \"as\": \"band2\"}\n                ],\n                \"mark\": {\n                \"type\": \"area\",\n                \"clip\": true,\n                \"opacity\": 0.6,\n                \"color\": \"#2e7bd6\",\n                \"interpolate\": \"monotone\"\n                },\n                \"encoding\": {\n                \"y\": {\"field\": \"band2\"}\n                }\n            },\n            // Band 3 (darkest positive)\n            {\n                \"transform\": [\n                {\"calculate\": `max(0, datum.y - ${baseline} - ${bandHeight * 2})`, \"as\": \"band3\"}\n                ],\n                \"mark\": {\n                \"type\": \"area\",\n                \"clip\": true,\n                \"opacity\": 0.9,\n                \"color\": \"#1a5bb8\",\n                \"interpolate\": \"monotone\"\n                },\n                \"encoding\": {\n                \"y\": {\"field\": \"band3\"}\n                }\n            },\n            // Band -1 (lightest negative, mirrored)\n            {\n                \"transform\": [\n                {\"calculate\": `max(0, min(${baseline} - datum.y, ${bandHeight}))`, \"as\": \"nband1\"}\n                ],\n                \"mark\": {\n                \"type\": \"area\",\n                \"clip\": true,\n                \"opacity\": 0.3,\n                \"color\": \"#e74c3c\",\n                \"interpolate\": \"monotone\"\n                },\n                \"encoding\": {\n                \"y\": {\"field\": \"nband1\"}\n                }\n            },\n            // Band -2 (medium negative, mirrored)\n            {\n                \"transform\": [\n                {\"calculate\": `max(0, min(${baseline} - datum.y - ${bandHeight}, ${bandHeight}))`, \"as\": \"nband2\"}\n                ],\n                \"mark\": {\n                \"type\": \"area\",\n                \"clip\": true,\n                \"opacity\": 0.6,\n                \"color\": \"#c0392b\",\n                \"interpolate\": \"monotone\"\n                },\n                \"encoding\": {\n                \"y\": {\"field\": \"nband2\"}\n                }\n            },\n            // Band -3 (darkest negative, mirrored)\n            {\n                \"transform\": [\n                {\"calculate\": `max(0, ${baseline} - datum.y - ${bandHeight * 2})`, \"as\": \"nband3\"}\n                ],\n                \"mark\": {\n                \"type\": \"area\",\n                \"clip\": true,\n                \"opacity\": 0.9,\n                \"color\": \"#a93226\",\n                \"interpolate\": \"monotone\"\n                },\n                \"encoding\": {\n                \"y\": {\"field\": \"nband3\"}\n                }\n            }\n            ]\n        };\n      }\n\n      else if (chartType === \"tree\") {\n        const nodes = new Map();\n\n        data.forEach((row, i) => {\n            const parent = row[headers[0]] || \"\";\n            const child = row[headers[1]] || `node_${i}`;\n            const value = headers.length >= 3 ? (parseFloat(row[headers[2]]) || 1) : 1;\n            \n            // Add parent node if it doesn't exist and is not empty\n            if (parent && !nodes.has(parent)) {\n            nodes.set(parent, {\n                id: parent,\n                parent: \"\",\n                name: parent,\n                value: 1\n            });\n            }\n            \n            // Add child node\n            if (!nodes.has(child)) {\n            nodes.set(child, {\n                id: child,\n                parent: parent,\n                name: child,\n                value: value\n            });\n            } else {\n            // Update parent and value if child already exists\n            const existingNode = nodes.get(child);\n            existingNode.parent = parent;\n            existingNode.value = value;\n            }\n        });\n        \n        // Convert Map to array\n        const treeData = Array.from(nodes.values());\n        \n        // Find root nodes (nodes with no parent or parent not in dataset)\n        const allIds = new Set(treeData.map(d => d.id));\n        treeData.forEach(node => {\n            if (node.parent && !allIds.has(node.parent)) {\n            node.parent = \"\"; // Make it a root node if parent doesn't exist\n            }\n        });\n\n        // Calculate dynamic dimensions based on data size\n        const nodeCount = treeData.length;\n        const dynamicWidth = Math.max(600, Math.min(1200, nodeCount * 40));\n        const dynamicHeight = Math.max(400, Math.min(1600, nodeCount * 30));\n\n        spec = {\n            \"$schema\": \"https://vega.github.io/schema/vega/v6.json\",\n            \"description\": \"Tree diagram from Excel selection\",\n            \"width\": dynamicWidth,\n            \"height\": dynamicHeight,\n            \"padding\": 20,\n            \"background\": \"white\",\n            \"config\": { \"view\": { \"stroke\": \"transparent\" }},\n\n            \"signals\": [\n            {\n                \"name\": \"layout\", \n                \"value\": \"tidy\"\n            },\n            {\n                \"name\": \"links\", \n                \"value\": \"diagonal\"\n            }\n            ],\n\n            \"data\": [\n            {\n                \"name\": \"tree\",\n                \"values\": treeData,\n                \"transform\": [\n                {\n                    \"type\": \"stratify\",\n                    \"key\": \"id\",\n                    \"parentKey\": \"parent\"\n                },\n                {\n                    \"type\": \"tree\",\n                    \"method\": {\"signal\": \"layout\"},\n                    \"size\": [{\"signal\": \"height - 40\"}, {\"signal\": \"width - 100\"}],\n                    \"as\": [\"y\", \"x\", \"depth\", \"children\"]\n                }\n                ]\n            },\n            {\n                \"name\": \"links\",\n                \"source\": \"tree\",\n                \"transform\": [\n                { \"type\": \"treelinks\" },\n                {\n                    \"type\": \"linkpath\",\n                    \"orient\": \"horizontal\",\n                    \"shape\": {\"signal\": \"links\"}\n                }\n                ]\n            }\n            ],\n\n            \"scales\": [\n            {\n                \"name\": \"color\",\n                \"type\": \"ordinal\",\n                \"range\": [\"#0078d4\", \"#00bcf2\", \"#40e0d0\", \"#00cc6a\", \"#10893e\", \"#107c10\", \"#bad80a\", \"#ffb900\", \"#ff8c00\", \"#d13438\"],\n                \"domain\": {\"data\": \"tree\", \"field\": \"depth\"}\n            },\n            {\n                \"name\": \"size\",\n                \"type\": \"linear\",\n                \"range\": [100, 400],\n                \"domain\": {\"data\": \"tree\", \"field\": \"value\"}\n            }\n            ],\n\n            \"marks\": [\n            {\n                \"type\": \"path\",\n                \"from\": {\"data\": \"links\"},\n                \"encode\": {\n                \"update\": {\n                    \"path\": {\"field\": \"path\"},\n                    \"stroke\": {\"value\": \"#8a8886\"},\n                    \"strokeWidth\": {\"value\": 2},\n                    \"strokeOpacity\": {\"value\": 0.6}\n                }\n                }\n            },\n            {\n                \"type\": \"symbol\",\n                \"from\": {\"data\": \"tree\"},\n                \"encode\": {\n                \"enter\": {\n                    \"stroke\": {\"value\": \"#ffffff\"},\n                    \"strokeWidth\": {\"value\": 2}\n                },\n                \"update\": {\n                    \"x\": {\"field\": \"x\"},\n                    \"y\": {\"field\": \"y\"},\n                    \"size\": {\"scale\": \"size\", \"field\": \"value\"},\n                    \"fill\": {\"scale\": \"color\", \"field\": \"depth\"},\n                    \"fillOpacity\": {\"value\": 0.8},\n                    \"tooltip\": {\n                    \"signal\": \"{'Name': datum.name, 'ID': datum.id, 'Parent': datum.parent, 'Depth': datum.depth, 'Value': datum.value}\"\n                    }\n                },\n                \"hover\": {\n                    \"fillOpacity\": {\"value\": 1.0},\n                    \"strokeWidth\": {\"value\": 3}\n                }\n                }\n            },\n            {\n                \"type\": \"text\",\n                \"from\": {\"data\": \"tree\"},\n                \"encode\": {\n                \"enter\": {\n                    \"fontSize\": {\"value\": 11},\n                    \"baseline\": {\"value\": \"middle\"},\n                    \"font\": {\"value\": \"Segoe UI\"},\n                    \"fontWeight\": {\"value\": \"bold\"}\n                },\n                \"update\": {\n                    \"x\": {\"field\": \"x\"},\n                    \"y\": {\"field\": \"y\"},\n                    \"text\": {\"field\": \"name\"},\n                    \"dx\": {\"signal\": \"datum.children ? -12 : 12\"},\n                    \"align\": {\"signal\": \"datum.children ? 'right' : 'left'\"},\n                    \"fill\": {\"value\": \"#323130\"}\n                }\n                }\n            }\n            ]\n        };\n      }\n\n      else if (chartType === \"sunburst\") {\n        const nodes = new Map();\n        data.forEach((row, i) => {\n            const parent = row[headers[0]] || \"\";\n            const child = row[headers[1]] || `node_${i}`;\n            const value = headers.length >= 3 ? (parseFloat(row[headers[2]]) || 1) : 1;\n            \n            // Add parent node if it doesn't exist and is not empty\n            if (parent && !nodes.has(parent)) {\n            nodes.set(parent, {\n                id: parent,\n                parent: \"\",\n                name: parent,\n                size: 0 // Will be calculated later\n            });\n            }\n            \n            // Add child node\n            if (!nodes.has(child)) {\n            nodes.set(child, {\n                id: child,\n                parent: parent,\n                name: child,\n                size: value\n            });\n            } else {\n            // Update parent and value if child already exists\n            const existingNode = nodes.get(child);\n            existingNode.parent = parent;\n            existingNode.size = value;\n            }\n        });\n        \n        // Convert Map to array\n        const hierarchicalData = Array.from(nodes.values());\n        \n        // Find root nodes (nodes with no parent or parent not in dataset)\n        const allIds = new Set(hierarchicalData.map(d => d.id));\n        hierarchicalData.forEach(node => {\n            if (node.parent && !allIds.has(node.parent)) {\n            node.parent = \"\"; // Make it a root node if parent doesn't exist\n            }\n        });\n\n        // Calculate chart size based on data complexity\n        const nodeCount = hierarchicalData.length;\n        const chartSize = Math.max(400, Math.min(600, nodeCount * 15 + 300));\n\n        spec = {\n            \"$schema\": \"https://vega.github.io/schema/vega/v6.json\",\n            \"description\": \"Sunburst chart from Excel selection\",\n            \"width\": chartSize,\n            \"height\": chartSize,\n            \"padding\": 10,\n            \"autosize\": \"none\",\n            \"background\": \"white\",\n            \"config\": { \"view\": { \"stroke\": \"transparent\" }},\n\n            \"signals\": [\n            {\n                \"name\": \"centerX\",\n                \"update\": \"width / 2\"\n            },\n            {\n                \"name\": \"centerY\", \n                \"update\": \"height / 2\"\n            },\n            {\n                \"name\": \"outerRadius\",\n                \"update\": \"min(width, height) / 2 - 10\"\n            }\n            ],\n\n            \"data\": [\n            {\n                \"name\": \"tree\",\n                \"values\": hierarchicalData,\n                \"transform\": [\n                {\n                    \"type\": \"stratify\",\n                    \"key\": \"id\",\n                    \"parentKey\": \"parent\"\n                },\n                {\n                    \"type\": \"partition\",\n                    \"field\": \"size\",\n                    \"sort\": {\"field\": \"size\", \"order\": \"descending\"},\n                    \"size\": [{\"signal\": \"2 * PI\"}, {\"signal\": \"outerRadius\"}],\n                    \"as\": [\"a0\", \"r0\", \"a1\", \"r1\", \"depth\", \"children\"]\n                }\n                ]\n            }\n            ],\n\n            \"scales\": [\n            {\n                \"name\": \"color\",\n                \"type\": \"ordinal\",\n                \"domain\": {\"data\": \"tree\", \"field\": \"depth\"},\n                \"range\": [\n                \"#0078d4\", \"#00bcf2\", \"#40e0d0\", \"#00cc6a\", \"#10893e\", \n                \"#107c10\", \"#bad80a\", \"#ffb900\", \"#ff8c00\", \"#d13438\",\n                \"#8764b8\", \"#e3008c\", \"#00b7c3\", \"#038387\", \"#486991\"\n                ]\n            },\n            {\n                \"name\": \"opacity\",\n                \"type\": \"linear\",\n                \"domain\": {\"data\": \"tree\", \"field\": \"depth\"},\n                \"range\": [0.8, 0.4]\n            }\n            ],\n\n            \"marks\": [\n            {\n                \"type\": \"arc\",\n                \"from\": {\"data\": \"tree\"},\n                \"encode\": {\n                \"enter\": {\n                    \"x\": {\"signal\": \"centerX\"},\n                    \"y\": {\"signal\": \"centerY\"},\n                    \"stroke\": {\"value\": \"white\"},\n                    \"strokeWidth\": {\"value\": 1}\n                },\n                \"update\": {\n                    \"startAngle\": {\"field\": \"a0\"},\n                    \"endAngle\": {\"field\": \"a1\"},\n                    \"innerRadius\": {\"field\": \"r0\"},\n                    \"outerRadius\": {\"field\": \"r1\"},\n                    \"fill\": {\"scale\": \"color\", \"field\": \"depth\"},\n                    \"fillOpacity\": {\"scale\": \"opacity\", \"field\": \"depth\"}\n                }\n                }\n            },\n            {\n                \"type\": \"text\",\n                \"from\": {\"data\": \"tree\"},\n                \"encode\": {\n                \"enter\": {\n                    \"x\": {\"signal\": \"centerX\"},\n                    \"y\": {\"signal\": \"centerY\"},\n                    \"radius\": {\"signal\": \"(datum.r0 + datum.r1) / 2\"},\n                    \"theta\": {\"signal\": \"(datum.a0 + datum.a1) / 2\"},\n                    \"fill\": {\"value\": \"#323130\"},\n                    \"font\": {\"value\": \"Segoe UI\"},\n                    \"fontSize\": {\"value\": 10},\n                    \"fontWeight\": {\"value\": \"bold\"},\n                    \"align\": {\"value\": \"center\"},\n                    \"baseline\": {\"value\": \"middle\"}\n                },\n                \"update\": {\n                    \"text\": {\n                    \"signal\": \"(datum.r1 - datum.r0) > 20 && (datum.a1 - datum.a0) > 0.3 ? datum.name : ''\"\n                    },\n                    \"opacity\": {\n                    \"signal\": \"(datum.r1 - datum.r0) > 20 && (datum.a1 - datum.a0) > 0.3 ? 1 : 0\"\n                    }\n                }\n                }\n            }\n            ]\n        };\n      }\n\n      else if (chartType === \"radar\") {\n        const radarData = [];\n        const dimensions = headers.slice(1); // All columns except first are dimensions\n        \n        data.forEach((row, seriesIndex) => {\n            const seriesName = row[headers[0]] || `Series ${seriesIndex + 1}`;\n            \n            dimensions.forEach(dimension => {\n            const value = parseFloat(row[dimension]) || 0;\n            radarData.push({\n                series: seriesName,\n                dimension: dimension,\n                value: value,\n                category: seriesIndex\n            });\n            });\n        });\n\n        // Get unique dimensions for grid\n        const uniqueDimensions = [...new Set(radarData.map(d => d.dimension))];\n\n        spec = {\n            \"$schema\": \"https://vega.github.io/schema/vega/v6.json\",\n            \"description\": \"Radar chart from Excel selection\",\n            \"width\": 400,\n            \"height\": 400,\n            \"padding\": 60,\n            \"autosize\": {\"type\": \"none\", \"contains\": \"padding\"},\n            \"background\": \"white\",\n            \"config\": { \"view\": { \"stroke\": \"transparent\" }},\n\n            \"signals\": [\n            {\"name\": \"radius\", \"update\": \"width / 2\"}\n            ],\n\n            \"data\": [\n            {\n                \"name\": \"table\",\n                \"values\": radarData\n            },\n            {\n                \"name\": \"dimensions\",\n                \"values\": uniqueDimensions.map(d => ({dimension: d}))\n            }\n            ],\n\n            \"scales\": [\n            {\n                \"name\": \"angular\",\n                \"type\": \"point\",\n                \"range\": {\"signal\": \"[-PI, PI]\"},\n                \"padding\": 0.5,\n                \"domain\": uniqueDimensions\n            },\n            {\n                \"name\": \"radial\",\n                \"type\": \"linear\",\n                \"range\": {\"signal\": \"[0, radius]\"},\n                \"zero\": true,\n                \"nice\": true,\n                \"domain\": {\"data\": \"table\", \"field\": \"value\"},\n                \"domainMin\": 0\n            },\n            {\n                \"name\": \"color\",\n                \"type\": \"ordinal\",\n                \"domain\": {\"data\": \"table\", \"field\": \"category\"},\n                \"range\": [\n                \"#0078d4\", \"#00bcf2\", \"#40e0d0\", \"#00cc6a\", \"#10893e\",\n                \"#107c10\", \"#bad80a\", \"#ffb900\", \"#ff8c00\", \"#d13438\"\n                ]\n            }\n            ],\n\n            \"encode\": {\n            \"enter\": {\n                \"x\": {\"signal\": \"radius\"},\n                \"y\": {\"signal\": \"radius\"}\n            }\n            },\n\n            \"marks\": [\n            {\n                \"type\": \"group\",\n                \"name\": \"categories\",\n                \"zindex\": 1,\n                \"from\": {\n                \"facet\": {\"data\": \"table\", \"name\": \"facet\", \"groupby\": [\"category\", \"series\"]}\n                },\n                \"marks\": [\n                {\n                    \"type\": \"line\",\n                    \"name\": \"category-line\",\n                    \"from\": {\"data\": \"facet\"},\n                    \"encode\": {\n                    \"enter\": {\n                        \"interpolate\": {\"value\": \"linear-closed\"},\n                        \"x\": {\"signal\": \"scale('radial', datum.value) * cos(scale('angular', datum.dimension))\"},\n                        \"y\": {\"signal\": \"scale('radial', datum.value) * sin(scale('angular', datum.dimension))\"},\n                        \"stroke\": {\"scale\": \"color\", \"field\": \"category\"},\n                        \"strokeWidth\": {\"value\": 2},\n                        \"fill\": {\"scale\": \"color\", \"field\": \"category\"},\n                        \"fillOpacity\": {\"value\": 0.1},\n                        \"strokeOpacity\": {\"value\": 0.8}\n                    }\n                    }\n                },\n                {\n                    \"type\": \"symbol\",\n                    \"name\": \"category-points\",\n                    \"from\": {\"data\": \"facet\"},\n                    \"encode\": {\n                    \"enter\": {\n                        \"x\": {\"signal\": \"scale('radial', datum.value) * cos(scale('angular', datum.dimension))\"},\n                        \"y\": {\"signal\": \"scale('radial', datum.value) * sin(scale('angular', datum.dimension))\"},\n                        \"size\": {\"value\": 50},\n                        \"fill\": {\"scale\": \"color\", \"field\": \"category\"},\n                        \"stroke\": {\"value\": \"white\"},\n                        \"strokeWidth\": {\"value\": 1}\n                    }\n                    }\n                }\n                ]\n            },\n            {\n                \"type\": \"rule\",\n                \"name\": \"radial-grid\",\n                \"from\": {\"data\": \"dimensions\"},\n                \"zindex\": 0,\n                \"encode\": {\n                \"enter\": {\n                    \"x\": {\"value\": 0},\n                    \"y\": {\"value\": 0},\n                    \"x2\": {\"signal\": \"radius * cos(scale('angular', datum.dimension))\"},\n                    \"y2\": {\"signal\": \"radius * sin(scale('angular', datum.dimension))\"},\n                    \"stroke\": {\"value\": \"#e1e4e8\"},\n                    \"strokeWidth\": {\"value\": 1}\n                }\n                }\n            },\n            {\n                \"type\": \"text\",\n                \"name\": \"dimension-label\",\n                \"from\": {\"data\": \"dimensions\"},\n                \"zindex\": 1,\n                \"encode\": {\n                \"enter\": {\n                    \"x\": {\"signal\": \"(radius + 20) * cos(scale('angular', datum.dimension))\"},\n                    \"y\": {\"signal\": \"(radius + 20) * sin(scale('angular', datum.dimension))\"},\n                    \"text\": {\"field\": \"dimension\"},\n                    \"align\": [\n                    {\n                        \"test\": \"abs(scale('angular', datum.dimension)) > PI / 2\",\n                        \"value\": \"right\"\n                    },\n                    {\n                        \"value\": \"left\"\n                    }\n                    ],\n                    \"baseline\": [\n                    {\n                        \"test\": \"scale('angular', datum.dimension) > 0\", \n                        \"value\": \"top\"\n                    },\n                    {\n                        \"test\": \"scale('angular', datum.dimension) == 0\", \n                        \"value\": \"middle\"\n                    },\n                    {\n                        \"value\": \"bottom\"\n                    }\n                    ],\n                    \"fill\": {\"value\": \"#323130\"},\n                    \"fontWeight\": {\"value\": \"bold\"},\n                    \"font\": {\"value\": \"Segoe UI\"},\n                    \"fontSize\": {\"value\": 12}\n                }\n                }\n            },\n            {\n                \"type\": \"line\",\n                \"name\": \"outer-line\",\n                \"from\": {\"data\": \"radial-grid\"},\n                \"encode\": {\n                \"enter\": {\n                    \"interpolate\": {\"value\": \"linear-closed\"},\n                    \"x\": {\"field\": \"x2\"},\n                    \"y\": {\"field\": \"y2\"},\n                    \"stroke\": {\"value\": \"#8a8886\"},\n                    \"strokeWidth\": {\"value\": 2},\n                    \"strokeOpacity\": {\"value\": 0.6}\n                }\n                }\n            }\n            ]\n        };\n      }\n\n      else if (chartType === \"waterfall\") {\n        // Process waterfall data inline - set last entry's amount to 0\n        const processedData = [...data];\n        if (processedData.length > 0) {\n            processedData[processedData.length - 1] = {\n            ...processedData[processedData.length - 1],\n            [headers[1]]: 0\n            };\n        }\n\n        // Calculate dynamic dimensions\n        const numDataPoints = data.length;\n        const dynamicWidth = Math.max(400, Math.min(1600, numDataPoints * 50));\n        const maxAmount = Math.max(...data.map(d => Math.abs(d[headers[1]])));\n        const dynamicHeight = Math.max(300, Math.min(600, maxAmount / 100 + 200));\n\n        spec = {\n            $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n            description: \"Waterfall chart with multiple subtotals\",\n            background: \"white\",\n            data: { values: processedData },\n            config: { view: { stroke: \"transparent\" }},\n            width: dynamicWidth,\n            height: dynamicHeight,\n            transform: [\n            { \"window\": [{ \"op\": \"sum\", \"field\": headers[1], \"as\": \"sum\" }] },\n            { \"window\": [{ \"op\": \"lead\", \"field\": headers[0], \"as\": \"lead\" }] },\n            {\n                \"calculate\": `datum.lead === null ? datum.${headers[0]} : datum.lead`,\n                \"as\": \"lead\"\n            },\n            {\n                // If total → reset, else → running sum step\n                \"calculate\": `datum.${headers[2]} == 'total' ? 0 : datum.sum - datum.${headers[1]}`,\n                \"as\": \"previous_sum\"\n            },\n            {\n                \"calculate\": `datum.${headers[2]} == 'total' ? datum.sum : datum.${headers[1]}`,\n                \"as\": \"amount\"\n            },\n            {\n                \"calculate\": `datum.${headers[2]} == 'total' ? datum.${headers[1]} / 2 : (datum.sum + datum.previous_sum) / 2`,\n                \"as\": \"center\"\n            },\n            {\n                \"calculate\": `datum.${headers[2]} == 'total' ? datum.sum : (datum.${headers[1]} > 0 ? '+' : '') + datum.${headers[1]}`,\n                \"as\": \"text_amount\"\n            },\n            { \"calculate\": \"(datum.sum + datum.previous_sum) / 2\", \"as\": \"center\" },\n\n            // Add group index for stacked handling\n            {\n                \"window\": [{ \"op\": \"rank\", \"as\": \"group_index\" }],\n                \"frame\": [null, null],\n                \"groupby\": [headers[0]]\n            },\n\n            // Precompute color shades\n            {\n                \"calculate\": `\n                datum.${headers[2]} == 'total'\n                    ? '#00B0F0'\n                    : datum.amount >= 0\n                    ? (datum.group_index == 1 ? '#70AD47'\n                        : (datum.group_index == 2 ? '#8BC97A'\n                        : (datum.group_index == 3 ? '#A7DA9D'\n                        : '#C3EBC0')))\n                    : (datum.group_index == 1 ? '#E15759'\n                        : (datum.group_index == 2 ? '#EC7A7C'\n                        : (datum.group_index == 3 ? '#F29C9D'\n                        : '#F8BEBF')))\n                `,\n                \"as\": \"bar_color\"\n            }\n            ],\n            encoding: {\n            x: {\n                field: headers[0],\n                type: \"ordinal\",\n                sort: null,\n                axis: { labelAngle: -45, title: null },\n                scale: { paddingInner: 0.05, paddingOuter: 0.025 }\n            }\n            },\n            layer: [\n            {\n                mark: { type: \"bar\", size: 60},\n                encoding: {\n                y: { field: \"previous_sum\", type: \"quantitative\", title: null },\n                y2: { field: \"sum\" },\n                color: { field: \"bar_color\", type: \"nominal\", scale: null }\n                }\n            },\n            {\n                mark: { type: \"text\", fontWeight: \"bold\", baseline: \"middle\" },\n                encoding: {\n                y: { field: \"center\", type: \"quantitative\" },\n                text: { field: \"text_amount\", type: \"nominal\" },\n                color: {\n                    condition: [\n                    { test: `datum.${headers[2]} == 'total'`, value: \"#725a30\" }\n                    ],\n                    value: \"white\"\n                }\n                }\n            }\n            ],\n            config: { text: { fontWeight: \"bold\", color: \"#D9D9D9\" } }\n        };\n      }\n\n      else if (chartType === \"pie\") {\n        spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        description: \"Pie chart from Excel selection\",\n        data: { values: data },\n        mark: { type: \"arc\", outerRadius: 120 },\n        encoding: {\n          theta: { field: headers[1], type: \"quantitative\" },\n          color: { field: headers[0], type: \"nominal\" }\n          }\n        };\n      }\n\n      else if (chartType === \"histogram\") {\n        // Expect a single numeric column\n        const numericData = rows\n          .filter(r => !isNaN(+r[0]))\n          .map(r => ({ value: +r[0] }));\n\n        // Calculate data range for better binning control\n        const values = numericData.map(d => d.value);\n        const minVal = Math.min(...values);\n        const maxVal = Math.max(...values);\n        const range = maxVal - minVal;\n        \n        // Calculate nice bin boundaries\n        const binCount = 20;\n        const binWidth = range / binCount;\n        const niceMin = Math.floor(minVal / binWidth) * binWidth;\n        const niceMax = Math.ceil(maxVal / binWidth) * binWidth;\n\n        spec = {\n          \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",\n          \"description\": \"Histogram from Excel selection\",\n          \"background\": \"white\",\n          \"config\": { \"view\": { \"stroke\": \"transparent\" }},\n          \"data\": { \"values\": numericData },\n          \"mark\": {\n            \"type\": \"bar\",\n            \"tooltip\": true,\n            \"stroke\": \"white\",\n            \"strokeWidth\": 1\n          },\n          \"encoding\": {\n            \"x\": {\n              \"field\": \"value\",\n              \"bin\": { \n                \"extent\": [niceMin, niceMax],\n                \"step\": binWidth,\n                \"nice\": false  // Prevent Vega from adjusting our nice boundaries\n              },\n              \"type\": \"quantitative\",\n              \"axis\": { \n                \"title\": \"Value\",\n                \"labelFontSize\": 12,\n                \"titleFontSize\": 14,\n                \"labelColor\": \"#605e5c\",\n                \"titleColor\": \"#323130\"\n              },\n              \"scale\": {\n                \"domain\": [niceMin, niceMax],\n                \"paddingInner\": 0.1,\n                \"paddingOuter\": 0.05\n              }\n            },\n            \"y\": {\n              \"aggregate\": \"count\",\n              \"type\": \"quantitative\",\n              \"axis\": { \n                \"title\": \"Count\",\n                \"labelFontSize\": 12,\n                \"titleFontSize\": 14,\n                \"labelColor\": \"#605e5c\",\n                \"titleColor\": \"#323130\",\n                \"gridColor\": \"#f3f2f1\"\n              }\n            },\n            \"color\": {\n              \"value\": \"#0078d4\"\n            }\n          },\n          \"config\": {\n            \"font\": \"Segoe UI\",\n            \"axis\": {\n              \"labelColor\": \"#605e5c\",\n              \"titleColor\": \"#323130\",\n              \"gridColor\": \"#f3f2f1\"\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"mekko\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega/v5.json\",\n          description: \"Marimekko chart from Excel selection\",\n          width: 800,\n          height: 500,\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          view: { stroke: null },\n          padding: { top: 60, bottom: 80, left: 60, right: 60 },\n          data: [\n            {\n              name: \"table\",\n              values: data\n            },\n            {\n              name: \"categories\",\n              source: \"table\",\n              transform: [\n                {\n                  type: \"aggregate\",\n                  fields: [headers[2]],\n                  ops: [\"sum\"],\n                  as: [\"categoryTotal\"],\n                  groupby: [headers[0]]\n                },\n                {\n                  type: \"stack\",\n                  offset: \"normalize\",\n                  sort: { field: \"categoryTotal\", order: \"descending\" },\n                  field: \"categoryTotal\",\n                  as: [\"x0\", \"x1\"]\n                },\n                {\n                  type: \"formula\",\n                  as: \"Percent\",\n                  expr: \"datum.x1-datum.x0\"\n                },\n                {\n                  type: \"formula\",\n                  as: \"Label\",\n                  expr: `datum.${headers[0]} + ' (' + format(datum.Percent,'.1%') + ')'`\n                }\n              ]\n            },\n            {\n              name: \"finalTable\",\n              source: \"table\",\n              transform: [\n                {\n                  type: \"stack\",\n                  offset: \"normalize\",\n                  groupby: [headers[0]],\n                  sort: { field: headers[2], order: \"descending\" },\n                  field: headers[2],\n                  as: [\"y0\", \"y1\"]\n                },\n                {\n                  type: \"stack\",\n                  groupby: [headers[0]],\n                  sort: { field: headers[2], order: \"descending\" },\n                  field: headers[2],\n                  as: [\"z0\", \"z1\"]\n                },\n                {\n                  type: \"lookup\",\n                  from: \"categories\",\n                  key: headers[0],\n                  values: [\"x0\", \"x1\"],\n                  fields: [headers[0]]\n                },\n                {\n                  type: \"formula\",\n                  as: \"Percent\",\n                  expr: \"datum.y1-datum.y0\"\n                },\n                {\n                  type: \"formula\",\n                  as: \"Label\",\n                  expr: `[datum.${headers[1]}, format(datum.${headers[2]}, '.0f') + ' (' + format(datum.Percent, '.1%') + ')']`\n                },\n                {\n                  type: \"window\",\n                  sort: { field: \"y0\", order: \"ascending\" },\n                  ops: [\"row_number\"],\n                  fields: [null],\n                  as: [\"rank\"],\n                  groupby: [headers[0]]\n                }\n              ]\n            }\n          ],\n          scales: [\n            {\n              name: \"x\",\n              type: \"linear\",\n              range: \"width\",\n              domain: { data: \"finalTable\", field: \"x1\" }\n            },\n            {\n              name: \"y\",\n              type: \"linear\",\n              range: \"height\",\n              nice: false,\n              zero: true,\n              domain: { data: \"finalTable\", field: \"z1\" }\n            },\n            {\n              name: \"opacity\",\n              type: \"linear\",\n              range: [1, 0.6],\n              domain: { data: \"finalTable\", field: \"rank\" }\n            },\n            {\n              name: \"color\",\n              type: \"ordinal\",\n              range: { scheme: \"category20\" },\n              domain: {\n                data: \"categories\",\n                field: headers[0],\n                sort: { field: \"x0\", order: \"ascending\", op: \"sum\" }\n              }\n            }\n          ],\n          axes: [\n            {\n              orient: \"left\",\n              scale: \"y\",\n              zindex: 1,\n              format: \"\",\n              tickCount: 5,\n              tickSize: 15,\n              labelColor: { value: \"#333740\" },\n              labelFontWeight: { value: \"normal\" },\n              labelFontSize: { value: 12 },\n              labelFont: { value: \"Segoe UI\" },\n              offset: 5,\n              domain: false,\n              encode: {\n                labels: {\n                  update: {\n                    text: { signal: `format(datum.value, '.0f')` }\n                  }\n                }\n              }\n            }\n          ],\n          marks: [\n            {\n              type: \"rect\",\n              name: \"bars\",\n              from: { data: \"finalTable\" },\n              encode: {\n                update: {\n                  x: { scale: \"x\", field: \"x0\" },\n                  x2: { scale: \"x\", field: \"x1\" },\n                  y: { scale: \"y\", field: \"z0\" },\n                  y2: { scale: \"y\", field: \"z1\" },\n                  fill: { scale: \"color\", field: headers[0] },\n                  stroke: { value: \"white\" },\n                  strokeWidth: { value: 1 },\n                  fillOpacity: { scale: \"opacity\", field: \"rank\" },\n                  tooltip: { signal: \"datum\" }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              name: \"labels\",\n              interactive: false,\n              from: { data: \"bars\" },\n              encode: {\n                update: {\n                  x: { signal: \"(datum.x2 - datum.x)*0.5 + datum.x\" },\n                  align: { value: \"center\" },\n                  text: { field: \"datum.Label\" },\n                  y: { signal: \"(datum.y2 - datum.y)*0.5 + datum.y\" },\n                  fill: { value: \"white\" },\n                  font: { value: \"Segoe UI\" },\n                  lineHeight: { value: 12 },\n                  fontSize: { value: 10 },\n                  opacity: { signal: \"(datum.x2 - datum.x) > 0.05 && (datum.y2 - datum.y) > 20 ? 1 : 0\" }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              name: \"categoryLabels\",\n              from: { data: \"categories\" },\n              encode: {\n                update: {\n                  x: { scale: \"x\", signal: \"(datum.x1-datum.x0)/2 + datum.x0\" },\n                  y: { signal: \"-15\" },\n                  text: { field: headers[0] },\n                  align: { value: \"center\" },\n                  baseline: { value: \"bottom\" },\n                  fill: { value: \"#333740\" },\n                  fontWeight: { value: \"bold\" },\n                  fontSize: { value: 12 },\n                  font: { value: \"Segoe UI\" }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              name: \"categoryPercentages\",\n              from: { data: \"categories\" },\n              encode: {\n                update: {\n                  x: { scale: \"x\", signal: \"(datum.x1-datum.x0)/2 + datum.x0\" },\n                  y: { signal: \"height + 30\" },\n                  text: { field: \"Label\" },\n                  align: { value: \"center\" },\n                  baseline: { value: \"top\" },\n                  fill: { value: \"#666666\" },\n                  fontWeight: { value: \"normal\" },\n                  fontSize: { value: 10 },\n                  font: { value: \"Segoe UI\" }\n                }\n              }\n            }\n          ]\n        };\n      }\n\n      if (chartType === \"marimekko\") {\n      if (headers.length < 3) {\n        console.warn(\"Marimekko chart requires at least 3 columns: Category, Subcategory, Value\");\n        return;\n      }\n\n      spec = {\n        \"$schema\": \"https://vega.github.io/schema/vega/v5.json\",\n        \"description\": \"Marimekko Chart from Excel selection\",\n        \"width\": 600,\n        \"height\": 400,\n        \"background\": \"white\",\n        \"config\": { \"view\": { \"stroke\": \"transparent\" }},\n        \"padding\": { \"top\": 30, \"bottom\": 60, \"left\": 60, \"right\": 60 },\n        \"data\": [\n          {\n            \"name\": \"table\",\n            \"values\": data,\n            \"transform\": [\n              {\n                \"type\": \"formula\",\n                \"as\": \"Category\",\n                \"expr\": `datum['${headers[0]}']`\n              },\n              {\n                \"type\": \"formula\", \n                \"as\": \"Subcategory\",\n                \"expr\": `datum['${headers[1]}']`\n              },\n              {\n                \"type\": \"formula\",\n                \"as\": \"Value\", \n                \"expr\": `datum['${headers[2]}']`\n              }\n            ]\n          },\n          {\n            \"name\": \"categories\",\n            \"source\": \"table\",\n            \"transform\": [\n              {\n                \"type\": \"aggregate\",\n                \"fields\": [\"Value\"],\n                \"ops\": [\"sum\"],\n                \"as\": [\"categoryTotal\"],\n                \"groupby\": [\"Category\"]\n              },\n              {\n                \"type\": \"stack\",\n                \"offset\": \"normalize\",\n                \"sort\": { \"field\": \"categoryTotal\", \"order\": \"descending\" },\n                \"field\": \"categoryTotal\",\n                \"as\": [\"x0\", \"x1\"]\n              },\n              {\n                \"type\": \"formula\",\n                \"as\": \"Percent\",\n                \"expr\": \"datum.x1 - datum.x0\"\n              }\n            ]\n          },\n          {\n            \"name\": \"finalTable\",\n            \"source\": \"table\",\n            \"transform\": [\n              {\n                \"type\": \"stack\",\n                \"offset\": \"normalize\",\n                \"groupby\": [\"Category\"],\n                \"sort\": { \"field\": \"Value\", \"order\": \"descending\" },\n                \"field\": \"Value\",\n                \"as\": [\"y0\", \"y1\"]\n              },\n              {\n                \"type\": \"lookup\",\n                \"from\": \"categories\",\n                \"key\": \"Category\",\n                \"values\": [\"x0\", \"x1\"],\n                \"fields\": [\"Category\"]\n              },\n              {\n                \"type\": \"formula\",\n                \"as\": \"Percent\",\n                \"expr\": \"datum.y1 - datum.y0\"\n              }\n            ]\n          }\n        ],\n        \"scales\": [\n          {\n            \"name\": \"x\",\n            \"type\": \"linear\",\n            \"range\": \"width\",\n            \"domain\": { \"data\": \"finalTable\", \"field\": \"x1\" }\n          },\n          {\n            \"name\": \"y\",\n            \"type\": \"linear\",\n            \"range\": \"height\",\n            \"nice\": false,\n            \"zero\": true,\n            \"domain\": { \"data\": \"finalTable\", \"field\": \"y1\" }\n          },\n          {\n            \"name\": \"color\",\n            \"type\": \"ordinal\",\n            \"range\": { \"scheme\": \"category20\" },\n            \"domain\": {\n              \"data\": \"categories\",\n              \"field\": \"Category\",\n              \"sort\": { \"field\": \"x0\", \"order\": \"ascending\", \"op\": \"sum\" }\n            }\n          }\n        ],\n        \"axes\": [\n          {\n            \"orient\": \"left\",\n            \"scale\": \"y\",\n            \"format\": \"%\",\n            \"tickCount\": 5,\n            \"labelColor\": \"#333333\",\n            \"labelFontSize\": 11,\n            \"domain\": false\n          },\n          {\n            \"orient\": \"bottom\",\n            \"scale\": \"x\",\n            \"format\": \"%\",\n            \"tickCount\": 5,\n            \"labelColor\": \"#333333\", \n            \"labelFontSize\": 11,\n            \"domain\": false\n          }\n        ],\n        \"marks\": [\n          {\n            \"type\": \"rect\",\n            \"name\": \"bars\",\n            \"from\": { \"data\": \"finalTable\" },\n            \"encode\": {\n              \"update\": {\n                \"x\": { \"scale\": \"x\", \"field\": \"x0\" },\n                \"x2\": { \"scale\": \"x\", \"field\": \"x1\" },\n                \"y\": { \"scale\": \"y\", \"field\": \"y0\" },\n                \"y2\": { \"scale\": \"y\", \"field\": \"y1\" },\n                \"fill\": { \"scale\": \"color\", \"field\": \"Category\" },\n                \"stroke\": { \"value\": \"white\" },\n                \"strokeWidth\": { \"value\": 1 },\n                \"opacity\": { \"value\": 0.8 },\n                \"tooltip\": { \n                  \"signal\": \"{'Category': datum.Category, 'Subcategory': datum.Subcategory, 'Value': datum.Value, 'Percentage': format(datum.Percent, '.1%')}\" \n                }\n              },\n              \"hover\": {\n                \"opacity\": { \"value\": 1.0 }\n              }\n            }\n          },\n          {\n            \"type\": \"text\",\n            \"name\": \"valueLabels\",\n            \"from\": { \"data\": \"finalTable\" },\n            \"encode\": {\n              \"update\": {\n                \"x\": { \"scale\": \"x\", \"signal\": \"(datum.x1 - datum.x0)/2 + datum.x0\" },\n                \"y\": { \"scale\": \"y\", \"signal\": \"(datum.y1 - datum.y0)/2 + datum.y0\" },\n                \"text\": { \n                  \"signal\": \"datum.Percent > 0.027 ? [datum.Subcategory, format(datum.Value, ',.0f') + ' (' + format(datum.Percent, '.0%') + ')'] : []\" \n                },\n                \"align\": { \"value\": \"center\" },\n                \"baseline\": { \"value\": \"middle\" },\n                \"fill\": { \"value\": \"white\" },\n                \"fontSize\": { \"value\": 10 },\n                \"fontWeight\": { \"value\": \"normal\" },\n                \"font\": { \"value\": \"Segoe UI\" },\n                \"lineHeight\": { \"value\": 12 },\n                \"opacity\": { \"signal\": \"datum.Percent > 0.027 ? 1 : 0\" }\n              }\n            }\n          }\n        ]\n      };\n      }\n\n      else if (chartType === \"arc\") {\n        // Transform Excel data for arc chart\n        const edges = data.map((row, index) => ({\n          source: row[headers[0]],\n          target: row[headers[1]],\n          value: headers.length >= 3 && row[headers[2]] ? row[headers[2]] : 1,\n          group: headers.length >= 4 && row[headers[3]] ? row[headers[3]] : \"default\"\n        }));\n\n        // Get unique nodes from edges\n        const nodeMap = new Map();\n        edges.forEach(edge => {\n          if (!nodeMap.has(edge.source)) {\n            nodeMap.set(edge.source, { \n              name: edge.source, \n              group: edge.group,\n              index: nodeMap.size\n            });\n          }\n          if (!nodeMap.has(edge.target)) {\n            nodeMap.set(edge.target, { \n              name: edge.target, \n              group: edge.group,\n              index: nodeMap.size\n            });\n          }\n        });\n\n        const nodes = Array.from(nodeMap.values());\n\n        // Transform edges to use node indices\n        const edgesWithIndices = edges.map(edge => ({\n          source: nodeMap.get(edge.source).index,\n          target: nodeMap.get(edge.target).index,\n          value: edge.value\n        }));\n\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega/v5.json\",\n          description: \"Arc diagram from Excel selection\",\n          width: Math.max(600, nodes.length * 40),\n          height: 300,\n          padding: { top: 20, bottom: 80, left: 20, right: 20 },\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: [\n            {\n              name: \"edges\",\n              values: edgesWithIndices\n            },\n            {\n              name: \"sourceDegree\",\n              source: \"edges\",\n              transform: [\n                { type: \"aggregate\", groupby: [\"source\"], as: [\"count\"] }\n              ]\n            },\n            {\n              name: \"targetDegree\", \n              source: \"edges\",\n              transform: [\n                { type: \"aggregate\", groupby: [\"target\"], as: [\"count\"] }\n              ]\n            },\n            {\n              name: \"nodes\",\n              values: nodes,\n              transform: [\n                { type: \"window\", ops: [\"rank\"], as: [\"order\"] },\n                {\n                  type: \"lookup\", from: \"sourceDegree\", key: \"source\",\n                  fields: [\"index\"], as: [\"sourceDegree\"],\n                  default: { count: 0 }\n                },\n                {\n                  type: \"lookup\", from: \"targetDegree\", key: \"target\", \n                  fields: [\"index\"], as: [\"targetDegree\"],\n                  default: { count: 0 }\n                },\n                {\n                  type: \"formula\", as: \"degree\",\n                  expr: \"(datum.sourceDegree.count || 0) + (datum.targetDegree.count || 0)\"\n                }\n              ]\n            }\n          ],\n\n          scales: [\n            {\n              name: \"position\",\n              type: \"band\",\n              domain: { data: \"nodes\", field: \"order\", sort: true },\n              range: \"width\"\n            },\n            {\n              name: \"color\",\n              type: \"ordinal\",\n              range: { scheme: \"category20\" },\n              domain: { data: \"nodes\", field: \"group\" }\n            }\n          ],\n\n          marks: [\n            {\n              type: \"symbol\",\n              name: \"layout\",\n              interactive: false,\n              from: { data: \"nodes\" },\n              encode: {\n                enter: { opacity: { value: 0 } },\n                update: {\n                  x: { scale: \"position\", field: \"order\" },\n                  y: { value: 0 },\n                  size: { field: \"degree\", mult: 8, offset: 50 },\n                  fill: { scale: \"color\", field: \"group\" }\n                }\n              }\n            },\n            {\n              type: \"path\",\n              from: { data: \"edges\" },\n              encode: {\n                update: {\n                  stroke: { value: \"#0078d4\" },\n                  strokeOpacity: { value: 0.4 },\n                  strokeWidth: { field: \"value\", mult: 2, offset: 1 }\n                }\n              },\n              transform: [\n                {\n                  type: \"lookup\", from: \"layout\", key: \"datum.index\",\n                  fields: [\"datum.source\", \"datum.target\"],\n                  as: [\"sourceNode\", \"targetNode\"]\n                },\n                {\n                  type: \"linkpath\",\n                  sourceX: { expr: \"min(datum.sourceNode.x, datum.targetNode.x)\" },\n                  targetX: { expr: \"max(datum.sourceNode.x, datum.targetNode.x)\" },\n                  sourceY: { expr: \"0\" },\n                  targetY: { expr: \"0\" },\n                  shape: \"arc\"\n                }\n              ]\n            },\n            {\n              type: \"symbol\",\n              from: { data: \"layout\" },\n              encode: {\n                update: {\n                  x: { field: \"x\" },\n                  y: { field: \"y\" },\n                  fill: { field: \"fill\" },\n                  size: { field: \"size\" },\n                  stroke: { value: \"white\" },\n                  strokeWidth: { value: 1 },\n                  tooltip: { \n                    signal: \"{'Node': datum.datum.name, 'Group': datum.datum.group, 'Connections': datum.datum.degree}\" \n                  }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              from: { data: \"nodes\" },\n              encode: {\n                update: {\n                  x: { scale: \"position\", field: \"order\" },\n                  y: { value: 25 },\n                  fontSize: { value: 10 },\n                  align: { value: \"center\" },\n                  baseline: { value: \"top\" },\n                  angle: { value: -45 },\n                  text: { field: \"name\" },\n                  fill: { value: \"#323130\" },\n                  font: { value: \"Segoe UI\" }\n                }\n              }\n            }\n          ],\n          \n          config: {\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            text: { font: \"Segoe UI\", fontSize: 10, fill: \"#605e5c\" }\n          }\n        };\n      }\n\n      else if (chartType === \"lollipop\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n          description: \"Lollipop chart from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          encoding: {\n            y: {\n              field: headers[0],\n              type: \"nominal\",\n              sort: \"-x\",\n              axis: {\n                domain: false,\n                title: null,\n                ticks: false,\n                labelFont: \"Segoe UI\",\n                labelFontSize: 14,\n                labelPadding: 10,\n                labelColor: \"#605e5c\"\n              }\n            },\n            x: {\n              field: headers[1],\n              type: \"quantitative\",\n              axis: {\n                domain: false,\n                ticks: false,\n                grid: true,\n                gridColor: \"#e0e0e0\",\n                labelFont: \"Segoe UI\",\n                labelFontSize: 12,\n                labelColor: \"#605e5c\",\n                title: headers[1],\n                titleFont: \"Segoe UI\",\n                titleFontSize: 14,\n                titleColor: \"#323130\"\n              }\n            },\n            color: { value: \"#0078d4\" }\n          },\n          layer: [\n            {\n              mark: {\n                type: \"rule\",\n                tooltip: true,\n                strokeWidth: 3,\n                opacity: 0.7\n              }\n            },\n            {\n              mark: {\n                type: \"circle\",\n                tooltip: true,\n                size: 300,\n                opacity: 0.9\n              },\n              encoding: {\n                size: {\n                  field: headers[1],\n                  type: \"quantitative\",\n                  scale: {\n                    range: [200, 800]\n                  },\n                  legend: null\n                }\n              }\n            }\n          ],\n          config: {\n            autosize: {\n              type: \"fit\",\n              contains: \"padding\"\n            },\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            text: { font: \"Segoe UI\", fontSize: 12, fill: \"#605E5C\" }\n          }\n        };\n      }\n\n      else if (chartType === \"strip\") {\n        // Strip plot implementation\n        spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Strip plot showing distribution using tick marks\",\n        background: \"white\",\n        config: { \n            view: { stroke: \"transparent\" },\n            axis: {\n            labelFontSize: 11,\n            titleFontSize: 12,\n            labelColor: \"#605E5C\",\n            titleColor: \"#323130\"\n            }\n        },\n        data: { values: data },\n        mark: {\n            type: \"tick\",\n            thickness: 2,\n            size: 15,\n            color: \"#0078d4\",\n            opacity: 0.8,\n            tooltip: true\n        },\n        encoding: {\n            y: { \n            field: headers[0],\n            type: \"ordinal\",\n            axis: {\n                title: headers[0],\n                labelAngle: 0\n            }\n            },\n            x: { \n            field: headers[1],\n            type: \"quantitative\",\n            axis: {\n                title: headers[1],\n                grid: true,\n                gridColor: \"#f3f2f1\",\n                gridOpacity: 0.5\n            }\n            },\n            // Add color encoding if 3rd column exists\n            ...(headers.length > 2 && {\n            color: {\n                field: headers[2],\n                type: \"nominal\",\n                scale: { scheme: \"category10\" },\n                legend: {\n                title: headers[2],\n                orient: \"right\",\n                titleFontSize: 11,\n                labelFontSize: 10\n                }\n            }\n            }),\n            tooltip: headers.map(h => ({ field: h, type: \"nominal\" }))\n        }\n        };\n      }\n\n      else if (chartType === \"treemap\") {\n        let treeData;\n        \n        if (headers.length >= 3) {\n          // Hierarchical data with parent column\n          treeData = data.map((d, i) => ({\n            id: `${d[headers[1]]}_${i}`,\n            name: d[headers[1]],\n            parent: d[headers[0]] || \"root\",\n            size: parseFloat(d[headers[2]]) || 0\n          }));\n          \n          // Add root and parent nodes\n          const parents = [...new Set(treeData.map(d => d.parent))];\n          parents.forEach(parent => {\n            if (parent !== \"root\" && !treeData.find(d => d.id === parent)) {\n              treeData.push({\n                id: parent,\n                name: parent,\n                parent: \"root\",\n                size: 0\n              });\n            }\n          });\n          \n          // Add root node\n          treeData.push({\n            id: \"root\",\n            name: \"Root\",\n            parent: \"\",\n            size: 0\n          });\n        } else {\n          // Simple flat data - create single level hierarchy\n          treeData = [\n            {\n              id: \"root\",\n              name: \"Root\", \n              parent: \"\",\n              size: 0\n            },\n            ...data.map((d, i) => ({\n              id: `item_${i}`,\n              name: d[headers[1]],\n              parent: \"root\",\n              size: parseFloat(d[headers[2]]) || 0\n            }))\n          ];\n        }\n\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega/v5.json\",\n          description: \"Treemap visualization from Excel data\",\n          background: \"white\",\n          width: 600,\n          height: 400,\n          padding: 5,\n          autosize: \"fit\",\n          \n          data: [\n            {\n              name: \"tree\",\n              values: treeData,\n              transform: [\n                {\n                  type: \"stratify\",\n                  key: \"id\",\n                  parentKey: \"parent\"\n                },\n                {\n                  type: \"treemap\",\n                  field: \"size\",\n                  sort: { field: \"value\" },\n                  round: true,\n                  method: \"squarify\",\n                  ratio: 1.6,\n                  size: [{ signal: \"width\" }, { signal: \"height\" }]\n                }\n              ]\n            },\n            {\n              name: \"nodes\",\n              source: \"tree\",\n              transform: [\n                { type: \"filter\", expr: \"datum.children\" }\n              ]\n            },\n            {\n              name: \"leaves\", \n              source: \"tree\",\n              transform: [\n                { type: \"filter\", expr: \"!datum.children\" }\n              ]\n            }\n          ],\n          \n          scales: [\n            {\n              name: \"color\",\n              type: \"ordinal\",\n              domain: { data: \"nodes\", field: \"name\" },\n              range: [\n                \"#0078d4\", \"#00bcf2\", \"#40e0d0\", \"#00cc6a\", \"#10893e\",\n                \"#107c10\", \"#bad80a\", \"#ffb900\", \"#ff8c00\", \"#d13438\"\n              ]\n            },\n            {\n              name: \"fontSize\",\n              type: \"ordinal\", \n              domain: [0, 1, 2, 3],\n              range: [20, 16, 12, 10]\n            },\n            {\n              name: \"opacity\",\n              type: \"ordinal\",\n              domain: [0, 1, 2, 3], \n              range: [0.3, 0.6, 0.8, 1.0]\n            }\n          ],\n          \n          marks: [\n            {\n              type: \"rect\",\n              from: { data: \"nodes\" },\n              interactive: false,\n              encode: {\n                enter: {\n                  fill: { scale: \"color\", field: \"name\" },\n                  fillOpacity: { scale: \"opacity\", field: \"depth\" }\n                },\n                update: {\n                  x: { field: \"x0\" },\n                  y: { field: \"y0\" },\n                  x2: { field: \"x1\" },\n                  y2: { field: \"y1\" },\n                  stroke: { value: \"#ffffff\" },\n                  strokeWidth: { value: 1 }\n                }\n              }\n            },\n            {\n              type: \"rect\",\n              from: { data: \"leaves\" },\n              encode: {\n                enter: {\n                  stroke: { value: \"#ffffff\" },\n                  strokeWidth: { value: 2 }\n                },\n                update: {\n                  x: { field: \"x0\" },\n                  y: { field: \"y0\" },\n                  x2: { field: \"x1\" },\n                  y2: { field: \"y1\" },\n                  fill: { value: \"transparent\" },\n                  tooltip: {\n                    signal: `{'Category': datum.name, 'Value': datum.size, 'Parent': datum.parent}`\n                  }\n                },\n                hover: {\n                  fill: { value: \"#323130\" },\n                  fillOpacity: { value: 0.1 }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              from: { data: \"leaves\" },\n              interactive: false,\n              encode: {\n                enter: {\n                  font: { value: \"Segoe UI, Arial, sans-serif\" },\n                  align: { value: \"center\" },\n                  baseline: { value: \"middle\" },\n                  fill: { value: \"#323130\" },\n                  fontWeight: { value: \"bold\" },\n                  text: { field: \"name\" },\n                  fontSize: { scale: \"fontSize\", field: \"depth\" }\n                },\n                update: {\n                  x: { signal: \"0.5 * (datum.x0 + datum.x1)\" },\n                  y: { signal: \"0.5 * (datum.y0 + datum.y1)\" },\n                  opacity: {\n                    signal: \"(datum.x1 - datum.x0) > 50 && (datum.y1 - datum.y0) > 20 ? 1 : 0\"\n                  }\n                }\n              }\n            }\n          ]\n        };\n      }\n      \n      else if (chartType === \"waffle\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n          description: \"Waffle chart from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          transform: [\n            {\n              joinaggregate: [{\"op\": \"sum\", \"field\": headers[1], \"as\": \"TotalValue\"}]\n            },\n            {\n              calculate: `round(datum.${headers[1]}/datum.TotalValue * 100)`,\n              as: \"PercentOfTotal\"\n            },\n            {\n              aggregate: [{\"op\": \"min\", \"field\": \"PercentOfTotal\", \"as\": \"Percent\"}],\n              groupby: [headers[0]]\n            },\n            {\"calculate\": \"sequence(1,101)\", \"as\": \"Sequence\"},\n            {\"flatten\": [\"Sequence\"]},\n            {\n              calculate: `if(datum.Sequence <= datum.Percent, datum.${headers[0]},'_blank')`,\n              as: \"Plot\"\n            },\n            {\"calculate\": \"ceil (datum.Sequence / 10)\", \"as\": \"row\"},\n            {\"calculate\": \"datum.Sequence - datum.row * 10\", \"as\": \"col\"}\n          ],\n          facet: {\"column\": {\"field\": headers[0], \"header\": {\"labelOrient\": \"bottom\"}}},\n          spec: {\n            layer: [\n              {\n                mark: {\n                  type: \"circle\",\n                  filled: true,\n                  tooltip: true,\n                  stroke: \"#9e9b9b\",\n                  strokeWidth: 0.7\n                },\n                encoding: {\n                  x: {\"field\": \"col\", \"type\": \"ordinal\", \"axis\": null},\n                  y: {\"field\": \"row\", \"type\": \"ordinal\", \"axis\": null, \"sort\": \"-y\"},\n                  color: {\n                    condition: {\"test\": \"datum.Plot == '_blank'\", \"value\": \"#e6e3e3\"},\n                    scale: {\"scheme\": \"set1\"},\n                    field: \"Plot\",\n                    type: \"nominal\",\n                    legend: null\n                  },\n                  size: {\"value\": 241},\n                  tooltip: [{\"field\": headers[0], \"type\": \"nominal\"}]\n                }\n              },\n              {\n                mark: {\"type\": \"text\", \"fontSize\": 30, \"fontWeight\": \"bold\"},\n                encoding: {\n                  y: {\"value\": 30},\n                  text: {\n                    condition: {\n                      test: \"datum.Sequence == 1\",\n                      value: {\"expr\": \"datum.Percent + '%'\"}\n                    }\n                  },\n                  color: {\"scale\": {\"scheme\": \"set1\"}, \"field\": \"Plot\"}\n                }\n              }\n            ]\n          },\n          config: {\n            view: {\"stroke\": \"transparent\"},\n            font: \"Segoe UI\",\n            text: {\"font\": \"Segoe UI\", \"fontSize\": 12, \"fill\": \"#605E5C\"},\n            axis: {\n              ticks: false,\n              grid: false,\n              domain: false,\n              labelColor: \"#605E5C\",\n              labelFontSize: 12\n            },\n            header: {\n              titleFont: \"Segoe UI\",\n              titleFontSize: 16,\n              titleColor: \"#757575\",\n              labelFont: \"Segoe UI\",\n              labelFontSize: 13,\n              labelColor: \"#605E5C\"\n            },\n            legend: {\n              titleFont: \"Segoe UI\",\n              titleFontWeight: \"bold\",\n              titleColor: \"#605E5C\",\n              labelFont: \"Segoe UI\",\n              labelFontSize: 13,\n              labelColor: \"#605E5C\",\n              symbolType: \"circle\",\n              symbolSize: 75\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"violin\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v5.20.1.json\",\n          description: \"Violin chart from Excel selection\",\n          background: \"white\",\n          config: {\n            view: { continuousWidth: 300, continuousHeight: 300, stroke: null },\n            facet: { spacing: 0 }\n          },\n          data: { values: data },\n          mark: { type: \"area\", orient: \"horizontal\" },\n          encoding: {\n            color: { field: headers[0], type: \"nominal\" },\n            column: {\n              field: headers[0],\n              header: {\n                labelOrient: \"bottom\",\n                labelPadding: 0,\n                titleOrient: \"bottom\"\n              },\n              type: \"nominal\"\n            },\n            x: {\n              axis: { grid: false, labels: false, ticks: true, values: [0] },\n              field: \"density\",\n              impute: null,\n              stack: \"center\",\n              title: null,\n              type: \"quantitative\"\n            },\n            y: { field: headers[1], type: \"quantitative\" }\n          },\n          transform: [\n            {\n              density: headers[1],\n              groupby: [headers[0]],\n              as: [headers[1], \"density\"]\n            }\n          ],\n          width: 100\n        };\n      }\n\n      else if (chartType === \"heatmap\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n          description: \"Heatmap with marginal bars from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          spacing: 15,\n          bounds: \"flush\",\n          vconcat: [\n            {\n              height: 60,\n              mark: {\n                type: \"bar\",\n                stroke: null,\n                cornerRadiusEnd: 2,\n                tooltip: true,\n                color: \"lightgrey\"\n              },\n              encoding: {\n                x: {\n                  field: headers[1],\n                  type: \"ordinal\",\n                  axis: null\n                },\n                y: {\n                  field: headers[2],\n                  aggregate: \"mean\",\n                  type: \"quantitative\",\n                  axis: null\n                }\n              }\n            },\n            {\n              spacing: 15,\n              bounds: \"flush\",\n              hconcat: [\n                {\n                  mark: {\n                    type: \"rect\",\n                    stroke: \"white\",\n                    tooltip: true\n                  },\n                  encoding: {\n                    y: {\n                      field: headers[0],\n                      type: \"ordinal\",\n                      title: headers[0],\n                      axis: {\n                        domain: false,\n                        ticks: false,\n                        labels: true,\n                        labelAngle: 0,\n                        labelPadding: 5\n                      }\n                    },\n                    x: {\n                      field: headers[1],\n                      type: \"ordinal\",\n                      title: headers[1],\n                      axis: {\n                        domain: false,\n                        ticks: false,\n                        labels: true,\n                        labelAngle: 0\n                      }\n                    },\n                    color: {\n                      aggregate: \"mean\",\n                      field: headers[2],\n                      type: \"quantitative\",\n                      title: headers[2],\n                      scale: {\n                        scheme: \"blues\"\n                      },\n                      legend: {\n                        direction: \"vertical\",\n                        gradientLength: 120\n                      }\n                    }\n                  }\n                },\n                {\n                  mark: {\n                    type: \"bar\",\n                    stroke: null,\n                    cornerRadiusEnd: 2,\n                    tooltip: true,\n                    color: \"lightgrey\"\n                  },\n                  width: 60,\n                  encoding: {\n                    y: {\n                      field: headers[0],\n                      type: \"ordinal\",\n                      axis: null\n                    },\n                    x: {\n                      field: headers[2],\n                      type: \"quantitative\",\n                      aggregate: \"mean\",\n                      axis: null\n                    }\n                  }\n                }\n              ]\n            }\n          ],\n          config: {\n            autosize: {\n              type: \"fit\",\n              contains: \"padding\"\n            },\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            text: { font: \"Segoe UI\", fontSize: 12, fill: \"#605E5C\" },\n            axis: {\n              ticks: false,\n              grid: false,\n              domain: false,\n              labelColor: \"#605E5C\",\n              labelFontSize: 12,\n              titleFontSize: 14,\n              titleColor: \"#323130\"\n            },\n            legend: {\n              titleFont: \"Segoe UI\",\n              titleFontWeight: \"bold\",\n              titleColor: \"#605E5C\",\n              labelFont: \"Segoe UI\",\n              labelFontSize: 12,\n              labelColor: \"#605E5C\"\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"deviation\") {\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Deviation chart from Excel selection\",\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        data: { values: data },\n        layer: [\n        {\n            mark: { type: \"line\", tooltip: true, color: \"grey\" },\n            encoding: {\n            x: { field: headers[0], type: \"ordinal\" },\n            y: { field: headers[1], type: \"quantitative\" }\n            }\n        },\n        {\n            mark: { type: \"circle\", size: 80, color: \"grey\", tooltip: true },\n            encoding: {\n            x: { field: headers[0], type: \"ordinal\" },\n            y: { field: headers[1], type: \"quantitative\" }\n            }\n        },\n        {\n            mark: { type: \"rule\", strokeWidth: 2, tooltip: true },\n            encoding: {\n            x: { field: headers[0], type: \"ordinal\" },\n            y: { field: headers[1], type: \"quantitative\" },\n            y2: { field: headers[2] },\n            color: {\n                condition: { test: `datum[\"${headers[1]}\"] < datum[\"${headers[2]}\"]`, value: \"red\" },\n                value: \"green\"\n            }\n            }\n        },\n        {\n            mark: { type: \"circle\", size: 60, tooltip: true },\n            encoding: {\n            x: { field: headers[0], type: \"ordinal\" },\n            y: { field: headers[2], type: \"quantitative\" },\n            color: {\n                condition: { test: `datum[\"${headers[1]}\"] < datum[\"${headers[2]}\"]`, value: \"red\" },\n                value: \"green\"\n            }\n            }\n        }\n        ],\n        encoding: {\n        x: { \n            field: headers[0], \n            type: \"ordinal\", \n            axis: { \n                title: null,\n                labelAngle: 0       // Optional: adjust label angle if needed\n            } \n        },\n        y: { type: \"quantitative\", axis: { title: \"\" } }\n        },\n        config: {\n        view: { stroke: \"transparent\" },\n        line: { strokeWidth: 3, strokeCap: \"round\", strokeJoin: \"round\" },\n        axis: {\n            ticks: false,\n            grid: false,\n            domain: false,\n            labelColor: \"#605E5C\",\n            labelFontSize: 12\n        }\n        }\n      };\n      }\n\n      else if (chartType === \"radial\") {\n        spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Radial chart from Excel selection\",\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        data: { values: data },\n        layer: [{\n        mark: { type: \"arc\", innerRadius: 20, stroke: \"#fff\" }\n        }, {\n        mark: { type: \"text\", radiusOffset: 10 },\n        encoding: {\n            text: { field: headers[1], type: \"quantitative\" }\n        }\n        }],\n        encoding: {\n        theta: { field: headers[1], type: \"quantitative\", stack: true },\n        radius: { \n            field: headers[1], \n            scale: { type: \"sqrt\", zero: true, rangeMin: 20 }\n        },\n        color: { field: headers[0], type: \"nominal\", legend: null }\n        }\n      };\n      }\n\n      else if (chartType === \"bump\") {\n      // calculate width based on number of unique x-values\n      const uniqueX = [...new Set(data.map(d => d[headers[0]]))];\n      const dynamicWidth = Math.max(400, uniqueX.length * 80);\n\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Bump chart from Excel selection\",\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        data: { values: data },\n        width: dynamicWidth,\n        height: 200,   // give it some room\n        encoding: {\n          x: {\n            field: headers[0],\n            type: \"nominal\",\n            axis: { title: \"\" },\n            scale: { type: \"point\", padding: 1 }   // padding 1 for more spread\n          },\n          y: {\n            field: headers[2],      \n            type: \"ordinal\",\n            axis: false\n          }\n        },\n        layer: [\n          {\n            mark: { type: \"line\", interpolate: \"monotone\" },\n            encoding: {\n              color: {\n                field: headers[1],   \n                type: \"nominal\",\n                legend: false\n              }\n            }\n          },\n          {\n            mark: { type: \"circle\", size: 400, tooltip: true },\n            encoding: {\n              color: {\n                field: headers[1],\n                type: \"nominal\",\n                legend: false\n              }\n            }\n          },\n          {\n            mark: { type: \"text\", color: \"white\" },\n            encoding: {\n              text: { field: headers[2] }\n            }\n          },\n          {\n            // Left-side labels\n            transform: [\n              { window: [{ op: \"rank\", as: \"rank\" }], sort: [{ field: headers[0], order: \"descending\" }] },\n              { filter: \"datum.rank === 1\" }\n            ],\n            mark: {\n              type: \"text\",\n              align: \"left\",\n              baseline: \"middle\",\n              dx: 15,\n              fontWeight: \"bold\",\n              fontSize: 12\n            },\n            encoding: {\n              text: { field: headers[1], type: \"nominal\" },\n              color: { field: headers[1], type: \"nominal\", legend: false }\n            }\n          },\n          {\n            // Right-side labels\n            transform: [\n              { window: [{ op: \"rank\", as: \"rank\" }], sort: [{ field: headers[0], order: \"ascending\" }] },\n              { filter: \"datum.rank === 1\" }\n            ],\n            mark: {\n              type: \"text\",\n              align: \"right\",\n              baseline: \"middle\",\n              dx: -15,\n              fontWeight: \"bold\",\n              fontSize: 12\n            },\n            encoding: {\n              text: { field: headers[1], type: \"nominal\" },\n              color: { field: headers[1], type: \"nominal\", legend: false }\n            }\n          }\n        ],\n        config: {\n          view: { stroke: \"transparent\" },\n          line: { strokeWidth: 3, strokeCap: \"round\", strokeJoin: \"round\" },\n          axis: {\n            ticks: false,\n            grid: false,\n            domain: false,\n            labelColor: \"#666666\",\n            labelFontSize: 12\n          }\n        }\n      };\n      }\n\n      else if (chartType === \"sankey\") {\n      const data = rows\n        .filter(r => r[0] && r[1] && !isNaN(+r[2]))\n        .map(r => ({\n          key: { stk1: r[0], stk2: r[1] },\n          doc_count: +r[2]\n        }));\n\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega/v5.2.json\",\n        height: 300,\n        width: 600,\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        data: [\n          {\n            name: \"rawData\",\n            values: data,\n            transform: [\n              { type: \"formula\", expr: \"datum.key.stk1\", as: \"stk1\" },\n              { type: \"formula\", expr: \"datum.key.stk2\", as: \"stk2\" },\n              { type: \"formula\", expr: \"datum.doc_count\", as: \"size\" }\n            ]\n          },\n          {\n            name: \"nodes\",\n            source: \"rawData\",\n            transform: [\n              {\n                type: \"filter\",\n                expr:\n                  \"!groupSelector || groupSelector.stk1 == datum.stk1 || groupSelector.stk2 == datum.stk2\"\n              },\n              { type: \"formula\", expr: \"datum.stk1+datum.stk2\", as: \"key\" },\n              { type: \"fold\", fields: [\"stk1\", \"stk2\"], as: [\"stack\", \"grpId\"] },\n              {\n                type: \"formula\",\n                expr:\n                  \"datum.stack == 'stk1' ? datum.stk1+' '+datum.stk2 : datum.stk2+' '+datum.stk1\",\n                as: \"sortField\"\n              },\n              {\n                type: \"stack\",\n                groupby: [\"stack\"],\n                sort: { field: \"sortField\", order: \"descending\" },\n                field: \"size\"\n              },\n              { type: \"formula\", expr: \"(datum.y0+datum.y1)/2\", as: \"yc\" }\n            ]\n          },\n          {\n            name: \"groups\",\n            source: \"nodes\",\n            transform: [\n              {\n                type: \"aggregate\",\n                groupby: [\"stack\", \"grpId\"],\n                fields: [\"size\"],\n                ops: [\"sum\"],\n                as: [\"total\"]\n              },\n              {\n                type: \"stack\",\n                groupby: [\"stack\"],\n                sort: { field: \"grpId\", order: \"descending\" },\n                field: \"total\"\n              },\n              { type: \"formula\", expr: \"scale('y', datum.y0)\", as: \"scaledY0\" },\n              { type: \"formula\", expr: \"scale('y', datum.y1)\", as: \"scaledY1\" },\n              { type: \"formula\", expr: \"datum.stack == 'stk1'\", as: \"rightLabel\" },\n              { type: \"formula\", expr: \"datum.total/domain('y')[1]\", as: \"percentage\" }\n            ]\n          },\n          {\n            name: \"destinationNodes\",\n            source: \"nodes\",\n            transform: [{ type: \"filter\", expr: \"datum.stack == 'stk2'\" }]\n          },\n          {\n            name: \"edges\",\n            source: \"nodes\",\n            transform: [\n              { type: \"filter\", expr: \"datum.stack == 'stk1'\" },\n              {\n                type: \"lookup\",\n                from: \"destinationNodes\",\n                key: \"key\",\n                fields: [\"key\"],\n                as: [\"target\"]\n              },\n              {\n                type: \"linkpath\",\n                orient: \"horizontal\",\n                shape: \"diagonal\",\n                sourceY: { expr: \"scale('y', datum.yc)\" },\n                sourceX: { expr: \"scale('x', 'stk1') + bandwidth('x')\" },\n                targetY: { expr: \"scale('y', datum.target.yc)\" },\n                targetX: { expr: \"scale('x', 'stk2')\" }\n              },\n              { type: \"formula\", expr: \"range('y')[0]-scale('y', datum.size)\", as: \"strokeWidth\" },\n              { type: \"formula\", expr: \"datum.size/domain('y')[1]\", as: \"percentage\" }\n            ]\n          }\n        ],\n        scales: [\n          {\n            name: \"x\",\n            type: \"band\",\n            range: \"width\",\n            domain: [\"stk1\", \"stk2\"],\n            paddingOuter: 0.05,\n            paddingInner: 0.95\n          },\n          {\n            name: \"y\",\n            type: \"linear\",\n            range: \"height\",\n            domain: { data: \"nodes\", field: \"y1\" }\n          },\n          {\n            name: \"color\",\n            type: \"ordinal\",\n            range: \"category\",\n            domain: {\n              fields: [\n                { data: \"rawData\", field: \"stk1\" },\n                { data: \"rawData\", field: \"stk2\" }\n              ]\n            }\n          },\n          {\n            name: \"stackNames\",\n            type: \"ordinal\",\n            range: [\"Source\", \"Destination\"],\n            domain: [\"stk1\", \"stk2\"]\n          }\n        ],\n        axes: [\n          {\n            orient: \"bottom\",\n            scale: \"x\",\n            encode: {\n              labels: { update: { text: { scale: \"stackNames\", field: \"value\" } } }\n            }\n          },\n          { orient: \"left\", scale: \"y\" }\n        ],\n        marks: [\n          {\n            type: \"path\",\n            name: \"edgeMark\",\n            from: { data: \"edges\" },\n            clip: true,\n            encode: {\n              update: {\n                stroke: { scale: \"color\", field: \"stk1\" }, // links colored by source\n                strokeWidth: { field: \"strokeWidth\" },\n                path: { field: \"path\" },\n                strokeOpacity: {\n                  signal:\n                    \"!groupSelector && (groupHover.stk1 == datum.stk1 || groupHover.stk2 == datum.stk2) ? 0.9 : 0.3\"\n                },\n                zindex: {\n                  signal:\n                    \"!groupSelector && (groupHover.stk1 == datum.stk1 || groupHover.stk2 == datum.stk2) ? 1 : 0\"\n                },\n                tooltip: {\n                  signal:\n                    \"datum.stk1 + ' → ' + datum.stk2 + '    ' + format(datum.size, ',.0f') + '   (' + format(datum.percentage, '.1%') + ')'\"\n                }\n              },\n              hover: { strokeOpacity: { value: 1 } }\n            }\n          },\n          {\n            type: \"rect\",\n            name: \"groupMark\",\n            from: { data: \"groups\" },\n            encode: {\n              enter: {\n                fill: { scale: \"color\", field: \"grpId\" }, // both source & destination use union colors\n                width: { scale: \"x\", band: 1 }\n              },\n              update: {\n                x: { scale: \"x\", field: \"stack\" },\n                y: { field: \"scaledY0\" },\n                y2: { field: \"scaledY1\" },\n                fillOpacity: { value: 0.6 },\n                tooltip: {\n                  signal:\n                    \"datum.grpId + '   ' + format(datum.total, ',.0f') + '   (' + format(datum.percentage, '.1%') + ')'\"\n                }\n              },\n              hover: { fillOpacity: { value: 1 } }\n            }\n          },\n          {\n            type: \"text\",\n            from: { data: \"groups\" },\n            interactive: false,\n            encode: {\n              update: {\n                x: {\n                  signal:\n                    \"scale('x', datum.stack) + (datum.rightLabel ? bandwidth('x') + 8 : -8)\"\n                },\n                yc: { signal: \"(datum.scaledY0 + datum.scaledY1)/2\" },\n                align: { signal: \"datum.rightLabel ? 'left' : 'right'\" },\n                baseline: { value: \"middle\" },\n                fontWeight: { value: \"bold\" },\n                text: {\n                  signal: \"abs(datum.scaledY0-datum.scaledY1) > 13 ? datum.grpId : ''\"\n                }\n              }\n            }\n          }\n        ],\n        signals: [\n          {\n            name: \"groupHover\",\n            value: {},\n            on: [\n              {\n                events: \"@groupMark:mouseover\",\n                update:\n                  \"{stk1:datum.stack=='stk1' && datum.grpId, stk2:datum.stack=='stk2' && datum.grpId}\"\n              },\n              { events: \"mouseout\", update: \"{}\" }\n            ]\n          },\n          {\n            name: \"groupSelector\",\n            value: false,\n            on: [\n              {\n                events: \"@groupMark:click!\",\n                update:\n                  \"{stack:datum.stack, stk1:datum.stack=='stk1' && datum.grpId, stk2:datum.stack=='stk2' && datum.grpId}\"\n              },\n              {\n                events: [\n                  { type: \"click\", markname: \"groupReset\" },\n                  { type: \"dblclick\" }\n                ],\n                update: \"false\"\n              }\n            ]\n          }\n        ]\n      };\n      }\n\n      else if (chartType === \"ribbon\") {\n        // Calculate dynamic dimensions based on data\n        const uniquePeriods = [...new Set(data.map(d => d[headers[0]]))];\n        const dynamicWidth = Math.max(600, uniquePeriods.length * 100); // More space per period\n        const dynamicHeight = 400; // Adequate height for ribbon flow\n\n        spec = {\n            $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n            description: \"Ribbon chart from Excel selection\",\n            background: \"white\",\n            width: dynamicWidth,\n            height: dynamicHeight,\n            config: { view: { stroke: \"transparent\" }},\n            data: { values: data },\n            layer: [\n            {\n                mark: { \n                type: \"area\", \n                interpolate: \"monotone\", \n                tooltip: true,\n                opacity: 0.8\n                },\n                encoding: {\n                x: {\n                    field: headers[0],\n                    type: \"ordinal\", // temporal change to \"ordinal\" if your first col is not a date\n                    scale: {\n                    type: \"point\",\n                    padding: 0.3 // Add padding between periods for more spread\n                    },\n                    axis: {\n                    title: headers[0],\n                    labelAngle: -45, // Angle labels to prevent overlap\n                    labelFontSize: 12,\n                    titleFontSize: 14,\n                    labelPadding: 10,\n                    titlePadding: 20\n                    }\n                },\n                y: {\n                    aggregate: \"sum\",\n                    field: headers[2],\n                    type: \"quantitative\",\n                    axis: {\n                    title: headers[2],\n                    labelFontSize: 12,\n                    titleFontSize: 14,\n                    grid: true,\n                    gridOpacity: 0.3\n                    },\n                    stack: \"center\"\n                },\n                color: {\n                    field: headers[1],\n                    type: \"nominal\",\n                    legend: {\n                    title: headers[1],\n                    titleFontSize: 12,\n                    labelFontSize: 11,\n                    orient: \"right\"\n                    }\n                },\n                order: {\n                    aggregate: \"sum\",\n                    field: headers[2],\n                    type: \"quantitative\"\n                }\n                }\n            }\n            ],\n            config: {\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            axis: {\n                ticks: false,\n                grid: true,\n                gridColor: \"#f0f0f0\",\n                gridOpacity: 0.5,\n                gridWidth: 1,\n                domain: false,\n                labelColor: \"#605e5c\",\n                titleColor: \"#323130\"\n            },\n            legend: {\n                titleFont: \"Segoe UI\",\n                titleFontWeight: \"bold\",\n                titleColor: \"#323130\",\n                labelFont: \"Segoe UI\",\n                labelColor: \"#605e5c\",\n                symbolType: \"circle\",\n                symbolSize: 75\n            }\n            }\n        };\n      }\n\n      else if (chartType === \"ridgeline\") {\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Ridgeline (Joyplot) chart from Excel selection\",\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        data: { values: data },\n        mark: {\n        type: \"area\",\n        fillOpacity: 0.7,\n        strokeOpacity: 1,\n        strokeWidth: 1,\n        interpolate: \"monotone\"\n        },\n        width: 400,\n        height: 20,\n        encoding: {\n        x: {\n            field: headers[0],       // date/time column\n            type: \"ordinal\",\n            title: headers[0]\n        },\n        y: {\n            aggregate: \"sum\",\n            field: headers[2],       // value column\n            type: \"quantitative\",\n            scale: { range: [20, -40] },\n            axis: {\n            title: null,\n            values: [0],\n            domain: false,\n            labels: false,\n            ticks: false\n            }\n        },\n        row: {\n            field: headers[1],       // category column\n            type: \"nominal\",\n            title: headers[1],\n            header: {\n            title: null,\n            labelAngle: 0,\n            labelOrient: \"left\",\n            labelAlign: \"left\",\n            labelPadding: 0\n            },\n            sort: { field: headers[0], op: \"max\", order: \"ascending\" }\n        },\n        fill: {\n            field: headers[1],\n            type: \"nominal\",\n            legend: null,\n            scale: { scheme: \"plasma\" }\n        }\n        },\n        resolve: { scale: { y: \"independent\" } },\n        config: {\n        view: { stroke: \"transparent\" },\n        facet: { spacing: 20 },\n        header: {\n            labelFontSize: 12,\n            labelFontWeight: 500,\n            labelAngle: 0,\n            labelAnchor: \"end\",\n            labelOrient: \"top\",\n            labelPadding: -19\n        },\n        axis: {\n            domain: false,\n            grid: false,\n            ticks: false,\n            tickCount: 5,\n            labelFontSize: 12,\n            titleFontSize: 12,\n            titleFontWeight: 400,\n            titleColor: \"#605E5C\"\n        }\n        }\n      };\n      }\n\n      else if (chartType === \"wordcloud\") {\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega/v5.json\",\n        description: \"Word cloud from Excel selection\",\n        width: 800,\n        height: 400,\n        padding: 0,\n        background: \"white\",\n        config: { view: { stroke: \"transparent\" }},\n        data: [\n        {\n            name: \"table\",\n            values: data,\n            transform: [\n            {\n                type: \"countpattern\",\n                field: headers[0], // Use first column as text source\n                case: \"upper\",\n                pattern: \"[\\\\w']{3,}\",\n                stopwords: \"(i|me|my|myself|we|us|our|ours|ourselves|you|your|yours|yourself|yourselves|he|him|his|himself|she|her|hers|herself|it|its|itself|they|them|their|theirs|themselves|what|which|who|whom|whose|this|that|these|those|am|is|are|was|were|be|been|being|have|has|had|having|do|does|did|doing|will|would|should|can|could|ought|i'm|you're|he's|she's|it's|we're|they're|i've|you've|we've|they've|i'd|you'd|he'd|she'd|we'd|they'd|i'll|you'll|he'll|she'll|we'll|they'll|isn't|aren't|wasn't|weren't|hasn't|haven't|hadn't|doesn't|don't|didn't|won't|wouldn't|shan't|shouldn't|can't|cannot|couldn't|mustn't|let's|that's|who's|what's|here's|there's|when's|where's|why's|how's|a|an|the|and|but|if|or|because|as|until|while|of|at|by|for|with|about|against|between|into|through|during|before|after|above|below|to|from|up|upon|down|in|out|on|off|over|under|again|further|then|once|here|there|when|where|why|how|all|any|both|each|few|more|most|other|some|such|no|nor|not|only|own|same|so|than|too|very|say|says|said|shall)\"\n            },\n            {\n                type: \"formula\", \n                as: \"angle\",\n                expr: \"[-45, 0, 45][~~(random() * 3)]\"\n            },\n            {\n                type: \"formula\", \n                as: \"weight\",\n                expr: \"if(datum.count > 10, 600, 300)\"\n            }\n            ]\n        }\n        ],\n        \n        scales: [\n        {\n            name: \"color\",\n            type: \"ordinal\",\n            domain: { data: \"table\", field: \"text\" },\n            range: [\"#d5a928\", \"#652c90\", \"#939597\", \"#2563eb\", \"#dc2626\", \"#059669\"]\n        }\n        ],\n        \n        marks: [\n        {\n            type: \"text\",\n            from: { data: \"table\" },\n            encode: {\n            enter: {\n                text: { field: \"text\" },\n                align: { value: \"center\" },\n                baseline: { value: \"alphabetic\" },\n                fill: { scale: \"color\", field: \"text\" }\n            },\n            update: {\n                fillOpacity: { value: 1 }\n            },\n            hover: {\n                fillOpacity: { value: 0.5 }\n            }\n            },\n            transform: [\n            {\n                type: \"wordcloud\",\n                size: [800, 400],\n                text: { field: \"text\" },\n                rotate: { field: \"datum.angle\" },\n                font: \"Helvetica Neue, Arial\",\n                fontSize: { field: \"datum.count\" },\n                fontWeight: { field: \"datum.weight\" },\n                fontSizeRange: [12, 56],\n                padding: 2\n            }\n            ]\n        }\n        ]\n      };\n      }\n\n      else if (chartType === \"area\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n          description: \"Area chart from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          mark: { \n            type: \"area\", \n            tooltip: true,\n            opacity: 0.7\n          },\n          encoding: {\n            x: { \n              field: headers[0], \n              type: \"ordinal\",\n              axis: {\n                title: headers[0],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            y: { \n              field: headers[1], \n              type: \"quantitative\",\n              axis: {\n                title: headers[1],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            // Add color encoding for multiple areas if 3rd column exists\n            ...(headers.length >= 3 && {\n              color: { \n                field: headers[2], \n                type: \"nominal\",\n                legend: {\n                  title: headers[2],\n                  titleFontSize: 12,\n                  labelFontSize: 11\n                }\n              }\n            })\n          },\n          config: {\n            font: \"Segoe UI\",\n            axis: {\n              labelColor: \"#605e5c\",\n              titleColor: \"#323130\",\n              gridColor: \"#f3f2f1\"\n            },\n            legend: {\n              titleColor: \"#323130\",\n              labelColor: \"#605e5c\"\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"bar\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n          description: \"Bar chart from Excel selection\",\n          background: \"white\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          mark: { \n            type: \"bar\", \n            tooltip: true\n          },\n          encoding: {\n            x: { \n              field: headers[0], \n              type: \"nominal\",\n              axis: {\n                title: headers[0],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            y: { \n              field: headers[1], \n              type: \"quantitative\",\n              axis: {\n                title: headers[1],\n                labelFontSize: 12,\n                titleFontSize: 14\n              }\n            },\n            // Add color encoding for grouped bars if 3rd column exists\n            ...(headers.length >= 3 && {\n              color: { \n                field: headers[2], \n                type: \"nominal\",\n                legend: {\n                  title: headers[2],\n                  titleFontSize: 12,\n                  labelFontSize: 11\n                }\n              }\n            })\n          },\n          config: {\n            font: \"Segoe UI\",\n            axis: {\n              labelColor: \"#605e5c\",\n              titleColor: \"#323130\",\n              gridColor: \"#f3f2f1\"\n            },\n            legend: {\n              titleColor: \"#323130\",\n              labelColor: \"#605e5c\"\n            }\n          }\n        };\n      }\n\n      // Render hidden chart\n      const hiddenDiv = document.createElement(\"div\");\n      hiddenDiv.style.display = \"none\";\n      document.body.appendChild(hiddenDiv);\n\n      const result = await vegaEmbed(hiddenDiv, spec, { actions: false });\n      const view = result.view;\n\n      // Export chart -> PNG\n      const pngUrl = await view.toImageURL(\"png\");\n      const response = await fetch(pngUrl);\n      const blob = await response.blob();\n\n      const reader = new FileReader();\n      reader.onloadend = async () => {\n      const base64data = reader.result.split(\",\")[1];\n\n      // Insert picture above selection\n      const image = sheet.shapes.addImage(base64data);\n      image.left = range.left;\n      image.top = range.top;\n      image.lockAspectRatio = true; // keep proportions\n\n      await context.sync();\n      };\n\n      reader.readAsDataURL(blob);\n      \n      // Clean up hidden div\n      document.body.removeChild(hiddenDiv);\n    });\n  } catch (error) {\n    console.error(error);\n  }\n}","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.js\", import.meta.url);\n// Module\nvar code = \"<!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Vega Chart</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/vega@6\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/vega-lite@6\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/vega-embed@6\\\"><\" + \"/script> <\" + \"script type=\\\"module\\\" src=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\"><\" + \"/script> <style>body{font-family:-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif;margin:20px;line-height:1.4}.chart-selector{margin-bottom:15px}label{display:block;margin-bottom:5px;font-weight:600;color:#323130}.custom-dropdown{position:relative;width:100%}.dropdown-header{width:100%;padding:8px 12px;border:1px solid #8a8886;border-radius:4px;font-size:14px;background:#fff;cursor:pointer;display:flex;justify-content:space-between;align-items:center;box-sizing:border-box}.dropdown-header:hover{border-color:#0078d4}.dropdown-arrow{font-size:12px;transition:transform .2s}.dropdown-arrow.expanded{transform:rotate(180deg)}.dropdown-list{position:absolute;top:100%;left:0;right:0;background:#fff;border:1px solid #8a8886;border-top:none;border-radius:0 0 4px 4px;max-height:300px;overflow-y:auto;z-index:1000;display:none;box-shadow:0 2px 8px rgba(0,0,0,.1)}.dropdown-list.open{display:block}.folder-item{padding:8px 12px;cursor:pointer;font-weight:600;color:#0078d4;background:#f8f9fa;border-bottom:1px solid #e1e4e8;display:flex;justify-content:space-between;align-items:center}.folder-item:hover{background:#e3f2fd}.folder-arrow{font-size:10px;transition:transform .2s}.folder-arrow.expanded{transform:rotate(90deg)}.chart-item{padding:8px 12px 8px 32px;cursor:pointer;color:#323130;border-bottom:1px solid #f0f0f0;display:none}.chart-item.visible{display:block}.chart-item:hover{background:#f5f5f5}.chart-item:last-child{border-bottom:none}button{background-color:#0078d4;color:#fff;border:none;padding:10px 20px;border-radius:4px;font-size:14px;cursor:pointer;width:100%;margin-bottom:15px}button:hover{background-color:#106ebe}.data-requirements{background-color:#f8f9fa;border:1px solid #e1e4e8;border-radius:6px;padding:12px;margin-top:10px;font-size:13px}.data-requirements h4{margin:0 0 8px 0;color:#24292f;font-size:14px}.data-requirements ul{margin:0;padding-left:18px}.data-requirements li{margin-bottom:4px}.hidden{display:none}</style> </head> <body> <h2></h2> <div class=\\\"chart-selector\\\"> <label for=\\\"chartDropdown\\\">Select Chart Type:</label> <div class=\\\"custom-dropdown\\\" id=\\\"chartDropdown\\\"> <div class=\\\"dropdown-header\\\" id=\\\"dropdownHeader\\\"> <span id=\\\"selectedText\\\">Choose a chart...</span> <span class=\\\"dropdown-arrow\\\">▼</span> </div> <div class=\\\"dropdown-list\\\" id=\\\"dropdownList\\\"> <div class=\\\"folder-item\\\" data-folder=\\\"standard\\\"> <span>Standard</span> <span class=\\\"folder-arrow\\\">►</span> </div> <div class=\\\"chart-item\\\" data-chart=\\\"bar\\\" data-folder=\\\"standard\\\">Bar</div> <div class=\\\"chart-item\\\" data-chart=\\\"line\\\" data-folder=\\\"standard\\\">Line</div> <div class=\\\"chart-item\\\" data-chart=\\\"area\\\" data-folder=\\\"standard\\\">Area</div> <div class=\\\"chart-item\\\" data-chart=\\\"point\\\" data-folder=\\\"standard\\\">Scatter</div> <div class=\\\"chart-item\\\" data-chart=\\\"pie\\\" data-folder=\\\"standard\\\">Pie</div> <div class=\\\"chart-item\\\" data-chart=\\\"box\\\" data-folder=\\\"standard\\\">Box</div> <div class=\\\"chart-item\\\" data-chart=\\\"radar\\\" data-folder=\\\"standard\\\">Radar</div> <div class=\\\"chart-item\\\" data-chart=\\\"histogram\\\" data-folder=\\\"standard\\\">Histogram</div> <div class=\\\"chart-item\\\" data-chart=\\\"treemap\\\" data-folder=\\\"standard\\\">Treemap</div> <div class=\\\"chart-item\\\" data-chart=\\\"sunburst\\\" data-folder=\\\"standard\\\">Sunburst</div> <div class=\\\"chart-item\\\" data-chart=\\\"waterfall\\\" data-folder=\\\"standard\\\">Waterfall</div> <div class=\\\"folder-item\\\" data-folder=\\\"special\\\"> <span>Special</span> <span class=\\\"folder-arrow\\\">►</span> </div> <div class=\\\"chart-item\\\" data-chart=\\\"radial\\\" data-folder=\\\"special\\\">Radial</div> <div class=\\\"chart-item\\\" data-chart=\\\"arc\\\" data-folder=\\\"special\\\">Arc</div> <div class=\\\"chart-item\\\" data-chart=\\\"tree\\\" data-folder=\\\"special\\\">Tree</div> <div class=\\\"chart-item\\\" data-chart=\\\"wordcloud\\\" data-folder=\\\"special\\\">Wordcloud</div> <div class=\\\"chart-item\\\" data-chart=\\\"gantt\\\" data-folder=\\\"special\\\">Gantt</div> <div class=\\\"chart-item\\\" data-chart=\\\"strip\\\" data-folder=\\\"special\\\">Strip</div> <div class=\\\"chart-item\\\" data-chart=\\\"heatmap\\\" data-folder=\\\"special\\\">Heatmap</div> <div class=\\\"chart-item\\\" data-chart=\\\"bullet\\\" data-folder=\\\"special\\\">Bullet</div> <div class=\\\"chart-item\\\" data-chart=\\\"horizon\\\" data-folder=\\\"special\\\">Horizon</div> <div class=\\\"chart-item\\\" data-chart=\\\"slope\\\" data-folder=\\\"special\\\">Slope</div> <div class=\\\"chart-item\\\" data-chart=\\\"mekko\\\" data-folder=\\\"special\\\">Mekko</div> <div class=\\\"chart-item\\\" data-chart=\\\"marimekko\\\" data-folder=\\\"special\\\">Marimekko</div> <div class=\\\"chart-item\\\" data-chart=\\\"bump\\\" data-folder=\\\"special\\\">Bump</div> <div class=\\\"chart-item\\\" data-chart=\\\"waffle\\\" data-folder=\\\"special\\\">Waffle</div> <div class=\\\"chart-item\\\" data-chart=\\\"lollipop\\\" data-folder=\\\"special\\\">Lollipop</div> <div class=\\\"chart-item\\\" data-chart=\\\"violin\\\" data-folder=\\\"special\\\">Violin</div> <div class=\\\"chart-item\\\" data-chart=\\\"sankey\\\" data-folder=\\\"special\\\">Sankey</div> <div class=\\\"chart-item\\\" data-chart=\\\"ribbon\\\" data-folder=\\\"special\\\">Ribbon</div> <div class=\\\"chart-item\\\" data-chart=\\\"ridgeline\\\" data-folder=\\\"special\\\">Ridgeline</div> <div class=\\\"chart-item\\\" data-chart=\\\"deviation\\\" data-folder=\\\"special\\\">Deviation</div> </div> </div> </div> <button id=\\\"drawChart\\\">Generate Chart</button> <select id=\\\"chartType\\\" style=\\\"display:none\\\"> <option value=\\\"\\\">Choose a chart...</option> <option value=\\\"bar\\\">Bar</option> <option value=\\\"line\\\">Line</option> <option value=\\\"area\\\">Area</option> <option value=\\\"point\\\">Scatter</option> <option value=\\\"pie\\\">Pie</option> <option value=\\\"box\\\">Box</option> <option value=\\\"histogram\\\">Histogram</option> <option value=\\\"radar\\\">Radar</option> <option value=\\\"heatmap\\\">Heatmap</option> <option value=\\\"radial\\\">Radial</option> <option value=\\\"arc\\\">Arc</option> <option value=\\\"tree\\\">Tree</option> <option value=\\\"wordcloud\\\">Wordcloud</option> <option value=\\\"gantt\\\">Gantt</option> <option value=\\\"strip\\\">Strip</option> <option value=\\\"treemap\\\">Treemap</option> <option value=\\\"sunburst\\\">Sunburst</option> <option value=\\\"bullet\\\">Bullet</option> <option value=\\\"horizon\\\">Horizon</option> <option value=\\\"slope\\\">Slope</option> <option value=\\\"mekko\\\">Mekko</option> <option value=\\\"marimekko\\\">Marimekko</option> <option value=\\\"bump\\\">Bump</option> <option value=\\\"waffle\\\">Waffle</option> <option value=\\\"lollipop\\\">Lollipop</option> <option value=\\\"violin\\\">Violin</option> <option value=\\\"sankey\\\">Sankey</option> <option value=\\\"ribbon\\\">Ribbon</option> <option value=\\\"ridgeline\\\">Ridgeline</option> <option value=\\\"deviation\\\">Deviation</option> <option value=\\\"waterfall\\\">Waterfall</option> </select> <div id=\\\"req-point\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> X-axis values (numbers)</li> <li><strong>Column 2:</strong> Y-axis values (numbers)</li> <li><strong>Column 3 (optional):</strong> Color grouping (categories for different colors)</li> <li><strong>Column 4 (optional):</strong> Shape grouping (categories for different shapes)</li> </ul> </div> <div id=\\\"req-bar\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Categories or X-axis values</li> <li><strong>Column 2:</strong> Values (numbers)</li> <li><strong>Column 3 (optional):</strong> Grouping variable for grouped bars</li> </ul> </div> <div id=\\\"req-line\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> X-axis values (often dates/time or categories)</li> <li><strong>Columns 2-n:</strong> Value series</li> </ul> </div> <div id=\\\"req-area\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> X-axis values (often dates/time)</li> <li><strong>Column 2:</strong> Y-axis values (numbers)</li> <li><strong>Column 3 (optional):</strong> Series grouping for multiple areas</li> </ul> </div> <div id=\\\"req-horizon\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> X-axis values (time periods, dates, or sequence numbers)</li> <li><strong>Column 2:</strong> Y-axis values (numeric data to visualize)</li> </ul> </div> <div id=\\\"req-slope\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Time periods (e.g., \\\"2023\\\", \\\"2024\\\" or \\\"Q1\\\", \\\"Q4\\\")</li> <li><strong>Column 2:</strong> Categories/Series (e.g., \\\"Product A\\\", \\\"Region 1\\\")</li> <li><strong>Column 3:</strong> Values (numbers)</li> </ul> </div> <div id=\\\"req-radar\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Series/Category name (e.g., \\\"Product A\\\", \\\"Team 1\\\")</li> <li><strong>Columns 2-n:</strong> Dimension values (e.g., \\\"Speed\\\", \\\"Quality\\\", \\\"Cost\\\")</li> </ul> </div> <div id=\\\"req-box\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Categories/Groups (e.g., \\\"Species\\\", \\\"Department\\\", \\\"Region\\\")</li> <li><strong>Column 2:</strong> Values for distribution analysis (numbers)</li> </ul> </div> <div id=\\\"req-pie\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Values (numbers for slice sizes)</li> </ul> </div> <div id=\\\"req-histogram\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Continuous numeric values to create distribution bins</li> <li><strong>Column 2 (optional):</strong> Grouping variable for colored/separate histograms</li> </ul> </div> <div id=\\\"req-radial\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category names</li> <li><strong>Column 2:</strong> Values (determines both angle and radius)</li> </ul> </div> <div id=\\\"req-arc\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Source node/entity (e.g., \\\"Person A\\\", \\\"Department 1\\\")</li> <li><strong>Column 2:</strong> Target node/entity (e.g., \\\"Person B\\\", \\\"Department 2\\\")</li> <li><strong>Column 3:</strong> Connection strength/weight (numbers, optional)</li> <li><strong>Column 4:</strong> Group/Category (optional, for coloring nodes)</li> </ul> </div> <div id=\\\"req-tree\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Parent (parent node name, empty for root nodes)</li> <li><strong>Column 2:</strong> Child (child node name)</li> <li><strong>Column 3 (optional):</strong> Value (affects node size, defaults to 1)</li> </ul> </div> <div id=\\\"req-strip\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Categories</li> <li><strong>Column 2:</strong> Values</li> <li><strong>Column 3 (optional):</strong> Color grouping (e.g., Brand, Region, Type)</li> </ul> </div> <div id=\\\"req-treemap\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Parent/Group hierarchy (e.g., Region, Division)</li> <li><strong>Column 2:</strong> Category/Item names (e.g., Product, Department, File)</li> <li><strong>Column 3:</strong> Values/Sizes (e.g., Sales, Budget, File Size)</li> </ul> </div> <div id=\\\"req-sunburst\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Parent (parent category, empty for root level)</li> <li><strong>Column 2:</strong> Child (child category or item name)</li> <li><strong>Column 3 (optional):</strong> Value (size of the segment, defaults to 1)</li> </ul> </div> <div id=\\\"req-wordcloud\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Text data (sentences, phrases, or words)</li> </ul> </div> <div id=\\\"req-gantt\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Task ID (number, empty for root tasks)</li> <li><strong>Column 2:</strong> Sub Task ID (number)</li> <li><strong>Column 3:</strong> Sub Task Name (text)</li> <li><strong>Column 4:</strong> Start Date (date)</li> <li><strong>Column 5:</strong> End Date (date)</li> <li><strong>Column 6:</strong> Progress (0-1 decimal or percentage)</li> </ul> </div> <div id=\\\"req-lollipop\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category names (e.g., \\\"Products\\\", \\\"Regions\\\", \\\"Teams\\\")</li> <li><strong>Column 2:</strong> Values (numbers for stick length and circle size)</li> </ul> </div> <div id=\\\"req-waffle\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category names (e.g., \\\"Product A\\\", \\\"Product B\\\")</li> <li><strong>Column 2:</strong> Values (numbers that will be converted to percentages)</li> </ul> </div> <div id=\\\"req-bullet\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Title/Metric name (e.g., \\\"Revenue\\\", \\\"Profit\\\")</li> <li><strong>Column 2:</strong> Poor range max</li> <li><strong>Column 3:</strong> Satisfactory range max</li> <li><strong>Column 4:</strong> Good range max</li> <li><strong>Column 5:</strong> Actual value</li> <li><strong>Column 6:</strong> Forecast value (optional)</li> <li><strong>Column 7:</strong> Target value (marker)</li> </ul> </div> <div id=\\\"req-mekko\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category (text)</li> <li><strong>Column 2:</strong> Subcategory (text)</li> <li><strong>Column 3:</strong> Value (number)</li> </ul> </div> <div id=\\\"req-marimekko\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category (text)</li> <li><strong>Column 2:</strong> Subcategory (text)</li> <li><strong>Column 3:</strong> Value (number)</li> </ul> </div> <div id=\\\"req-heatmap\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Y-axis categories (e.g., \\\"Months\\\", \\\"Products\\\", \\\"Regions\\\")</li> <li><strong>Column 2:</strong> X-axis categories (e.g., \\\"Days\\\", \\\"Quarters\\\", \\\"Sales Reps\\\")</li> <li><strong>Column 3:</strong> Values (numbers for color intensity)</li> </ul> </div> <div id=\\\"req-bump\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Time periods</li> <li><strong>Column 2:</strong> Categories (e.g., \\\"Team A\\\", \\\"Team B\\\")</li> <li><strong>Column 3:</strong> Rank values (1, 2, 3, etc.)</li> </ul> </div> <div id=\\\"req-violin\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Categories/Groups (e.g., \\\"Country A\\\", \\\"Product Line\\\", \\\"Department\\\")</li> <li><strong>Column 2:</strong> Continuous values (numbers for distribution analysis)</li> </ul> </div> <div id=\\\"req-sankey\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Source Category</li> <li><strong>Column 2:</strong> Destination Category</li> <li><strong>Column 3:</strong> Values (numbers)</li> </ul> </div> <div id=\\\"req-ribbon\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Time periods (dates/periods)</li> <li><strong>Column 2:</strong> Categories (different series)</li> <li><strong>Column 3:</strong> Values (numbers)</li> </ul> </div> <div id=\\\"req-ridgeline\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Time periods/X-axis values</li> <li><strong>Column 2:</strong> Categories (creates separate ridges)</li> <li><strong>Column 3:</strong> Values (creates distribution shape)</li> </ul> </div> <div id=\\\"req-deviation\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Date/Period</li> <li><strong>Column 2:</strong> Actual values</li> <li><strong>Column 3:</strong> Target/Baseline values</li> </ul> </div> <div id=\\\"req-waterfall\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Categories/Labels (e.g., \\\"Begin\\\", \\\"Q1\\\", \\\"Q2\\\", \\\"End\\\")</li> <li><strong>Column 2:</strong> Amount values (positive/negative numbers), 0 for total, except for beginning total</li> <li><strong>Column 3:</strong> Type (total or not)</li> </ul> </div> <div id=\\\"chart\\\"></div> <\" + \"script>document.addEventListener(\\\"DOMContentLoaded\\\",function(){const e=document.getElementById(\\\"dropdownHeader\\\"),t=document.getElementById(\\\"dropdownList\\\"),o=e.querySelector(\\\".dropdown-arrow\\\"),d=document.getElementById(\\\"selectedText\\\"),c=document.querySelectorAll(\\\".data-requirements\\\"),n=document.getElementById(\\\"chartType\\\");let s=!1;c.forEach(e=>e.classList.add(\\\"hidden\\\")),e.addEventListener(\\\"click\\\",function(){s=!s,t.classList.toggle(\\\"open\\\",s),o.classList.toggle(\\\"expanded\\\",s)}),document.addEventListener(\\\"click\\\",function(e){e.target.closest(\\\".custom-dropdown\\\")||(s=!1,t.classList.remove(\\\"open\\\"),o.classList.remove(\\\"expanded\\\"))}),document.querySelectorAll(\\\".folder-item\\\").forEach(e=>{e.addEventListener(\\\"click\\\",function(e){e.stopPropagation();const t=this.dataset.folder,o=this.querySelector(\\\".folder-arrow\\\"),d=document.querySelectorAll(`[data-folder=\\\"${t}\\\"].chart-item`),c=o.classList.contains(\\\"expanded\\\");o.classList.toggle(\\\"expanded\\\",!c),d.forEach(e=>{e.classList.toggle(\\\"visible\\\",!c)})})}),document.querySelectorAll(\\\".chart-item\\\").forEach(e=>{e.addEventListener(\\\"click\\\",function(){const e=this.dataset.chart,r=this.textContent;d.textContent=r,n.value=e,s=!1,t.classList.remove(\\\"open\\\"),o.classList.remove(\\\"expanded\\\"),document.querySelectorAll(\\\".folder-arrow\\\").forEach(e=>{e.classList.remove(\\\"expanded\\\")}),document.querySelectorAll(\\\".chart-item\\\").forEach(e=>{e.classList.remove(\\\"visible\\\")}),c.forEach(e=>e.classList.add(\\\"hidden\\\"));const l=document.getElementById(`req-${e}`);l&&l.classList.remove(\\\"hidden\\\")})})})<\" + \"/script> </body> </html>\";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","t","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","bind","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","_invoke","configurable","writable","_slicedToArray","Array","isArray","_arrayWithHoles","next","push","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","_nonIterableSpread","_createForOfIteratorHelper","_n","F","s","toString","slice","constructor","name","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_typeof","toPrimitive","String","_toPrimitive","_toPropertyKey","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","_next","_throw","run","_run","_callee3","_t","_context3","Excel","_ref","_callee2","context","sheet","range","values","headers","rows","data","chartType","spec","transformedData","valueColumns","excelDateToJSDate","_buildHierarchy","ganttData","childrenMap","_iterator","_step","_step$value","orderedTasks","timePeriods","categories","firstPeriod","lastPeriod","slopeData","allValues","isPercentage","formatString","dynamicHeight","_data","_data2","horizonData","yValues","maxY","minY","_range","bandHeight","baseline","dataPoints","_dynamicWidth","nodes","treeData","allIds","nodeCount","_dynamicWidth2","_dynamicHeight","_nodes","hierarchicalData","_allIds","_nodeCount","chartSize","radarData","dimensions","uniqueDimensions","processedData","numDataPoints","_dynamicWidth3","maxAmount","_dynamicHeight2","numericData","_values","minVal","maxVal","binWidth","niceMin","niceMax","edges","nodeMap","_nodes2","edgesWithIndices","_treeData","uniqueX","_dynamicWidth4","_data3","uniquePeriods","_dynamicWidth5","hiddenDiv","result","view","pngUrl","response","blob","reader","_context2","workbook","worksheets","getActiveWorksheet","getSelectedRange","load","sync","console","warn","map","row","h","getElementById","$schema","description","background","config","stroke","mark","type","size","tooltip","encoding","x","field","scale","zero","axis","title","labelFontSize","titleFontSize","color","legend","shape","font","labelColor","titleColor","gridColor","colName","parseFloat","point","strokeWidth","labelAngle","scheme","filled","serial","Date","Math","round","buildHierarchy","_step2","parentId","level","ordered","_iterator2","task","id","err","concat","start","end","isNaN","progress","includes","startDate","endDate","dependencies","split","trim","Boolean","duration","progressEnd","getTime","Map","has","set","entries","sort","width","height","max","layer","opacity","format","x2","align","dx","fontSize","text","strokeDash","date","toISOString","grid","Set","every","min","autosize","contains","labelFontWeight","labelPadding","domain","ticks","padding","datum","detail","transform","fontWeight","op","as","order","dy","fontStyle","fill","ranges","measures","markers","category","index","dynamicWidth","toLowerCase","parent","child","existingNode","node","seriesIndex","seriesName","dimension","series","abs","paddingInner","paddingOuter","y2","condition","outerRadius","theta","floor","ceil","top","bottom","left","right","source","fields","ops","groupby","offset","expr","scales","nice","axes","orient","zindex","tickCount","tickSize","labelFont","encode","labels","update","signal","marks","fillOpacity","interactive","lineHeight","target","group","edge","default","count","enter","mult","strokeOpacity","sourceX","targetX","sourceY","targetY","angle","titleFont","thickness","gridOpacity","find","parentKey","method","ratio","hover","joinaggregate","calculate","aggregate","facet","header","titleFontWeight","symbolType","symbolSize","continuousWidth","continuousHeight","spacing","column","labelOrient","titleOrient","impute","stack","density","bounds","vconcat","cornerRadiusEnd","hconcat","direction","gradientLength","line","strokeCap","strokeJoin","innerRadius","radiusOffset","radius","rangeMin","interpolate","stk1","stk2","doc_count","clip","path","band","yc","signals","on","events","markname","titlePadding","gridWidth","labelAlign","labelAnchor","case","pattern","stopwords","rotate","fontSizeRange","createElement","style","display","body","appendChild","vegaEmbed","actions","toImageURL","fetch","FileReader","onloadend","_callee","base64data","image","_context","shapes","addImage","lockAspectRatio","readAsDataURL","removeChild","_x","error","Office","onReady","onclick","URL"],"sourceRoot":""}