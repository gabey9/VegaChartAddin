{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/define property getters","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/* global console, document, Excel, Office */\n\nOffice.onReady(() => {\n  document.getElementById(\"drawChart\").onclick = run;\n});\n\nexport async function run() {\n  try {\n    await Excel.run(async (context) => {\n      const sheet = context.workbook.worksheets.getActiveWorksheet();\n\n      // Get current selection\n      const range = context.workbook.getSelectedRange();\n      range.load(\"values, left, top\");\n      await context.sync();\n\n      const values = range.values;\n      if (values.length < 2) {\n        console.warn(\"Need at least header row + one data row\");\n        return;\n      }\n\n      // First row is header\n      const headers = values[0];\n      const rows = values.slice(1);\n\n      // Convert rows -> objects\n      const data = rows.map(row => {\n        let obj = {};\n        headers.forEach((h, i) => {\n          obj[h] = row[i];\n        });\n        return obj;\n      });\n\n      // Get chart type from dropdown\n      const chartType = document.getElementById(\"chartType\").value;\n\n      let spec;\n\n      if (chartType === \"waterfall\") {\n        // Process waterfall data inline - set last entry's amount to 0\n        const processedData = [...data];\n        if (processedData.length > 0) {\n          processedData[processedData.length - 1] = {\n            ...processedData[processedData.length - 1],\n            [headers[1]]: 0\n          };\n        }\n\n        // Calculate dynamic dimensions\n        const numDataPoints = data.length;\n        const dynamicWidth = Math.max(400, Math.min(1200, numDataPoints * 70));\n        const maxAmount = Math.max(...data.map(d => Math.abs(d[headers[1]])));\n        const dynamicHeight = Math.max(300, Math.min(600, maxAmount / 100 + 200));\n\n        spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Waterfall chart from Excel selection\",\n\t      background: \"transparent\",\n        data: { values: processedData },\n\t      config: { view: { stroke: \"transparent\" }},\n          width: dynamicWidth,\n          height: dynamicHeight,\n          transform: [\n            {\"window\": [{\"op\": \"sum\", \"field\": headers[1], \"as\": \"sum\"}]},\n            {\"window\": [{\"op\": \"lead\", \"field\": headers[0], \"as\": \"lead\"}]},\n            {\n              \"calculate\": `datum.lead === null ? datum.${headers[0]} : datum.lead`,\n              \"as\": \"lead\"\n            },\n            {\n              \"calculate\": `datum.${headers[0]} === '${data[data.length - 1][headers[0]]}' ? 0 : datum.sum - datum.${headers[1]}`,\n              \"as\": \"previous_sum\"\n            },\n            {\n              \"calculate\": `datum.${headers[0]} === '${data[data.length - 1][headers[0]]}' ? datum.sum : datum.${headers[1]}`,\n              \"as\": \"amount\"\n            },\n            {\n              \"calculate\": `datum.${headers[0]} === '${data[0][headers[0]]}' ? datum.${headers[1]} / 2 : datum.${headers[0]} === '${data[data.length - 1][headers[0]]}' ? datum.${headers[1]} / 2 : (datum.sum + datum.previous_sum) / 2`,\n              \"as\": \"center\"\n            },\n            {\n              \"calculate\": `datum.${headers[0]} === '${data[data.length - 1][headers[0]]}' ? datum.sum : (datum.${headers[0]} !== '${data[0][headers[0]]}' && datum.${headers[0]} !== '${data[data.length - 1][headers[0]]}' && datum.${headers[1]} > 0 ? '+' : '') + datum.${headers[1]}`,\n              \"as\": \"text_amount\"\n            },\n            {\"calculate\": \"(datum.sum + datum.previous_sum) / 2\", \"as\": \"center\"}\n          ],\n          encoding: {\n            x: {\n              field: headers[0],\n              type: \"ordinal\",\n              sort: null,\n              axis: {\"labelAngle\": 0, \"title\": headers[0]},\n              scale: {\"paddingInner\": 0.1, \"paddingOuter\": 0.05}\n            }\n          },\n          layer: [\n            {\n              mark: {\"type\": \"bar\", \"size\": 60},\n              encoding: {\n                y: {\n                  field: \"previous_sum\",\n                  type: \"quantitative\",\n                  title: headers[1]\n                },\n                y2: {\"field\": \"sum\"},\n                color: {\n                  condition: [\n                    {\n                      test: `datum.${headers[0]} === '${data[0][headers[0]]}' || datum.${headers[0]} === '${data[data.length - 1][headers[0]]}'`,\n                      value: \"#f7e0b6\"\n                    },\n                    {\"test\": \"datum.sum < datum.previous_sum\", \"value\": \"#f78a64\"}\n                  ],\n                  value: \"#93c4aa\"\n                }\n              }\n            },\n            {\n              mark: {\n                type: \"rule\",\n                color: \"#404040\",\n                opacity: 1,\n                strokeWidth: 2,\n                xOffset: -30,\n                x2Offset: 30\n              },\n              encoding: {\n                x2: {\"field\": \"lead\"},\n                y: {\"field\": \"sum\", \"type\": \"quantitative\"}\n              }\n            },\n            {\n              \"mark\": {\n                type: \"text\", \n                dy: {\"expr\": \"datum.amount >= 0 ? -4 : 4\"}, \n                baseline: {\"expr\": \"datum.amount >= 0 ? 'bottom' : 'top'\"}\n              },\n              encoding: {\n                y: {\"field\": \"sum\", \"type\": \"quantitative\"},\n                text: {\"field\": \"sum\", \"type\": \"nominal\"},\n                opacity: {\n                  \"condition\": {\n                    \"test\": `datum.${headers[0]} === '${data[0][headers[0]]}' || datum.${headers[0]} === '${data[data.length - 1][headers[0]]}'`,\n                    \"value\": 0\n                  },\n                  \"value\": 1\n                }\n              }\n            },\n            {\n              mark: {\"type\": \"text\", \"fontWeight\": \"bold\", \"baseline\": \"middle\"},\n              encoding: {\n                y: {\"field\": \"center\", \"type\": \"quantitative\"},\n                text: {\"field\": \"text_amount\", \"type\": \"nominal\"},\n                color: {\n                  condition: [\n                    {\n                      test: `datum.${headers[0]} === '${data[0][headers[0]]}' || datum.${headers[0]} === '${data[data.length - 1][headers[0]]}'`,\n                      value: \"#725a30\"\n                    }\n                  ],\n                  value: \"white\"\n                }\n              }\n            }\n          ],\n          config: {\"text\": {\"fontWeight\": \"bold\", \"color\": \"#404040\"}}\n        };\n      }\n\n      else if (chartType === \"bullet\") {\n      const data = rows.map(r => ({\n        title: r[0],\n        ranges: [+r[1], +r[2], +r[3]],\n        measures: [+r[4], +r[5]],\n        markers: [+r[6]]\n      }));\n\n      spec = {\n        \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",\n        background: \"transparent\",\n        config: { view: { stroke: \"transparent\" }},\n        \"data\": { \"values\": data },\n        \"facet\": {\n        \"row\": {\n            \"field\": \"title\", \"type\": \"ordinal\",\n            \"header\": { \"labelAngle\": 0, \"title\": \"\", \"labelAlign\": \"left\" }\n        }\n        },\n        \"spacing\": 10,\n        \"spec\": {\n        \"encoding\": {\n            \"x\": {\n            \"type\": \"quantitative\",\n            \"scale\": { \"nice\": false },\n            \"title\": null\n            }\n        },\n        \"layer\": [\n            { \"mark\": { \"type\": \"bar\", \"color\": \"#eee\" }, \"encoding\": { \"x\": { \"field\": \"ranges[2]\" } } },\n            { \"mark\": { \"type\": \"bar\", \"color\": \"#ddd\" }, \"encoding\": { \"x\": { \"field\": \"ranges[1]\" } } },\n            { \"mark\": { \"type\": \"bar\", \"color\": \"#ccc\" }, \"encoding\": { \"x\": { \"field\": \"ranges[0]\" } } },\n            { \"mark\": { \"type\": \"bar\", \"color\": \"lightsteelblue\", \"size\": 10 }, \"encoding\": { \"x\": { \"field\": \"measures[1]\" } } },\n            { \"mark\": { \"type\": \"bar\", \"color\": \"steelblue\", \"size\": 10 }, \"encoding\": { \"x\": { \"field\": \"measures[0]\" } } },\n            { \"mark\": { \"type\": \"tick\", \"color\": \"black\" }, \"encoding\": { \"x\": { \"field\": \"markers[0]\" } } }\n        ]\n        },\n        \"resolve\": { \"scale\": { \"x\": \"independent\" } },\n        \"config\": { \"tick\": { \"thickness\": 2 }, \"scale\": { \"barBandPaddingInner\": 0 } }\n      };\n      }\n\n      else if (chartType === \"pie\") {\n        spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        background: \"transparent\",\n        config: { view: { stroke: \"transparent\" }},\n        description: \"Pie chart from Excel selection\",\n        data: { values: data },\n        mark: { type: \"arc\", outerRadius: 120 },\n        encoding: {\n          theta: { field: headers[1], type: \"quantitative\" },\n          color: { field: headers[0], type: \"nominal\" }\n          }\n        };\n      }\n\n      else if (chartType === \"mekko\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega/v5.json\",\n          description: \"Marimekko chart from Excel selection\",\n          width: 800,\n          height: 500,\n          background: \"transparent\",\n          config: { view: { stroke: \"transparent\" }},\n          view: { stroke: null },\n          padding: { top: 60, bottom: 80, left: 60, right: 60 },\n          data: [\n            {\n              name: \"table\",\n              values: data\n            },\n            {\n              name: \"categories\",\n              source: \"table\",\n              transform: [\n                {\n                  type: \"aggregate\",\n                  fields: [headers[2]],\n                  ops: [\"sum\"],\n                  as: [\"categoryTotal\"],\n                  groupby: [headers[0]]\n                },\n                {\n                  type: \"stack\",\n                  offset: \"normalize\",\n                  sort: { field: \"categoryTotal\", order: \"descending\" },\n                  field: \"categoryTotal\",\n                  as: [\"x0\", \"x1\"]\n                },\n                {\n                  type: \"formula\",\n                  as: \"Percent\",\n                  expr: \"datum.x1-datum.x0\"\n                },\n                {\n                  type: \"formula\",\n                  as: \"Label\",\n                  expr: `datum.${headers[0]} + ' (' + format(datum.Percent,'.1%') + ')'`\n                }\n              ]\n            },\n            {\n              name: \"finalTable\",\n              source: \"table\",\n              transform: [\n                {\n                  type: \"stack\",\n                  offset: \"normalize\",\n                  groupby: [headers[0]],\n                  sort: { field: headers[2], order: \"descending\" },\n                  field: headers[2],\n                  as: [\"y0\", \"y1\"]\n                },\n                {\n                  type: \"stack\",\n                  groupby: [headers[0]],\n                  sort: { field: headers[2], order: \"descending\" },\n                  field: headers[2],\n                  as: [\"z0\", \"z1\"]\n                },\n                {\n                  type: \"lookup\",\n                  from: \"categories\",\n                  key: headers[0],\n                  values: [\"x0\", \"x1\"],\n                  fields: [headers[0]]\n                },\n                {\n                  type: \"formula\",\n                  as: \"Percent\",\n                  expr: \"datum.y1-datum.y0\"\n                },\n                {\n                  type: \"formula\",\n                  as: \"Label\",\n                  expr: `[datum.${headers[1]}, format(datum.${headers[2]}, '.0f') + ' (' + format(datum.Percent, '.1%') + ')']`\n                },\n                {\n                  type: \"window\",\n                  sort: { field: \"y0\", order: \"ascending\" },\n                  ops: [\"row_number\"],\n                  fields: [null],\n                  as: [\"rank\"],\n                  groupby: [headers[0]]\n                }\n              ]\n            }\n          ],\n          scales: [\n            {\n              name: \"x\",\n              type: \"linear\",\n              range: \"width\",\n              domain: { data: \"finalTable\", field: \"x1\" }\n            },\n            {\n              name: \"y\",\n              type: \"linear\",\n              range: \"height\",\n              nice: false,\n              zero: true,\n              domain: { data: \"finalTable\", field: \"z1\" }\n            },\n            {\n              name: \"opacity\",\n              type: \"linear\",\n              range: [1, 0.6],\n              domain: { data: \"finalTable\", field: \"rank\" }\n            },\n            {\n              name: \"color\",\n              type: \"ordinal\",\n              range: { scheme: \"category20\" },\n              domain: {\n                data: \"categories\",\n                field: headers[0],\n                sort: { field: \"x0\", order: \"ascending\", op: \"sum\" }\n              }\n            }\n          ],\n          axes: [\n            {\n              orient: \"left\",\n              scale: \"y\",\n              zindex: 1,\n              format: \"\",\n              tickCount: 5,\n              tickSize: 15,\n              labelColor: { value: \"#333740\" },\n              labelFontWeight: { value: \"normal\" },\n              labelFontSize: { value: 12 },\n              labelFont: { value: \"Segoe UI\" },\n              offset: 5,\n              domain: false,\n              encode: {\n                labels: {\n                  update: {\n                    text: { signal: `format(datum.value, '.0f')` }\n                  }\n                }\n              }\n            }\n          ],\n          marks: [\n            {\n              type: \"rect\",\n              name: \"bars\",\n              from: { data: \"finalTable\" },\n              encode: {\n                update: {\n                  x: { scale: \"x\", field: \"x0\" },\n                  x2: { scale: \"x\", field: \"x1\" },\n                  y: { scale: \"y\", field: \"z0\" },\n                  y2: { scale: \"y\", field: \"z1\" },\n                  fill: { scale: \"color\", field: headers[0] },\n                  stroke: { value: \"white\" },\n                  strokeWidth: { value: 1 },\n                  fillOpacity: { scale: \"opacity\", field: \"rank\" },\n                  tooltip: { signal: \"datum\" }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              name: \"labels\",\n              interactive: false,\n              from: { data: \"bars\" },\n              encode: {\n                update: {\n                  x: { signal: \"(datum.x2 - datum.x)*0.5 + datum.x\" },\n                  align: { value: \"center\" },\n                  text: { field: \"datum.Label\" },\n                  y: { signal: \"(datum.y2 - datum.y)*0.5 + datum.y\" },\n                  fill: { value: \"white\" },\n                  font: { value: \"Segoe UI\" },\n                  lineHeight: { value: 12 },\n                  fontSize: { value: 10 },\n                  opacity: { signal: \"(datum.x2 - datum.x) > 0.05 && (datum.y2 - datum.y) > 20 ? 1 : 0\" }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              name: \"categoryLabels\",\n              from: { data: \"categories\" },\n              encode: {\n                update: {\n                  x: { scale: \"x\", signal: \"(datum.x1-datum.x0)/2 + datum.x0\" },\n                  y: { signal: \"-15\" },\n                  text: { field: headers[0] },\n                  align: { value: \"center\" },\n                  baseline: { value: \"bottom\" },\n                  fill: { value: \"#333740\" },\n                  fontWeight: { value: \"bold\" },\n                  fontSize: { value: 12 },\n                  font: { value: \"Segoe UI\" }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              name: \"categoryPercentages\",\n              from: { data: \"categories\" },\n              encode: {\n                update: {\n                  x: { scale: \"x\", signal: \"(datum.x1-datum.x0)/2 + datum.x0\" },\n                  y: { signal: \"height + 30\" },\n                  text: { field: \"Label\" },\n                  align: { value: \"center\" },\n                  baseline: { value: \"top\" },\n                  fill: { value: \"#666666\" },\n                  fontWeight: { value: \"normal\" },\n                  fontSize: { value: 10 },\n                  font: { value: \"Segoe UI\" }\n                }\n              }\n            }\n          ]\n        };\n      }\n\n      else if (chartType === \"arc\") {\n        // Transform Excel data for arc chart\n        const edges = data.map((row, index) => ({\n          source: row[headers[0]],\n          target: row[headers[1]],\n          value: headers.length >= 3 && row[headers[2]] ? row[headers[2]] : 1,\n          group: headers.length >= 4 && row[headers[3]] ? row[headers[3]] : \"default\"\n        }));\n\n        // Get unique nodes from edges\n        const nodeMap = new Map();\n        edges.forEach(edge => {\n          if (!nodeMap.has(edge.source)) {\n            nodeMap.set(edge.source, { \n              name: edge.source, \n              group: edge.group,\n              index: nodeMap.size\n            });\n          }\n          if (!nodeMap.has(edge.target)) {\n            nodeMap.set(edge.target, { \n              name: edge.target, \n              group: edge.group,\n              index: nodeMap.size\n            });\n          }\n        });\n\n        const nodes = Array.from(nodeMap.values());\n\n        // Transform edges to use node indices\n        const edgesWithIndices = edges.map(edge => ({\n          source: nodeMap.get(edge.source).index,\n          target: nodeMap.get(edge.target).index,\n          value: edge.value\n        }));\n\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega/v5.json\",\n          description: \"Arc diagram from Excel selection\",\n          width: Math.max(600, nodes.length * 40),\n          height: 300,\n          padding: { top: 20, bottom: 80, left: 20, right: 20 },\n          \n          data: [\n            {\n              name: \"edges\",\n              values: edgesWithIndices\n            },\n            {\n              name: \"sourceDegree\",\n              source: \"edges\",\n              transform: [\n                { type: \"aggregate\", groupby: [\"source\"], as: [\"count\"] }\n              ]\n            },\n            {\n              name: \"targetDegree\", \n              source: \"edges\",\n              transform: [\n                { type: \"aggregate\", groupby: [\"target\"], as: [\"count\"] }\n              ]\n            },\n            {\n              name: \"nodes\",\n              values: nodes,\n              transform: [\n                { type: \"window\", ops: [\"rank\"], as: [\"order\"] },\n                {\n                  type: \"lookup\", from: \"sourceDegree\", key: \"source\",\n                  fields: [\"index\"], as: [\"sourceDegree\"],\n                  default: { count: 0 }\n                },\n                {\n                  type: \"lookup\", from: \"targetDegree\", key: \"target\", \n                  fields: [\"index\"], as: [\"targetDegree\"],\n                  default: { count: 0 }\n                },\n                {\n                  type: \"formula\", as: \"degree\",\n                  expr: \"(datum.sourceDegree.count || 0) + (datum.targetDegree.count || 0)\"\n                }\n              ]\n            }\n          ],\n\n          scales: [\n            {\n              name: \"position\",\n              type: \"band\",\n              domain: { data: \"nodes\", field: \"order\", sort: true },\n              range: \"width\"\n            },\n            {\n              name: \"color\",\n              type: \"ordinal\",\n              range: { scheme: \"category20\" },\n              domain: { data: \"nodes\", field: \"group\" }\n            }\n          ],\n\n          marks: [\n            {\n              type: \"symbol\",\n              name: \"layout\",\n              interactive: false,\n              from: { data: \"nodes\" },\n              encode: {\n                enter: { opacity: { value: 0 } },\n                update: {\n                  x: { scale: \"position\", field: \"order\" },\n                  y: { value: 0 },\n                  size: { field: \"degree\", mult: 8, offset: 50 },\n                  fill: { scale: \"color\", field: \"group\" }\n                }\n              }\n            },\n            {\n              type: \"path\",\n              from: { data: \"edges\" },\n              encode: {\n                update: {\n                  stroke: { value: \"#0078d4\" },\n                  strokeOpacity: { value: 0.4 },\n                  strokeWidth: { field: \"value\", mult: 2, offset: 1 }\n                }\n              },\n              transform: [\n                {\n                  type: \"lookup\", from: \"layout\", key: \"datum.index\",\n                  fields: [\"datum.source\", \"datum.target\"],\n                  as: [\"sourceNode\", \"targetNode\"]\n                },\n                {\n                  type: \"linkpath\",\n                  sourceX: { expr: \"min(datum.sourceNode.x, datum.targetNode.x)\" },\n                  targetX: { expr: \"max(datum.sourceNode.x, datum.targetNode.x)\" },\n                  sourceY: { expr: \"0\" },\n                  targetY: { expr: \"0\" },\n                  shape: \"arc\"\n                }\n              ]\n            },\n            {\n              type: \"symbol\",\n              from: { data: \"layout\" },\n              encode: {\n                update: {\n                  x: { field: \"x\" },\n                  y: { field: \"y\" },\n                  fill: { field: \"fill\" },\n                  size: { field: \"size\" },\n                  stroke: { value: \"white\" },\n                  strokeWidth: { value: 1 },\n                  tooltip: { \n                    signal: \"{'Node': datum.datum.name, 'Group': datum.datum.group, 'Connections': datum.datum.degree}\" \n                  }\n                }\n              }\n            },\n            {\n              type: \"text\",\n              from: { data: \"nodes\" },\n              encode: {\n                update: {\n                  x: { scale: \"position\", field: \"order\" },\n                  y: { value: 25 },\n                  fontSize: { value: 10 },\n                  align: { value: \"center\" },\n                  baseline: { value: \"top\" },\n                  angle: { value: -45 },\n                  text: { field: \"name\" },\n                  fill: { value: \"#323130\" },\n                  font: { value: \"Segoe UI\" }\n                }\n              }\n            }\n          ],\n          \n          config: {\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            text: { font: \"Segoe UI\", fontSize: 10, fill: \"#605e5c\" }\n          }\n        };\n      }\n\n      else if (chartType === \"lollipop\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n          description: \"Lollipop chart from Excel selection\",\n          background: \"transparent\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          encoding: {\n            y: {\n              field: headers[0],\n              type: \"nominal\",\n              sort: \"-x\",\n              axis: {\n                domain: false,\n                title: null,\n                ticks: false,\n                labelFont: \"Segoe UI\",\n                labelFontSize: 14,\n                labelPadding: 10,\n                labelColor: \"#605e5c\"\n              }\n            },\n            x: {\n              field: headers[1],\n              type: \"quantitative\",\n              axis: {\n                domain: false,\n                ticks: false,\n                grid: true,\n                gridColor: \"#e0e0e0\",\n                labelFont: \"Segoe UI\",\n                labelFontSize: 12,\n                labelColor: \"#605e5c\",\n                title: headers[1],\n                titleFont: \"Segoe UI\",\n                titleFontSize: 14,\n                titleColor: \"#323130\"\n              }\n            },\n            color: { value: \"#0078d4\" }\n          },\n          layer: [\n            {\n              mark: {\n                type: \"rule\",\n                tooltip: true,\n                strokeWidth: 3,\n                opacity: 0.7\n              }\n            },\n            {\n              mark: {\n                type: \"circle\",\n                tooltip: true,\n                size: 300,\n                opacity: 0.9\n              },\n              encoding: {\n                size: {\n                  field: headers[1],\n                  type: \"quantitative\",\n                  scale: {\n                    range: [200, 800]\n                  },\n                  legend: null\n                }\n              }\n            }\n          ],\n          config: {\n            autosize: {\n              type: \"fit\",\n              contains: \"padding\"\n            },\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            text: { font: \"Segoe UI\", fontSize: 12, fill: \"#605E5C\" }\n          }\n        };\n      }\n\n      else if (chartType === \"waffle\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n          description: \"Waffle chart from Excel selection\",\n          background: \"transparent\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          transform: [\n            {\n              joinaggregate: [{\"op\": \"sum\", \"field\": headers[1], \"as\": \"TotalValue\"}]\n            },\n            {\n              calculate: `round(datum.${headers[1]}/datum.TotalValue * 100)`,\n              as: \"PercentOfTotal\"\n            },\n            {\n              aggregate: [{\"op\": \"min\", \"field\": \"PercentOfTotal\", \"as\": \"Percent\"}],\n              groupby: [headers[0]]\n            },\n            {\"calculate\": \"sequence(1,101)\", \"as\": \"Sequence\"},\n            {\"flatten\": [\"Sequence\"]},\n            {\n              calculate: `if(datum.Sequence <= datum.Percent, datum.${headers[0]},'_blank')`,\n              as: \"Plot\"\n            },\n            {\"calculate\": \"ceil (datum.Sequence / 10)\", \"as\": \"row\"},\n            {\"calculate\": \"datum.Sequence - datum.row * 10\", \"as\": \"col\"}\n          ],\n          facet: {\"column\": {\"field\": headers[0], \"header\": {\"labelOrient\": \"bottom\"}}},\n          spec: {\n            layer: [\n              {\n                mark: {\n                  type: \"circle\",\n                  filled: true,\n                  tooltip: true,\n                  stroke: \"#9e9b9b\",\n                  strokeWidth: 0.7\n                },\n                encoding: {\n                  x: {\"field\": \"col\", \"type\": \"ordinal\", \"axis\": null},\n                  y: {\"field\": \"row\", \"type\": \"ordinal\", \"axis\": null, \"sort\": \"-y\"},\n                  color: {\n                    condition: {\"test\": \"datum.Plot == '_blank'\", \"value\": \"#e6e3e3\"},\n                    scale: {\"scheme\": \"set1\"},\n                    field: \"Plot\",\n                    type: \"nominal\",\n                    legend: null\n                  },\n                  size: {\"value\": 241},\n                  tooltip: [{\"field\": headers[0], \"type\": \"nominal\"}]\n                }\n              },\n              {\n                mark: {\"type\": \"text\", \"fontSize\": 30, \"fontWeight\": \"bold\"},\n                encoding: {\n                  y: {\"value\": 30},\n                  text: {\n                    condition: {\n                      test: \"datum.Sequence == 1\",\n                      value: {\"expr\": \"datum.Percent + '%'\"}\n                    }\n                  },\n                  color: {\"scale\": {\"scheme\": \"set1\"}, \"field\": \"Plot\"}\n                }\n              }\n            ]\n          },\n          config: {\n            view: {\"stroke\": \"transparent\"},\n            font: \"Segoe UI\",\n            text: {\"font\": \"Segoe UI\", \"fontSize\": 12, \"fill\": \"#605E5C\"},\n            axis: {\n              ticks: false,\n              grid: false,\n              domain: false,\n              labelColor: \"#605E5C\",\n              labelFontSize: 12\n            },\n            header: {\n              titleFont: \"Segoe UI\",\n              titleFontSize: 16,\n              titleColor: \"#757575\",\n              labelFont: \"Segoe UI\",\n              labelFontSize: 13,\n              labelColor: \"#605E5C\"\n            },\n            legend: {\n              titleFont: \"Segoe UI\",\n              titleFontWeight: \"bold\",\n              titleColor: \"#605E5C\",\n              labelFont: \"Segoe UI\",\n              labelFontSize: 13,\n              labelColor: \"#605E5C\",\n              symbolType: \"circle\",\n              symbolSize: 75\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"violin\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n          description: \"Violin chart from Excel selection\",\n          background: \"transparent\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          spacing: 0,\n          facet: {\n            column: {\n              field: headers[0],\n              header: {\n                orient: \"bottom\",\n                title: null,\n                labelFontSize: 14\n              }\n            }\n          },\n          spec: {\n            width: 180,\n            height: 400,\n            encoding: {\n              y: {\n                field: headers[1],\n                type: \"quantitative\",\n                title: headers[1],\n                axis: {\n                  tickCount: 10,\n                  titleFontSize: 16,\n                  labelFontSize: 12\n                }\n              },\n              x: {\n                type: \"quantitative\",\n                axis: {\n                  labels: false,\n                  title: null,\n                  grid: false,\n                  ticks: false\n                }\n              },\n              color: {\n                field: headers[0],\n                type: \"nominal\",\n                legend: null,\n                scale: {\n                  scheme: \"category10\"\n                }\n              }\n            },\n            layer: [\n              {\n                name: \"KDE_PLOT\",\n                transform: [\n                  {\n                    density: headers[1],\n                    groupby: [headers[0]],\n                    as: [\"_kde_value\", \"_kde_density\"]\n                  },\n                  {\n                    calculate: \"datum['_kde_density'] * -1\",\n                    as: \"_negative_kde_density\"\n                  }\n                ],\n                layer: [\n                  {\n                    name: \"KDE_POSITIVE\",\n                    mark: {\n                      type: \"area\",\n                      orient: \"vertical\",\n                      opacity: 0.6\n                    },\n                    encoding: {\n                      y: { field: \"_kde_value\" },\n                      x: { field: \"_kde_density\" }\n                    }\n                  },\n                  {\n                    name: \"KDE_NEGATIVE\",\n                    mark: {\n                      type: \"area\",\n                      orient: \"vertical\",\n                      opacity: 0.6\n                    },\n                    encoding: {\n                      y: { field: \"_kde_value\" },\n                      x: { field: \"_negative_kde_density\" }\n                    }\n                  }\n                ],\n                encoding: {\n                  x2: { datum: 0 }\n                }\n              },\n              {\n                name: \"BOX_PLOT\",\n                mark: {\n                  type: \"boxplot\",\n                  extent: \"min-max\",\n                  median: {\n                    color: \"black\",\n                    strokeWidth: 2\n                  },\n                  size: 20\n                },\n                encoding: {\n                  y: { field: headers[1] },\n                  fill: { value: \"#969696\" },\n                  stroke: { value: \"black\" }\n                }\n              }\n            ]\n          },\n          config: {\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            text: { font: \"Segoe UI\", fontSize: 12, fill: \"#605E5C\" },\n            axis: {\n              ticks: false,\n              grid: true,\n              gridColor: \"#e0e0e0\",\n              domain: false,\n              labelColor: \"#605E5C\",\n              labelFontSize: 12\n            },\n            header: {\n              titleFont: \"Segoe UI\",\n              titleFontSize: 16,\n              titleColor: \"#757575\",\n              labelFont: \"Segoe UI\",\n              labelFontSize: 13,\n              labelColor: \"#605E5C\"\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"heatmap\") {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n          description: \"Heatmap with marginal bars from Excel selection\",\n          background: \"transparent\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          spacing: 15,\n          bounds: \"flush\",\n          vconcat: [\n            {\n              height: 60,\n              mark: {\n                type: \"bar\",\n                stroke: null,\n                cornerRadiusEnd: 2,\n                tooltip: true,\n                color: \"lightgrey\"\n              },\n              encoding: {\n                x: {\n                  field: headers[1],\n                  type: \"ordinal\",\n                  axis: null\n                },\n                y: {\n                  field: headers[2],\n                  aggregate: \"mean\",\n                  type: \"quantitative\",\n                  axis: null\n                }\n              }\n            },\n            {\n              spacing: 15,\n              bounds: \"flush\",\n              hconcat: [\n                {\n                  mark: {\n                    type: \"rect\",\n                    stroke: \"white\",\n                    tooltip: true\n                  },\n                  encoding: {\n                    y: {\n                      field: headers[0],\n                      type: \"ordinal\",\n                      title: headers[0],\n                      axis: {\n                        domain: false,\n                        ticks: false,\n                        labels: true,\n                        labelAngle: 0,\n                        labelPadding: 5\n                      }\n                    },\n                    x: {\n                      field: headers[1],\n                      type: \"ordinal\",\n                      title: headers[1],\n                      axis: {\n                        domain: false,\n                        ticks: false,\n                        labels: true,\n                        labelAngle: 0\n                      }\n                    },\n                    color: {\n                      aggregate: \"mean\",\n                      field: headers[2],\n                      type: \"quantitative\",\n                      title: headers[2],\n                      scale: {\n                        scheme: \"blues\"\n                      },\n                      legend: {\n                        direction: \"vertical\",\n                        gradientLength: 120\n                      }\n                    }\n                  }\n                },\n                {\n                  mark: {\n                    type: \"bar\",\n                    stroke: null,\n                    cornerRadiusEnd: 2,\n                    tooltip: true,\n                    color: \"lightgrey\"\n                  },\n                  width: 60,\n                  encoding: {\n                    y: {\n                      field: headers[0],\n                      type: \"ordinal\",\n                      axis: null\n                    },\n                    x: {\n                      field: headers[2],\n                      type: \"quantitative\",\n                      aggregate: \"mean\",\n                      axis: null\n                    }\n                  }\n                }\n              ]\n            }\n          ],\n          config: {\n            autosize: {\n              type: \"fit\",\n              contains: \"padding\"\n            },\n            view: { stroke: \"transparent\" },\n            font: \"Segoe UI\",\n            text: { font: \"Segoe UI\", fontSize: 12, fill: \"#605E5C\" },\n            axis: {\n              ticks: false,\n              grid: false,\n              domain: false,\n              labelColor: \"#605E5C\",\n              labelFontSize: 12,\n              titleFontSize: 14,\n              titleColor: \"#323130\"\n            },\n            legend: {\n              titleFont: \"Segoe UI\",\n              titleFontWeight: \"bold\",\n              titleColor: \"#605E5C\",\n              labelFont: \"Segoe UI\",\n              labelFontSize: 12,\n              labelColor: \"#605E5C\"\n            }\n          }\n        };\n      }\n\n      else if (chartType === \"deviation\") {\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Deviation chart from Excel selection\",\n        background: \"transparent\",\n        config: { view: { stroke: \"transparent\" }},\n        data: { values: data },\n        layer: [\n        {\n            mark: { type: \"line\", tooltip: true, color: \"grey\" },\n            encoding: {\n            x: { field: headers[0], type: \"ordinal\" },\n            y: { field: headers[1], type: \"quantitative\" }\n            }\n        },\n        {\n            mark: { type: \"circle\", size: 80, color: \"grey\", tooltip: true },\n            encoding: {\n            x: { field: headers[0], type: \"ordinal\" },\n            y: { field: headers[1], type: \"quantitative\" }\n            }\n        },\n        {\n            mark: { type: \"rule\", strokeWidth: 2, tooltip: true },\n            encoding: {\n            x: { field: headers[0], type: \"ordinal\" },\n            y: { field: headers[1], type: \"quantitative\" },\n            y2: { field: headers[2] },\n            color: {\n                condition: { test: `datum[\"${headers[1]}\"] < datum[\"${headers[2]}\"]`, value: \"red\" },\n                value: \"green\"\n            }\n            }\n        },\n        {\n            mark: { type: \"circle\", size: 60, tooltip: true },\n            encoding: {\n            x: { field: headers[0], type: \"ordinal\" },\n            y: { field: headers[2], type: \"quantitative\" },\n            color: {\n                condition: { test: `datum[\"${headers[1]}\"] < datum[\"${headers[2]}\"]`, value: \"red\" },\n                value: \"green\"\n            }\n            }\n        }\n        ],\n        encoding: {\n        x: { field: headers[0], type: \"ordinal\", axis: null },\n        y: { type: \"quantitative\", axis: { title: \"\" } }\n        },\n        config: {\n        view: { stroke: \"transparent\" },\n        line: { strokeWidth: 3, strokeCap: \"round\", strokeJoin: \"round\" },\n        axis: {\n            ticks: false,\n            grid: false,\n            domain: false,\n            labelColor: \"#605E5C\",\n            labelFontSize: 12\n        }\n        }\n      };\n      }\n\n      else if (chartType === \"radial\") {\n        spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Radial chart from Excel selection\",\n        background: \"transparent\",\n        config: { view: { stroke: \"transparent\" }},\n        data: { values: data },\n        layer: [{\n        mark: { type: \"arc\", innerRadius: 20, stroke: \"#fff\" }\n        }, {\n        mark: { type: \"text\", radiusOffset: 10 },\n        encoding: {\n            text: { field: headers[1], type: \"quantitative\" }\n        }\n        }],\n        encoding: {\n        theta: { field: headers[1], type: \"quantitative\", stack: true },\n        radius: { \n            field: headers[1], \n            scale: { type: \"sqrt\", zero: true, rangeMin: 20 }\n        },\n        color: { field: headers[0], type: \"nominal\", legend: null }\n        }\n      };\n      }\n\n      else if (chartType === \"bump\") {\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Bump chart from Excel selection\",\n        background: \"transparent\",\n        config: { view: { stroke: \"transparent\" }},\n        data: { values: data },\n        encoding: {\n        x: {\n            field: headers[0],      // X-Axis (e.g. date)\n            type: \"ordinal\",\t    \n            axis: { title: \"\" }\n        },\n        y: {\n            field: headers[2],      // Rank values\n            type: \"ordinal\",\n            axis: false\n        },\n        order: {\n            field: headers[0],\n            type: \"temporal\"      \n        }\n        },\n        layer: [\n        {\n            mark: { type: \"line\", interpolate: \"monotone\" },\n            encoding: {\n            color: {\n                field: headers[1],   // Category\n                type: \"nominal\",\n                legend: false\n            }\n            }\n        },\n        {\n            mark: { type: \"circle\", size: 400, tooltip: true },\n            encoding: {\n            color: {\n                field: headers[1],\n                type: \"nominal\",\n                legend: false\n            }\n            }\n        },\n        {\n            mark: { type: \"text\", color: \"white\" },\n            encoding: {\n            text: { field: headers[2] }\n            }\n        },\n        {\n            // Left-side labels\n            transform: [\n            { window: [{ op: \"rank\", as: \"rank\" }], sort: [{ field: headers[0], order: \"descending\" }] },\n            { filter: \"datum.rank === 1\" }\n            ],\n            mark: {\n            type: \"text\",\n            align: \"left\",\n            baseline: \"middle\",\n            dx: 15,\n            fontWeight: \"bold\",\n            fontSize: 12\n            },\n            encoding: {\n            text: { field: headers[1], type: \"nominal\" },\n            color: { field: headers[1], type: \"nominal\", legend: false }\n            }\n        },\n        {\n            // Right-side labels\n            transform: [\n            { window: [{ op: \"rank\", as: \"rank\" }], sort: [{ field: headers[0], order: \"ascending\" }] },\n            { filter: \"datum.rank === 1\" }\n            ],\n            mark: {\n            type: \"text\",\n            align: \"right\",\n            baseline: \"middle\",\n            dx: -15,\n            fontWeight: \"bold\",\n            fontSize: 12\n            },\n            encoding: {\n            text: { field: headers[1], type: \"nominal\" },\n            color: { field: headers[1], type: \"nominal\", legend: false }\n            }\n        }\n        ],\n        config: {\n        view: { stroke: \"transparent\" },\n        line: { strokeWidth: 3, strokeCap: \"round\", strokeJoin: \"round\" },\n        axis: {\n            ticks: false,\n            grid: false,\n            domain: false,\n            labelColor: \"#666666\",\n            labelFontSize: 12\n        }\n        }\n      };\n      }\n\n      else if (chartType === \"ribbon\") {\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Ribbon chart from Excel selection\",\n        background: \"transparent\",\n        config: { view: { stroke: \"transparent\" }},\n        data: { values: data },\n        layer: [\n        {\n            mark: { type: \"area\", interpolate: \"monotone\", tooltip: true },\n            encoding: {\n            x: {\n                field: headers[0],\n                type: \"ordinal\" // temporal change to \"ordinal\" if your first col is not a date\n            },\n            y: {\n                aggregate: \"sum\",\n                field: headers[2],\n                type: \"quantitative\",\n                axis: null,\n                stack: \"center\"\n            },\n            color: {\n                field: headers[1],\n                type: \"nominal\"\n            },\n            order: {\n                aggregate: \"sum\",\n                field: headers[2],\n                type: \"quantitative\"\n            }\n            }\n        }\n        ],\n        config: {\n        view: { stroke: \"transparent\" },\n        axis: {\n            ticks: false,\n            grid: true,\n            gridColor: \"white\",\n            gridWidth: 3,\n            domain: false,\n            labelColor: \"#666666\"\n        },\n        legend: {\n            titleFont: \"Segoe UI\",\n            titleFontWeight: \"bold\",\n            titleColor: \"#666666\",\n            labelFont: \"Segoe UI\",\n            labelColor: \"#666666\",\n            symbolType: \"circle\",\n            symbolSize: 75\n        }\n        }\n      };\n      }\n\n      else if (chartType === \"ridgeline\") {\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n        description: \"Ridgeline (Joyplot) chart from Excel selection\",\n        background: \"transparent\",\n        config: { view: { stroke: \"transparent\" }},\n        data: { values: data },\n        mark: {\n        type: \"area\",\n        fillOpacity: 0.7,\n        strokeOpacity: 1,\n        strokeWidth: 1,\n        interpolate: \"monotone\"\n        },\n        width: 400,\n        height: 20,\n        encoding: {\n        x: {\n            field: headers[0],       // date/time column\n            type: \"ordinal\",\n            title: headers[0]\n        },\n        y: {\n            aggregate: \"sum\",\n            field: headers[2],       // value column\n            type: \"quantitative\",\n            scale: { range: [20, -40] },\n            axis: {\n            title: null,\n            values: [0],\n            domain: false,\n            labels: false,\n            ticks: false\n            }\n        },\n        row: {\n            field: headers[1],       // category column\n            type: \"nominal\",\n            title: headers[1],\n            header: {\n            title: null,\n            labelAngle: 0,\n            labelOrient: \"left\",\n            labelAlign: \"left\",\n            labelPadding: 0\n            },\n            sort: { field: headers[0], op: \"max\", order: \"ascending\" }\n        },\n        fill: {\n            field: headers[1],\n            type: \"nominal\",\n            legend: null,\n            scale: { scheme: \"plasma\" }\n        }\n        },\n        resolve: { scale: { y: \"independent\" } },\n        config: {\n        view: { stroke: \"transparent\" },\n        facet: { spacing: 20 },\n        header: {\n            labelFontSize: 12,\n            labelFontWeight: 500,\n            labelAngle: 0,\n            labelAnchor: \"end\",\n            labelOrient: \"top\",\n            labelPadding: -19\n        },\n        axis: {\n            domain: false,\n            grid: false,\n            ticks: false,\n            tickCount: 5,\n            labelFontSize: 12,\n            titleFontSize: 12,\n            titleFontWeight: 400,\n            titleColor: \"#605E5C\"\n        }\n        }\n      };\n      }\n\n      else if (chartType === \"wordcloud\") {\n      spec = {\n        $schema: \"https://vega.github.io/schema/vega/v5.json\",\n        description: \"Word cloud from Excel selection\",\n        width: 800,\n        height: 400,\n        padding: 0,\n        \n        data: [\n        {\n            name: \"table\",\n            values: data,\n            transform: [\n            {\n                type: \"countpattern\",\n                field: headers[0], // Use first column as text source\n                case: \"upper\",\n                pattern: \"[\\\\w']{3,}\",\n                stopwords: \"(i|me|my|myself|we|us|our|ours|ourselves|you|your|yours|yourself|yourselves|he|him|his|himself|she|her|hers|herself|it|its|itself|they|them|their|theirs|themselves|what|which|who|whom|whose|this|that|these|those|am|is|are|was|were|be|been|being|have|has|had|having|do|does|did|doing|will|would|should|can|could|ought|i'm|you're|he's|she's|it's|we're|they're|i've|you've|we've|they've|i'd|you'd|he'd|she'd|we'd|they'd|i'll|you'll|he'll|she'll|we'll|they'll|isn't|aren't|wasn't|weren't|hasn't|haven't|hadn't|doesn't|don't|didn't|won't|wouldn't|shan't|shouldn't|can't|cannot|couldn't|mustn't|let's|that's|who's|what's|here's|there's|when's|where's|why's|how's|a|an|the|and|but|if|or|because|as|until|while|of|at|by|for|with|about|against|between|into|through|during|before|after|above|below|to|from|up|upon|down|in|out|on|off|over|under|again|further|then|once|here|there|when|where|why|how|all|any|both|each|few|more|most|other|some|such|no|nor|not|only|own|same|so|than|too|very|say|says|said|shall)\"\n            },\n            {\n                type: \"formula\", \n                as: \"angle\",\n                expr: \"[-45, 0, 45][~~(random() * 3)]\"\n            },\n            {\n                type: \"formula\", \n                as: \"weight\",\n                expr: \"if(datum.count > 10, 600, 300)\"\n            }\n            ]\n        }\n        ],\n        \n        scales: [\n        {\n            name: \"color\",\n            type: \"ordinal\",\n            domain: { data: \"table\", field: \"text\" },\n            range: [\"#d5a928\", \"#652c90\", \"#939597\", \"#2563eb\", \"#dc2626\", \"#059669\"]\n        }\n        ],\n        \n        marks: [\n        {\n            type: \"text\",\n            from: { data: \"table\" },\n            encode: {\n            enter: {\n                text: { field: \"text\" },\n                align: { value: \"center\" },\n                baseline: { value: \"alphabetic\" },\n                fill: { scale: \"color\", field: \"text\" }\n            },\n            update: {\n                fillOpacity: { value: 1 }\n            },\n            hover: {\n                fillOpacity: { value: 0.5 }\n            }\n            },\n            transform: [\n            {\n                type: \"wordcloud\",\n                size: [800, 400],\n                text: { field: \"text\" },\n                rotate: { field: \"datum.angle\" },\n                font: \"Helvetica Neue, Arial\",\n                fontSize: { field: \"datum.count\" },\n                fontWeight: { field: \"datum.weight\" },\n                fontSizeRange: [12, 56],\n                padding: 2\n            }\n            ]\n        }\n        ]\n      };\n      }\n\n      else {\n        spec = {\n          $schema: \"https://vega.github.io/schema/vega-lite/v6.json\",\n          description: \"Chart from Excel selection\",\n          background: \"transparent\",\n          config: { view: { stroke: \"transparent\" }},\n          data: { values: data },\n          mark: chartType,\n          encoding: {\n            x: { field: headers[0], type: \"quantitative\" },\n            y: { field: headers[1], type: \"quantitative\" }\n          }\n        };\n      }\n\n      // Render hidden chart\n      const hiddenDiv = document.createElement(\"div\");\n      hiddenDiv.style.display = \"none\";\n      document.body.appendChild(hiddenDiv);\n\n      const result = await vegaEmbed(hiddenDiv, spec, { actions: false });\n      const view = result.view;\n\n      // Export chart -> PNG\n      const pngUrl = await view.toImageURL(\"png\");\n      const response = await fetch(pngUrl);\n      const blob = await response.blob();\n\n      const reader = new FileReader();\n      reader.onloadend = async () => {\n      const base64data = reader.result.split(\",\")[1];\n\n      // Insert picture above selection\n      const image = sheet.shapes.addImage(base64data);\n      image.left = range.left;\n      image.top = range.top;\n      image.lockAspectRatio = true; // keep proportions\n\n      await context.sync();\n      };\n\n      reader.readAsDataURL(blob);\n      \n      // Clean up hidden div\n      document.body.removeChild(hiddenDiv);\n    });\n  } catch (error) {\n    console.error(error);\n  }\n}","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.js\", import.meta.url);\n// Module\nvar code = \"<!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Vega Chart</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/vega@6\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/vega-lite@6\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/vega-embed@6\\\"><\" + \"/script> <\" + \"script type=\\\"module\\\" src=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\"><\" + \"/script> <style>body{font-family:-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif;margin:20px;line-height:1.4}.chart-selector{margin-bottom:15px}label{display:block;margin-bottom:5px;font-weight:600;color:#323130}select{width:100%;padding:8px 12px;border:1px solid #8a8886;border-radius:4px;font-size:14px}button{background-color:#0078d4;color:#fff;border:none;padding:10px 20px;border-radius:4px;font-size:14px;cursor:pointer;width:100%;margin-bottom:15px}button:hover{background-color:#106ebe}.data-requirements{background-color:#f8f9fa;border:1px solid #e1e4e8;border-radius:6px;padding:12px;margin-top:10px;font-size:13px}.data-requirements h4{margin:0 0 8px 0;color:#24292f;font-size:14px}.data-requirements ul{margin:0;padding-left:18px}.data-requirements li{margin-bottom:4px}.hidden{display:none}</style> </head> <body> <h2></h2> <div class=\\\"chart-selector\\\"> <label for=\\\"chartType\\\">Select Chart Type:</label> <select id=\\\"chartType\\\"> <option value=\\\"point\\\">Scatter</option> <option value=\\\"bar\\\">Bar</option> <option value=\\\"line\\\">Line</option> <option value=\\\"area\\\">Area</option> <option value=\\\"pie\\\">Pie</option> <option value=\\\"radial\\\">Radial</option> <option value=\\\"arc\\\">Arc</option> <option value=\\\"wordcloud\\\">Wordcloud</option> <option value=\\\"bullet\\\">Bullet</option> <option value=\\\"mekko\\\">Mekko</option> <option value=\\\"heatmap\\\">Heatmap</option> <option value=\\\"bump\\\">Bump</option> <option value=\\\"waffle\\\">Waffle</option> <option value=\\\"lollipop\\\">Lollipop</option> <option value=\\\"violin\\\">Violin</option> <option value=\\\"ribbon\\\">Ribbon</option> <option value=\\\"ridgeline\\\">Ridgeline</option> <option value=\\\"deviation\\\">Deviation</option> <option value=\\\"waterfall\\\">Waterfall</option> </select> </div> <button id=\\\"drawChart\\\">Generate Chart</button> <div id=\\\"req-point\\\" class=\\\"data-requirements\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> X-axis values (numbers)</li> <li><strong>Column 2:</strong> Y-axis values (numbers)</li> </ul> </div> <div id=\\\"req-bar\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Categories or X-axis values</li> <li><strong>Column 2:</strong> Values (numbers)</li> </ul> </div> <div id=\\\"req-line\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> X-axis values (often dates/time)</li> <li><strong>Column 2:</strong> Y-axis values (numbers)</li> </ul> </div> <div id=\\\"req-area\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> X-axis values (often dates/time)</li> <li><strong>Column 2:</strong> Y-axis values (numbers)</li> </ul> </div> <div id=\\\"req-pie\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category names (e.g., \\\"Product A\\\", \\\"Product B\\\")</li> <li><strong>Column 2:</strong> Values (numbers for slice sizes)</li> </ul> </div> <div id=\\\"req-radial\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category names</li> <li><strong>Column 2:</strong> Values (determines both angle and radius)</li> </ul> </div> <div id=\\\"req-arc\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Source node/entity (e.g., \\\"Person A\\\", \\\"Department 1\\\")</li> <li><strong>Column 2:</strong> Target node/entity (e.g., \\\"Person B\\\", \\\"Department 2\\\")</li> <li><strong>Column 3:</strong> Connection strength/weight (numbers, optional)</li> <li><strong>Column 4:</strong> Group/Category (optional, for coloring nodes)</li> </ul> </div> <div id=\\\"req-wordcloud\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Text data (sentences, phrases, or words)</li> </ul> </div> <div id=\\\"req-lollipop\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category names (e.g., \\\"Products\\\", \\\"Regions\\\", \\\"Teams\\\")</li> <li><strong>Column 2:</strong> Values (numbers for stick length and circle size)</li> </ul> </div> <div id=\\\"req-waffle\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Category names (e.g., \\\"Product A\\\", \\\"Product B\\\")</li> <li><strong>Column 2:</strong> Values (numbers that will be converted to percentages)</li> </ul> </div> <div id=\\\"req-bullet\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Title/Metric name (e.g., \\\"Revenue\\\", \\\"Profit\\\")</li> <li><strong>Column 2:</strong> Poor range max</li> <li><strong>Column 3:</strong> Satisfactory range max</li> <li><strong>Column 4:</strong> Good range max</li> <li><strong>Column 5:</strong> Actual value</li> <li><strong>Column 6:</strong> Forecast value (optional)</li> <li><strong>Column 7:</strong> Target value (marker)</li> </ul> </div> <div id=\\\"req-mekko\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Primary categories (e.g., \\\"Continent\\\", \\\"Region\\\")</li> <li><strong>Column 2:</strong> Sub-categories (e.g., \\\"Country\\\", \\\"Product\\\")</li> <li><strong>Column 3:</strong> Values (numbers for sizing)</li> </ul> </div> <div id=\\\"req-heatmap\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Y-axis categories (e.g., \\\"Months\\\", \\\"Products\\\", \\\"Regions\\\")</li> <li><strong>Column 2:</strong> X-axis categories (e.g., \\\"Days\\\", \\\"Quarters\\\", \\\"Sales Reps\\\")</li> <li><strong>Column 3:</strong> Values (numbers for color intensity)</li> </ul> </div> <div id=\\\"req-bump\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Time periods (dates in YYYY-MM-DD format)</li> <li><strong>Column 2:</strong> Categories (e.g., \\\"Team A\\\", \\\"Team B\\\")</li> <li><strong>Column 3:</strong> Rank values (1, 2, 3, etc.)</li> </ul> </div> <div id=\\\"req-violin\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Categories/Groups (e.g., \\\"Country A\\\", \\\"Product Line\\\", \\\"Department\\\")</li> <li><strong>Column 2:</strong> Continuous values (numbers for distribution analysis)</li> </ul> </div> <div id=\\\"req-ribbon\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Time periods (dates/periods)</li> <li><strong>Column 2:</strong> Categories (different series)</li> <li><strong>Column 3:</strong> Values (numbers)</li> </ul> </div> <div id=\\\"req-ridgeline\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Time periods/X-axis values</li> <li><strong>Column 2:</strong> Categories (creates separate ridges)</li> <li><strong>Column 3:</strong> Values (creates distribution shape)</li> </ul> </div> <div id=\\\"req-deviation\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Date/Period</li> <li><strong>Column 2:</strong> Actual values</li> <li><strong>Column 3:</strong> Target/Baseline values</li> </ul> </div> <div id=\\\"req-waterfall\\\" class=\\\"data-requirements hidden\\\"> <h4>Data Requirements:</h4> <ul> <li><strong>Column 1:</strong> Categories/Labels (e.g., \\\"Begin\\\", \\\"Q1\\\", \\\"Q2\\\", \\\"End\\\")</li> <li><strong>Column 2:</strong> Amount values (positive/negative numbers)</li> </ul> </div> <div id=\\\"chart\\\"></div> <\" + \"script>document.getElementById(\\\"chartType\\\").addEventListener(\\\"change\\\",function(){const e=this.value;document.querySelectorAll(\\\".data-requirements\\\").forEach(e=>e.classList.add(\\\"hidden\\\"));const t=document.getElementById(`req-${e}`);t&&t.classList.remove(\\\"hidden\\\")}),document.addEventListener(\\\"DOMContentLoaded\\\",function(){document.getElementById(\\\"chartType\\\").dispatchEvent(new Event(\\\"change\\\"))})<\" + \"/script> </body> </html>\";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","t","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","bind","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","_invoke","configurable","writable","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_typeof","toPrimitive","String","_toPrimitive","_toPropertyKey","_toConsumableArray","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","toString","slice","constructor","name","_unsupportedIterableToArray","_nonIterableSpread","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","_next","_throw","run","_run","_callee3","_t","_context3","Excel","_ref","_callee2","context","sheet","range","values","headers","rows","data","chartType","spec","processedData","numDataPoints","dynamicWidth","maxAmount","dynamicHeight","_data","edges","nodeMap","nodes","edgesWithIndices","hiddenDiv","result","view","pngUrl","response","blob","reader","_context2","workbook","worksheets","getActiveWorksheet","getSelectedRange","load","sync","console","warn","map","row","h","getElementById","Math","max","min","abs","$schema","description","background","config","stroke","width","height","transform","concat","encoding","x","field","type","sort","axis","scale","layer","mark","title","y2","color","condition","opacity","strokeWidth","xOffset","x2Offset","x2","dy","baseline","text","ranges","measures","markers","outerRadius","theta","padding","top","bottom","left","right","source","fields","ops","as","groupby","offset","order","expr","scales","domain","nice","zero","scheme","op","axes","orient","zindex","format","tickCount","tickSize","labelColor","labelFontWeight","labelFontSize","labelFont","encode","labels","update","signal","marks","fill","fillOpacity","tooltip","interactive","align","font","lineHeight","fontSize","fontWeight","index","target","group","Map","edge","has","set","size","default","count","enter","mult","strokeOpacity","sourceX","targetX","sourceY","targetY","shape","angle","ticks","labelPadding","grid","gridColor","titleFont","titleFontSize","titleColor","legend","autosize","contains","joinaggregate","calculate","aggregate","facet","filled","header","titleFontWeight","symbolType","symbolSize","spacing","column","density","datum","extent","median","bounds","vconcat","cornerRadiusEnd","hconcat","labelAngle","direction","gradientLength","line","strokeCap","strokeJoin","innerRadius","radiusOffset","stack","radius","rangeMin","interpolate","dx","gridWidth","labelOrient","labelAlign","labelAnchor","case","pattern","stopwords","hover","rotate","fontSizeRange","createElement","style","display","body","appendChild","vegaEmbed","actions","toImageURL","fetch","FileReader","onloadend","_callee","base64data","image","_context","split","shapes","addImage","lockAspectRatio","readAsDataURL","removeChild","_x","error","Office","onReady","onclick","URL"],"sourceRoot":""}